/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type Pagination = {
  page?: number | undefined;
  limit: number;
  lastId?: string | null | undefined;
};

/**
 * The direction to sort by
 */
export const Direction = {
  Asc: "asc",
  Desc: "desc",
} as const;
/**
 * The direction to sort by
 */
export type Direction = ClosedEnum<typeof Direction>;

export type SortingProps = {
  /**
   * The path to sort by
   */
  key: string;
  /**
   * The direction to sort by
   */
  direction?: Direction | undefined;
};

export const Operator = {
  And: "and",
  Or: "or",
} as const;
export type Operator = ClosedEnum<typeof Operator>;

export const PostV2LogsQueryFiltersRequestRequestBodyQuery7Operator = {
  Is: "is",
} as const;
export type PostV2LogsQueryFiltersRequestRequestBodyQuery7Operator = ClosedEnum<
  typeof PostV2LogsQueryFiltersRequestRequestBodyQuery7Operator
>;

export const PostV2LogsQueryFiltersRequestRequestBodyQuery7Type = {
  String: "string",
  MultiValueArray: "multi-value-array",
  SingleValueArray: "single-value-array",
  Number: "number",
  Date: "date",
  Object: "object",
  Boolean: "boolean",
} as const;
export type PostV2LogsQueryFiltersRequestRequestBodyQuery7Type = ClosedEnum<
  typeof PostV2LogsQueryFiltersRequestRequestBodyQuery7Type
>;

export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters75 = {
  Is: "is",
  IsBefore: "is_before",
  IsOnOrBefore: "is_on_or_before",
  IsBetween: "is_between",
  IsRelativeToday: "is_relative_today",
  IsRelativeTime: "is_relative_time",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters75 =
  ClosedEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters75
  >;

export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters74 = {
  Contains: "contains",
  DoesNotContain: "does_not_contain",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters74 =
  ClosedEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters74
  >;

export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters73 = {
  Is: "is",
  IsNot: "is_not",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters73 =
  ClosedEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters73
  >;

export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters72 = {
  Equals: "equals",
  IsNotEqual: "is_not_equal",
  IsGreaterThan: "is_greater_than",
  IsLessThan: "is_less_than",
  IsGreaterThanOrEqualTo: "is_greater_than_or_equal_to",
  IsLessThanOrEqualTo: "is_less_than_or_equal_to",
  IsBetween: "is_between",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters72 =
  ClosedEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters72
  >;

export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters71 = {
  Is: "is",
  IsNot: "is_not",
  Contains: "contains",
  DoesNotContain: "does_not_contain",
  StartsWith: "starts_with",
  EndsWith: "ends_with",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters71 =
  ClosedEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters71
  >;

export type PostV2LogsQueryFiltersRequestRequestBodyQuery7HideOperators =
  | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters71
  | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters72
  | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters73
  | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters74
  | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters75;

export type Seven = {
  operator: PostV2LogsQueryFiltersRequestRequestBodyQuery7Operator;
  value?: boolean | undefined;
  type: PostV2LogsQueryFiltersRequestRequestBodyQuery7Type;
  name: string;
  path: string;
  hideOperators?:
    | Array<
      | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters71
      | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters72
      | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters73
      | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters74
      | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters75
    >
    | undefined;
};

export const Operator5 = {
  Equals: "equals",
  IsNotEqual: "is_not_equal",
  IsGreaterThan: "is_greater_than",
  IsLessThan: "is_less_than",
  IsGreaterThanOrEqualTo: "is_greater_than_or_equal_to",
  IsLessThanOrEqualTo: "is_less_than_or_equal_to",
  IsBetween: "is_between",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type Operator5 = ClosedEnum<typeof Operator5>;

export const Operator4 = {
  Is: "is",
  IsBefore: "is_before",
  IsOnOrBefore: "is_on_or_before",
  IsBetween: "is_between",
  IsRelativeToday: "is_relative_today",
  IsRelativeTime: "is_relative_time",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type Operator4 = ClosedEnum<typeof Operator4>;

export const Operator3 = {
  Contains: "contains",
  DoesNotContain: "does_not_contain",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type Operator3 = ClosedEnum<typeof Operator3>;

export const Operator2 = {
  Is: "is",
  IsNot: "is_not",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type Operator2 = ClosedEnum<typeof Operator2>;

export const Operator1 = {
  Is: "is",
  IsNot: "is_not",
  Contains: "contains",
  DoesNotContain: "does_not_contain",
  StartsWith: "starts_with",
  EndsWith: "ends_with",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type Operator1 = ClosedEnum<typeof Operator1>;

export type PostV2LogsQueryFiltersRequestRequestBodyQuery6Operator =
  | Operator1
  | Operator2
  | Operator3
  | Operator4
  | Operator5;

export const PostV2LogsQueryFiltersRequestRequestBodyQuery6Type = {
  String: "string",
  MultiValueArray: "multi-value-array",
  SingleValueArray: "single-value-array",
  Number: "number",
  Date: "date",
  Object: "object",
  Boolean: "boolean",
} as const;
export type PostV2LogsQueryFiltersRequestRequestBodyQuery6Type = ClosedEnum<
  typeof PostV2LogsQueryFiltersRequestRequestBodyQuery6Type
>;

export const PostV2LogsQueryFiltersRequestRequestBodyQuery6OptionsType = {
  String: "string",
  MultiValueArray: "multi-value-array",
  SingleValueArray: "single-value-array",
  Number: "number",
  Date: "date",
  Object: "object",
  Boolean: "boolean",
} as const;
export type PostV2LogsQueryFiltersRequestRequestBodyQuery6OptionsType =
  ClosedEnum<typeof PostV2LogsQueryFiltersRequestRequestBodyQuery6OptionsType>;

export const PostV2LogsQueryHideOperatorsRequestRequestBodyQuery5 = {
  Is: "is",
  IsBefore: "is_before",
  IsOnOrBefore: "is_on_or_before",
  IsBetween: "is_between",
  IsRelativeToday: "is_relative_today",
  IsRelativeTime: "is_relative_time",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequestRequestBodyQuery5 = ClosedEnum<
  typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQuery5
>;

export const PostV2LogsQueryHideOperatorsRequestRequestBodyQuery4 = {
  Contains: "contains",
  DoesNotContain: "does_not_contain",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequestRequestBodyQuery4 = ClosedEnum<
  typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQuery4
>;

export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters3 = {
  Is: "is",
  IsNot: "is_not",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters3 =
  ClosedEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters3
  >;

export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters2 = {
  Equals: "equals",
  IsNotEqual: "is_not_equal",
  IsGreaterThan: "is_greater_than",
  IsLessThan: "is_less_than",
  IsGreaterThanOrEqualTo: "is_greater_than_or_equal_to",
  IsLessThanOrEqualTo: "is_less_than_or_equal_to",
  IsBetween: "is_between",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters2 =
  ClosedEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters2
  >;

export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters1 = {
  Is: "is",
  IsNot: "is_not",
  Contains: "contains",
  DoesNotContain: "does_not_contain",
  StartsWith: "starts_with",
  EndsWith: "ends_with",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters1 =
  ClosedEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters1
  >;

export type PostV2LogsQueryFiltersRequestRequestBodyQueryHideOperators =
  | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters1
  | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters2
  | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters3
  | PostV2LogsQueryHideOperatorsRequestRequestBodyQuery4
  | PostV2LogsQueryHideOperatorsRequestRequestBodyQuery5;

export type PostV2LogsQueryFiltersOptions = {
  name: string;
  path: string;
  type: PostV2LogsQueryFiltersRequestRequestBodyQuery6OptionsType;
  hideOperators?:
    | Array<
      | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters1
      | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters2
      | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters3
      | PostV2LogsQueryHideOperatorsRequestRequestBodyQuery4
      | PostV2LogsQueryHideOperatorsRequestRequestBodyQuery5
    >
    | undefined;
  id: string;
};

export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters5 = {
  Is: "is",
  IsBefore: "is_before",
  IsOnOrBefore: "is_on_or_before",
  IsBetween: "is_between",
  IsRelativeToday: "is_relative_today",
  IsRelativeTime: "is_relative_time",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters5 =
  ClosedEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters5
  >;

export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters4 = {
  Contains: "contains",
  DoesNotContain: "does_not_contain",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters4 =
  ClosedEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters4
  >;

export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters63 = {
  Is: "is",
  IsNot: "is_not",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters63 =
  ClosedEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters63
  >;

export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters62 = {
  Equals: "equals",
  IsNotEqual: "is_not_equal",
  IsGreaterThan: "is_greater_than",
  IsLessThan: "is_less_than",
  IsGreaterThanOrEqualTo: "is_greater_than_or_equal_to",
  IsLessThanOrEqualTo: "is_less_than_or_equal_to",
  IsBetween: "is_between",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters62 =
  ClosedEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters62
  >;

export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters61 = {
  Is: "is",
  IsNot: "is_not",
  Contains: "contains",
  DoesNotContain: "does_not_contain",
  StartsWith: "starts_with",
  EndsWith: "ends_with",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters61 =
  ClosedEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters61
  >;

export type PostV2LogsQueryFiltersRequestRequestBodyQuery6HideOperators =
  | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters61
  | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters62
  | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters63
  | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters4
  | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters5;

export type Six = {
  operator: Operator1 | Operator2 | Operator3 | Operator4 | Operator5;
  value?: any | null | undefined;
  type: PostV2LogsQueryFiltersRequestRequestBodyQuery6Type;
  options: Array<PostV2LogsQueryFiltersOptions>;
  selectedOptionId: string | null;
  name: string;
  path: string;
  hideOperators?:
    | Array<
      | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters61
      | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters62
      | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters63
      | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters4
      | PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters5
    >
    | undefined;
};

export const PostV2LogsQueryFiltersRequestRequestBodyQueryOperator = {
  Is: "is",
  IsNot: "is_not",
  Contains: "contains",
  DoesNotContain: "does_not_contain",
  StartsWith: "starts_with",
  EndsWith: "ends_with",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryFiltersRequestRequestBodyQueryOperator = ClosedEnum<
  typeof PostV2LogsQueryFiltersRequestRequestBodyQueryOperator
>;

export const PostV2LogsQueryFiltersRequestRequestBodyQueryType = {
  String: "string",
  MultiValueArray: "multi-value-array",
  SingleValueArray: "single-value-array",
  Number: "number",
  Date: "date",
  Object: "object",
  Boolean: "boolean",
} as const;
export type PostV2LogsQueryFiltersRequestRequestBodyQueryType = ClosedEnum<
  typeof PostV2LogsQueryFiltersRequestRequestBodyQueryType
>;

export const PostV2LogsQueryHideOperatorsRequestRequestBody5 = {
  Is: "is",
  IsBefore: "is_before",
  IsOnOrBefore: "is_on_or_before",
  IsBetween: "is_between",
  IsRelativeToday: "is_relative_today",
  IsRelativeTime: "is_relative_time",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequestRequestBody5 = ClosedEnum<
  typeof PostV2LogsQueryHideOperatorsRequestRequestBody5
>;

export const PostV2LogsQueryHideOperatorsRequestRequestBody4 = {
  Contains: "contains",
  DoesNotContain: "does_not_contain",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequestRequestBody4 = ClosedEnum<
  typeof PostV2LogsQueryHideOperatorsRequestRequestBody4
>;

export const PostV2LogsQueryHideOperatorsRequestRequestBodyQuery3 = {
  Is: "is",
  IsNot: "is_not",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequestRequestBodyQuery3 = ClosedEnum<
  typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQuery3
>;

export const PostV2LogsQueryHideOperatorsRequestRequestBodyQuery2 = {
  Equals: "equals",
  IsNotEqual: "is_not_equal",
  IsGreaterThan: "is_greater_than",
  IsLessThan: "is_less_than",
  IsGreaterThanOrEqualTo: "is_greater_than_or_equal_to",
  IsLessThanOrEqualTo: "is_less_than_or_equal_to",
  IsBetween: "is_between",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequestRequestBodyQuery2 = ClosedEnum<
  typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQuery2
>;

export const PostV2LogsQueryHideOperatorsRequestRequestBodyQuery1 = {
  Is: "is",
  IsNot: "is_not",
  Contains: "contains",
  DoesNotContain: "does_not_contain",
  StartsWith: "starts_with",
  EndsWith: "ends_with",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequestRequestBodyQuery1 = ClosedEnum<
  typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQuery1
>;

export type PostV2LogsQueryFiltersRequestRequestBodyHideOperators =
  | PostV2LogsQueryHideOperatorsRequestRequestBodyQuery1
  | PostV2LogsQueryHideOperatorsRequestRequestBodyQuery2
  | PostV2LogsQueryHideOperatorsRequestRequestBodyQuery3
  | PostV2LogsQueryHideOperatorsRequestRequestBody4
  | PostV2LogsQueryHideOperatorsRequestRequestBody5;

export type Filters5 = {
  operator: PostV2LogsQueryFiltersRequestRequestBodyQueryOperator;
  value: string | null;
  type: PostV2LogsQueryFiltersRequestRequestBodyQueryType;
  name: string;
  path: string;
  hideOperators?:
    | Array<
      | PostV2LogsQueryHideOperatorsRequestRequestBodyQuery1
      | PostV2LogsQueryHideOperatorsRequestRequestBodyQuery2
      | PostV2LogsQueryHideOperatorsRequestRequestBodyQuery3
      | PostV2LogsQueryHideOperatorsRequestRequestBody4
      | PostV2LogsQueryHideOperatorsRequestRequestBody5
    >
    | undefined;
};

export const PostV2LogsQueryFiltersRequestRequestBodyOperator = {
  Equals: "equals",
  IsNotEqual: "is_not_equal",
  IsGreaterThan: "is_greater_than",
  IsLessThan: "is_less_than",
  IsGreaterThanOrEqualTo: "is_greater_than_or_equal_to",
  IsLessThanOrEqualTo: "is_less_than_or_equal_to",
  IsBetween: "is_between",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryFiltersRequestRequestBodyOperator = ClosedEnum<
  typeof PostV2LogsQueryFiltersRequestRequestBodyOperator
>;

export type PostV2LogsQueryFiltersValue = number | Array<number>;

export const PostV2LogsQueryFiltersRequestRequestBodyType = {
  String: "string",
  MultiValueArray: "multi-value-array",
  SingleValueArray: "single-value-array",
  Number: "number",
  Date: "date",
  Object: "object",
  Boolean: "boolean",
} as const;
export type PostV2LogsQueryFiltersRequestRequestBodyType = ClosedEnum<
  typeof PostV2LogsQueryFiltersRequestRequestBodyType
>;

export const PostV2LogsQueryHideOperatorsRequest5 = {
  Is: "is",
  IsBefore: "is_before",
  IsOnOrBefore: "is_on_or_before",
  IsBetween: "is_between",
  IsRelativeToday: "is_relative_today",
  IsRelativeTime: "is_relative_time",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequest5 = ClosedEnum<
  typeof PostV2LogsQueryHideOperatorsRequest5
>;

export const PostV2LogsQueryHideOperatorsRequest4 = {
  Contains: "contains",
  DoesNotContain: "does_not_contain",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequest4 = ClosedEnum<
  typeof PostV2LogsQueryHideOperatorsRequest4
>;

export const PostV2LogsQueryHideOperatorsRequestRequestBody3 = {
  Is: "is",
  IsNot: "is_not",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequestRequestBody3 = ClosedEnum<
  typeof PostV2LogsQueryHideOperatorsRequestRequestBody3
>;

export const PostV2LogsQueryHideOperatorsRequestRequestBody2 = {
  Equals: "equals",
  IsNotEqual: "is_not_equal",
  IsGreaterThan: "is_greater_than",
  IsLessThan: "is_less_than",
  IsGreaterThanOrEqualTo: "is_greater_than_or_equal_to",
  IsLessThanOrEqualTo: "is_less_than_or_equal_to",
  IsBetween: "is_between",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequestRequestBody2 = ClosedEnum<
  typeof PostV2LogsQueryHideOperatorsRequestRequestBody2
>;

export const PostV2LogsQueryHideOperatorsRequestRequestBody1 = {
  Is: "is",
  IsNot: "is_not",
  Contains: "contains",
  DoesNotContain: "does_not_contain",
  StartsWith: "starts_with",
  EndsWith: "ends_with",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequestRequestBody1 = ClosedEnum<
  typeof PostV2LogsQueryHideOperatorsRequestRequestBody1
>;

export type PostV2LogsQueryFiltersRequestHideOperators =
  | PostV2LogsQueryHideOperatorsRequestRequestBody1
  | PostV2LogsQueryHideOperatorsRequestRequestBody2
  | PostV2LogsQueryHideOperatorsRequestRequestBody3
  | PostV2LogsQueryHideOperatorsRequest4
  | PostV2LogsQueryHideOperatorsRequest5;

export type Filters4 = {
  operator: PostV2LogsQueryFiltersRequestRequestBodyOperator;
  value: number | Array<number> | null;
  type: PostV2LogsQueryFiltersRequestRequestBodyType;
  name: string;
  path: string;
  hideOperators?:
    | Array<
      | PostV2LogsQueryHideOperatorsRequestRequestBody1
      | PostV2LogsQueryHideOperatorsRequestRequestBody2
      | PostV2LogsQueryHideOperatorsRequestRequestBody3
      | PostV2LogsQueryHideOperatorsRequest4
      | PostV2LogsQueryHideOperatorsRequest5
    >
    | undefined;
};

export const PostV2LogsQueryFiltersRequestOperator = {
  Is: "is",
  IsBefore: "is_before",
  IsOnOrBefore: "is_on_or_before",
  IsBetween: "is_between",
  IsRelativeToday: "is_relative_today",
  IsRelativeTime: "is_relative_time",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryFiltersRequestOperator = ClosedEnum<
  typeof PostV2LogsQueryFiltersRequestOperator
>;

export const Unit2 = {
  HoursAgo: "hours_ago",
  MinutesAgo: "minutes_ago",
} as const;
export type Unit2 = ClosedEnum<typeof Unit2>;

export const Unit1 = {
  Day: "day",
  Week: "week",
  Month: "month",
  Year: "year",
} as const;
export type Unit1 = ClosedEnum<typeof Unit1>;

export type Unit = Unit1 | Unit2;

export const RelativeTime = {
  Today: "today",
  Yesterday: "yesterday",
  OneWeekAgo: "one_week_ago",
  OneMonthAgo: "one_month_ago",
  CustomDate: "custom_date",
} as const;
export type RelativeTime = ClosedEnum<typeof RelativeTime>;

export const FiltersDirection = {
  Present: "present",
  Past: "past",
} as const;
export type FiltersDirection = ClosedEnum<typeof FiltersDirection>;

export type Criteria = {
  unit?: Unit1 | Unit2 | undefined;
  count?: number | null | undefined;
  relativeTime?: RelativeTime | undefined;
  customDate?: string | null | undefined;
  direction?: FiltersDirection | undefined;
  startDate?: string | null | undefined;
  endDate?: string | null | undefined;
};

export const Mode = {
  Date: "date",
  Datetime: "datetime",
} as const;
export type Mode = ClosedEnum<typeof Mode>;

export type FiltersValue = {
  criteria: Criteria | null;
  mode: Mode;
};

export const PostV2LogsQueryFiltersRequestType = {
  String: "string",
  MultiValueArray: "multi-value-array",
  SingleValueArray: "single-value-array",
  Number: "number",
  Date: "date",
  Object: "object",
  Boolean: "boolean",
} as const;
export type PostV2LogsQueryFiltersRequestType = ClosedEnum<
  typeof PostV2LogsQueryFiltersRequestType
>;

export const PostV2LogsQueryHideOperators5 = {
  Is: "is",
  IsBefore: "is_before",
  IsOnOrBefore: "is_on_or_before",
  IsBetween: "is_between",
  IsRelativeToday: "is_relative_today",
  IsRelativeTime: "is_relative_time",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperators5 = ClosedEnum<
  typeof PostV2LogsQueryHideOperators5
>;

export const PostV2LogsQueryHideOperators4 = {
  Contains: "contains",
  DoesNotContain: "does_not_contain",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperators4 = ClosedEnum<
  typeof PostV2LogsQueryHideOperators4
>;

export const PostV2LogsQueryHideOperatorsRequest3 = {
  Is: "is",
  IsNot: "is_not",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequest3 = ClosedEnum<
  typeof PostV2LogsQueryHideOperatorsRequest3
>;

export const PostV2LogsQueryHideOperatorsRequest2 = {
  Equals: "equals",
  IsNotEqual: "is_not_equal",
  IsGreaterThan: "is_greater_than",
  IsLessThan: "is_less_than",
  IsGreaterThanOrEqualTo: "is_greater_than_or_equal_to",
  IsLessThanOrEqualTo: "is_less_than_or_equal_to",
  IsBetween: "is_between",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequest2 = ClosedEnum<
  typeof PostV2LogsQueryHideOperatorsRequest2
>;

export const PostV2LogsQueryHideOperatorsRequest1 = {
  Is: "is",
  IsNot: "is_not",
  Contains: "contains",
  DoesNotContain: "does_not_contain",
  StartsWith: "starts_with",
  EndsWith: "ends_with",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperatorsRequest1 = ClosedEnum<
  typeof PostV2LogsQueryHideOperatorsRequest1
>;

export type PostV2LogsQueryFiltersHideOperators =
  | PostV2LogsQueryHideOperatorsRequest1
  | PostV2LogsQueryHideOperatorsRequest2
  | PostV2LogsQueryHideOperatorsRequest3
  | PostV2LogsQueryHideOperators4
  | PostV2LogsQueryHideOperators5;

export type Filters3 = {
  operator: PostV2LogsQueryFiltersRequestOperator;
  value: FiltersValue;
  type: PostV2LogsQueryFiltersRequestType;
  name: string;
  path: string;
  hideOperators?:
    | Array<
      | PostV2LogsQueryHideOperatorsRequest1
      | PostV2LogsQueryHideOperatorsRequest2
      | PostV2LogsQueryHideOperatorsRequest3
      | PostV2LogsQueryHideOperators4
      | PostV2LogsQueryHideOperators5
    >
    | undefined;
};

export const PostV2LogsQueryFiltersOperator = {
  Contains: "contains",
  DoesNotContain: "does_not_contain",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryFiltersOperator = ClosedEnum<
  typeof PostV2LogsQueryFiltersOperator
>;

export const PostV2LogsQueryFiltersType = {
  String: "string",
  MultiValueArray: "multi-value-array",
  SingleValueArray: "single-value-array",
  Number: "number",
  Date: "date",
  Object: "object",
  Boolean: "boolean",
} as const;
export type PostV2LogsQueryFiltersType = ClosedEnum<
  typeof PostV2LogsQueryFiltersType
>;

export type FiltersOptions = string | number;

export type FiltersOptionsMap = string | number;

export const HideOperators5 = {
  Is: "is",
  IsBefore: "is_before",
  IsOnOrBefore: "is_on_or_before",
  IsBetween: "is_between",
  IsRelativeToday: "is_relative_today",
  IsRelativeTime: "is_relative_time",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type HideOperators5 = ClosedEnum<typeof HideOperators5>;

export const HideOperators4 = {
  Contains: "contains",
  DoesNotContain: "does_not_contain",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type HideOperators4 = ClosedEnum<typeof HideOperators4>;

export const PostV2LogsQueryHideOperators3 = {
  Is: "is",
  IsNot: "is_not",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperators3 = ClosedEnum<
  typeof PostV2LogsQueryHideOperators3
>;

export const PostV2LogsQueryHideOperators2 = {
  Equals: "equals",
  IsNotEqual: "is_not_equal",
  IsGreaterThan: "is_greater_than",
  IsLessThan: "is_less_than",
  IsGreaterThanOrEqualTo: "is_greater_than_or_equal_to",
  IsLessThanOrEqualTo: "is_less_than_or_equal_to",
  IsBetween: "is_between",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperators2 = ClosedEnum<
  typeof PostV2LogsQueryHideOperators2
>;

export const PostV2LogsQueryHideOperators1 = {
  Is: "is",
  IsNot: "is_not",
  Contains: "contains",
  DoesNotContain: "does_not_contain",
  StartsWith: "starts_with",
  EndsWith: "ends_with",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type PostV2LogsQueryHideOperators1 = ClosedEnum<
  typeof PostV2LogsQueryHideOperators1
>;

export type FiltersHideOperators =
  | PostV2LogsQueryHideOperators1
  | PostV2LogsQueryHideOperators2
  | PostV2LogsQueryHideOperators3
  | HideOperators4
  | HideOperators5;

export type Filters2 = {
  operator: PostV2LogsQueryFiltersOperator;
  value: Array<any> | null;
  type: PostV2LogsQueryFiltersType;
  options: Array<string | number>;
  optionsMap?: { [k: string]: string | number } | null | undefined;
  imageUrlMap?: { [k: string]: string } | undefined;
  name: string;
  path: string;
  hideOperators?:
    | Array<
      | PostV2LogsQueryHideOperators1
      | PostV2LogsQueryHideOperators2
      | PostV2LogsQueryHideOperators3
      | HideOperators4
      | HideOperators5
    >
    | undefined;
};

export const FiltersOperator = {
  Is: "is",
  IsNot: "is_not",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type FiltersOperator = ClosedEnum<typeof FiltersOperator>;

export const FiltersType = {
  String: "string",
  MultiValueArray: "multi-value-array",
  SingleValueArray: "single-value-array",
  Number: "number",
  Date: "date",
  Object: "object",
  Boolean: "boolean",
} as const;
export type FiltersType = ClosedEnum<typeof FiltersType>;

export type Options = string | number;

export type OptionsMap = string | number;

export const Five = {
  Is: "is",
  IsBefore: "is_before",
  IsOnOrBefore: "is_on_or_before",
  IsBetween: "is_between",
  IsRelativeToday: "is_relative_today",
  IsRelativeTime: "is_relative_time",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type Five = ClosedEnum<typeof Five>;

export const Four = {
  Contains: "contains",
  DoesNotContain: "does_not_contain",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type Four = ClosedEnum<typeof Four>;

export const HideOperators3 = {
  Is: "is",
  IsNot: "is_not",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type HideOperators3 = ClosedEnum<typeof HideOperators3>;

export const HideOperators2 = {
  Equals: "equals",
  IsNotEqual: "is_not_equal",
  IsGreaterThan: "is_greater_than",
  IsLessThan: "is_less_than",
  IsGreaterThanOrEqualTo: "is_greater_than_or_equal_to",
  IsLessThanOrEqualTo: "is_less_than_or_equal_to",
  IsBetween: "is_between",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type HideOperators2 = ClosedEnum<typeof HideOperators2>;

export const HideOperators1 = {
  Is: "is",
  IsNot: "is_not",
  Contains: "contains",
  DoesNotContain: "does_not_contain",
  StartsWith: "starts_with",
  EndsWith: "ends_with",
  IsEmpty: "is_empty",
  IsNotEmpty: "is_not_empty",
} as const;
export type HideOperators1 = ClosedEnum<typeof HideOperators1>;

export type HideOperators =
  | HideOperators1
  | HideOperators2
  | HideOperators3
  | Four
  | Five;

export type Filters1 = {
  operator: FiltersOperator;
  value?: any | undefined;
  type: FiltersType;
  options: Array<string | number>;
  optionsMap?: { [k: string]: string | number } | null | undefined;
  imageUrlMap?: { [k: string]: string } | undefined;
  name: string;
  path: string;
  hideOperators?:
    | Array<HideOperators1 | HideOperators2 | HideOperators3 | Four | Five>
    | undefined;
};

export type Filters =
  | Filters3
  | Filters4
  | Filters5
  | Seven
  | Six
  | Filters1
  | Filters2;

export type Query = {
  operator: Operator;
  filters?:
    | Array<Filters3 | Filters4 | Filters5 | Seven | Six | Filters1 | Filters2>
    | undefined;
};

export const PostV2LogsQueryFiltersRequestRequestBody4Type = {
  StringArray: "string_array",
} as const;
export type PostV2LogsQueryFiltersRequestRequestBody4Type = ClosedEnum<
  typeof PostV2LogsQueryFiltersRequestRequestBody4Type
>;

export const PostV2LogsQueryFiltersRequestRequestBody4Operator = {
  In: "in",
} as const;
export type PostV2LogsQueryFiltersRequestRequestBody4Operator = ClosedEnum<
  typeof PostV2LogsQueryFiltersRequestRequestBody4Operator
>;

export type PostV2LogsQueryFilters4 = {
  type: PostV2LogsQueryFiltersRequestRequestBody4Type;
  operator: PostV2LogsQueryFiltersRequestRequestBody4Operator;
  values: Array<string>;
  path: string;
};

export const PostV2LogsQueryFiltersRequestRequestBody3Type = {
  String: "string",
} as const;
export type PostV2LogsQueryFiltersRequestRequestBody3Type = ClosedEnum<
  typeof PostV2LogsQueryFiltersRequestRequestBody3Type
>;

export const PostV2LogsQueryFiltersRequestRequestBody3Operator = {
  Contains: "contains",
  Equals: "equals",
} as const;
export type PostV2LogsQueryFiltersRequestRequestBody3Operator = ClosedEnum<
  typeof PostV2LogsQueryFiltersRequestRequestBody3Operator
>;

export type PostV2LogsQueryFilters3 = {
  type: PostV2LogsQueryFiltersRequestRequestBody3Type;
  operator: PostV2LogsQueryFiltersRequestRequestBody3Operator;
  value: string;
  path: string;
};

export const PostV2LogsQueryFiltersRequestRequestBody2Type = {
  Search: "search",
} as const;
export type PostV2LogsQueryFiltersRequestRequestBody2Type = ClosedEnum<
  typeof PostV2LogsQueryFiltersRequestRequestBody2Type
>;

export type PostV2LogsQueryFilters2 = {
  type: PostV2LogsQueryFiltersRequestRequestBody2Type;
  value: string;
  searchPaths: Array<string>;
};

export const PostV2LogsQueryFiltersRequestRequestBody1Type = {
  Id: "id",
} as const;
export type PostV2LogsQueryFiltersRequestRequestBody1Type = ClosedEnum<
  typeof PostV2LogsQueryFiltersRequestRequestBody1Type
>;

export type PostV2LogsQueryFilters1 = {
  type: PostV2LogsQueryFiltersRequestRequestBody1Type;
  id: string;
  path: string;
};

export type PostV2LogsQueryFilters =
  | PostV2LogsQueryFilters1
  | PostV2LogsQueryFilters2
  | PostV2LogsQueryFilters3
  | PostV2LogsQueryFilters4;

export type PostV2LogsQueryRequestBody = {
  pagination?: Pagination | undefined;
  sortingProps?: Array<SortingProps> | undefined;
  query?: Query | undefined;
  filters: Array<
    | PostV2LogsQueryFilters1
    | PostV2LogsQueryFilters2
    | PostV2LogsQueryFilters3
    | PostV2LogsQueryFilters4
  >;
  includedFields?: { [k: string]: string } | undefined;
};

/**
 * An optional field that is filled if the workflow was triggered by an HTTP request
 */
export type PostV2LogsQueryItemsResponseRequestProperties = {
  source?: string | undefined;
  location?: string | undefined;
  latitude?: string | undefined;
  longitude?: string | undefined;
  responseTime?: number | undefined;
  metadata?: { [k: string]: any } | undefined;
  status?: number | undefined;
  context?: { [k: string]: any } | undefined;
  extraParams?: { [k: string]: any } | undefined;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Type =
  {
    LlmEval: "llm_eval",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Type
  >;

/**
 * An optional field that is filled if the workflow was triggered by an HTTP request
 */
export type PostV2LogsQueryEvalsResponse200RequestProperties = {
  source?: string | undefined;
  location?: string | undefined;
  latitude?: string | undefined;
  longitude?: string | undefined;
  responseTime?: number | undefined;
  metadata?: { [k: string]: any } | undefined;
  status?: number | undefined;
  context?: { [k: string]: any } | undefined;
  extraParams?: { [k: string]: any } | undefined;
};

/**
 * Orquesta product
 */
export const PostV2LogsQueryEvalsResponse200ProductType = {
  Remoteconfigs: "remoteconfigs",
  Deployments: "deployments",
  Experiments: "experiments",
  Playgrounds: "playgrounds",
  LlmEvaluator: "llm_evaluator",
  Knowledge: "knowledge",
  Router: "router",
  Workflows: "workflows",
} as const;
/**
 * Orquesta product
 */
export type PostV2LogsQueryEvalsResponse200ProductType = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponse200ProductType
>;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunRelatedEntities =
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Type =
  {
    StringArray: "string_array",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Type
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44 =
  {
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Type;
    values: Array<string>;
    /**
     * The id of the resource
     */
    id: string;
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Status;
    timestamp: Date;
    relatedEntities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44
    >;
  };

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType =
  {
    Boolean: "boolean",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunStatus =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunStatus =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunStatus
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals34Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals34Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals34Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals34Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals33Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals33Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals33Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals33Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals32Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals32Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals32Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals32Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43 =
  {
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType;
    value: boolean;
    /**
     * The id of the resource
     */
    id: string;
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunStatus;
    timestamp: Date;
    relatedEntities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4
    >;
  };

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Type =
  {
    Number: "number",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Type
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals24Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals24Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals24Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals24Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals23Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals23Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals23Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals23Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals22Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals22Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals22Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals22Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42 =
  {
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Type;
    value: number;
    /**
     * The id of the resource
     */
    id: string;
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Status;
    timestamp: Date;
    relatedEntities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4
    >;
  };

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsType =
  {
    String: "string",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsType =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsType
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsStatus =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsStatus =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsStatus
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvalsType =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvalsType =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvalsType
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvalsType;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsRelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41 =
  {
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsType;
    value: string;
    /**
     * The id of the resource
     */
    id: string;
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsStatus;
    timestamp: Date;
    relatedEntities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14
    >;
  };

export type PostV2LogsQueryEvalsResponse200Evals =
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44;

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7Role =
  {
    System: "system",
    Assistant: "assistant",
    User: "user",
    Exception: "exception",
    Tool: "tool",
    Prompt: "prompt",
    Correction: "correction",
    ExpectedOutput: "expected_output",
  } as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7Role =
  ClosedEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7Role
  >;

export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3 =
  {
    /**
     * The role of the prompt message
     */
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7Role;
    url: string;
  };

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4EvalsRole =
  {
    System: "system",
    Assistant: "assistant",
    User: "user",
    Exception: "exception",
    Tool: "tool",
    Prompt: "prompt",
    Correction: "correction",
    ExpectedOutput: "expected_output",
  } as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4EvalsRole =
  ClosedEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4EvalsRole
  >;

export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2 =
  {
    /**
     * The role of the prompt message
     */
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4EvalsRole;
    content: string | null;
  };

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRole =
  {
    System: "system",
    Assistant: "assistant",
    User: "user",
    Exception: "exception",
    Tool: "tool",
    Prompt: "prompt",
    Correction: "correction",
    ExpectedOutput: "expected_output",
  } as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRole =
  ClosedEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRole
  >;

export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsType =
  {
    Function: "function",
  } as const;
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsType =
  ClosedEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsType
  >;

export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction =
  {
    name: string;
    /**
     * JSON string arguments for the functions
     */
    arguments: string;
  };

export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls =
  {
    id?: string | undefined;
    index?: number | undefined;
    type: PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsType;
    function:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction;
  };

export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1 =
  {
    /**
     * The role of the prompt message
     */
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRole;
    content?: string | null | undefined;
    toolCalls: Array<
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls
    >;
  };

export type PostV2LogsQueryEvalsResponse200Message =
  | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2
  | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3
  | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1;

export type PostV2LogsQueryEvalsResponse200Choices = {
  index: number;
  message?:
    | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2
    | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3
    | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1
    | undefined;
  finishReason?: string | null | undefined;
};

export const PostV2LogsQueryEvalsResponse200Action = {
  Invoke: "invoke",
} as const;
export type PostV2LogsQueryEvalsResponse200Action = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponse200Action
>;

/**
 * The type of the model
 */
export const PostV2LogsQueryEvalsResponse200ModelType = {
  Chat: "chat",
  Completion: "completion",
  Embedding: "embedding",
  Vision: "vision",
  Image: "image",
  Tts: "tts",
  Stt: "stt",
  Rerank: "rerank",
} as const;
/**
 * The type of the model
 */
export type PostV2LogsQueryEvalsResponse200ModelType = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponse200ModelType
>;

/**
 * Only supported on `image` models.
 */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONFormat = {
  Url: "url",
  B64Json: "b64_json",
  Text: "text",
  JsonObject: "json_object",
} as const;
/**
 * Only supported on `image` models.
 */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONFormat = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponse200ApplicationJSONFormat
>;

/**
 * Only supported on `image` models.
 */
export const PostV2LogsQueryEvalsResponse200Quality = {
  Standard: "standard",
  Hd: "hd",
} as const;
/**
 * Only supported on `image` models.
 */
export type PostV2LogsQueryEvalsResponse200Quality = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponse200Quality
>;

export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4EvalsType =
  {
    JsonObject: "json_object",
  } as const;
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4EvalsType =
  ClosedEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4EvalsType
  >;

export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42 =
  {
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4EvalsType;
  };

export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4Type =
  {
    JsonSchema: "json_schema",
  } as const;
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4Type =
  ClosedEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4Type
  >;

export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema =
  {
    name: string;
    strict: boolean;
    schema: { [k: string]: any };
  };

export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41 =
  {
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4Type;
    jsonSchema:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema;
  };

/**
 * An object specifying the format that the model must output.
 *
 * @remarks
 *
 *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
 *
 *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
 *
 * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
 */
export type PostV2LogsQueryEvalsResponse200ResponseFormat =
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41;

/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export const PostV2LogsQueryEvalsResponse200PhotoRealVersion = {
  V1: "v1",
  V2: "v2",
} as const;
/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export type PostV2LogsQueryEvalsResponse200PhotoRealVersion = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponse200PhotoRealVersion
>;

/**
 * The format to return the embeddings
 */
export const PostV2LogsQueryEvalsResponse200EncodingFormat = {
  Float: "float",
  Base64: "base64",
} as const;
/**
 * The format to return the embeddings
 */
export type PostV2LogsQueryEvalsResponse200EncodingFormat = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponse200EncodingFormat
>;

/**
 * Model Parameters: Not all parameters apply to every model
 */
export type PostV2LogsQueryEvalsResponse200ModelParameters = {
  /**
   * Only supported on `chat` and `completion` models.
   */
  temperature?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  maxTokens?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topK?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topP?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  frequencyPenalty?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  presencePenalty?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  numImages?: number | undefined;
  /**
   * Best effort deterministic seed for the model. Currently only OpenAI models support these
   */
  seed?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  format?: PostV2LogsQueryEvalsResponse200ApplicationJSONFormat | undefined;
  /**
   * Only supported on `image` models.
   */
  dimensions?: string | undefined;
  /**
   * Only supported on `image` models.
   */
  quality?: PostV2LogsQueryEvalsResponse200Quality | undefined;
  /**
   * Only supported on `image` models.
   */
  style?: string | undefined;
  /**
   * An object specifying the format that the model must output.
   *
   * @remarks
   *
   *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
   *
   *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
   *
   * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
   */
  responseFormat?:
    | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42
    | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41
    | null
    | undefined;
  /**
   * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
   */
  photoRealVersion?:
    | PostV2LogsQueryEvalsResponse200PhotoRealVersion
    | undefined;
  /**
   * The format to return the embeddings
   */
  encodingFormat?: PostV2LogsQueryEvalsResponse200EncodingFormat | undefined;
};

export const PostV2LogsQueryEvalsResponse200Provider = {
  Cohere: "cohere",
  Openai: "openai",
  Anthropic: "anthropic",
  Huggingface: "huggingface",
  Replicate: "replicate",
  Google: "google",
  GoogleAi: "google-ai",
  Azure: "azure",
  Aws: "aws",
  Anyscale: "anyscale",
  Perplexity: "perplexity",
  Groq: "groq",
  Fal: "fal",
  Leonardoai: "leonardoai",
  Nvidia: "nvidia",
} as const;
export type PostV2LogsQueryEvalsResponse200Provider = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponse200Provider
>;

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryEvalsResponse200Role = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryEvalsResponse200Role = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponse200Role
>;

export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4EvalsType =
  {
    ImageUrl: "image_url",
  } as const;
export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4EvalsType =
  ClosedEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4EvalsType
  >;

export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl =
  {
    /**
     * The orq.ai id of the image
     */
    id?: string | undefined;
    /**
     * Either a URL of the image or the base64 encoded data URI.
     */
    url: string;
    /**
     * Specifies the detail level of the image. Currently only supported with OpenAI models
     */
    detail?: string | undefined;
  };

/**
 * The image part of the prompt message. Only supported with vision models.
 */
export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2 = {
  type: PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4EvalsType;
  imageUrl: PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl;
};

export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4Type =
  {
    Text: "text",
  } as const;
export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4Type =
  ClosedEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4Type
  >;

/**
 * Text content part of a prompt message
 */
export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1 = {
  type: PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4Type;
  text: string;
};

export type PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems2 =
  | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1
  | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2;

/**
 * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
 */
export type PostV2LogsQueryEvalsResponse200Content =
  | string
  | Array<
    | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1
    | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataType =
  {
    Function: "function",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataType =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataType
  >;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction =
  {
    name: string;
    /**
     * JSON string arguments for the functions
     */
    arguments: string;
  };

export type PostV2LogsQueryEvalsResponse200ToolCalls = {
  id?: string | undefined;
  index?: number | undefined;
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataType;
  function:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction;
};

export type PostV2LogsQueryEvalsResponse200Messages = {
  /**
   * The role of the prompt message
   */
  role: PostV2LogsQueryEvalsResponse200Role;
  /**
   * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
   */
  content:
    | string
    | Array<
      | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1
      | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2
    >;
  toolCalls?: Array<PostV2LogsQueryEvalsResponse200ToolCalls> | undefined;
  /**
   * The id of the resource
   */
  id?: string | undefined;
};

export type PostV2LogsQueryEvalsResponse200PromptConfig = {
  stream: boolean;
  model: string;
  /**
   * The id of the resource
   */
  modelDbId: string;
  /**
   * The type of the model
   */
  modelType: PostV2LogsQueryEvalsResponse200ModelType;
  /**
   * Model Parameters: Not all parameters apply to every model
   */
  modelParameters: PostV2LogsQueryEvalsResponse200ModelParameters;
  provider: PostV2LogsQueryEvalsResponse200Provider;
  messages: Array<PostV2LogsQueryEvalsResponse200Messages>;
  /**
   * The id of the resource
   */
  integrationId?: string | null | undefined;
  version?: string | undefined;
};

export type PostV2LogsQueryEvalsResponse200Variables = {
  key: string;
  value?: any | undefined;
  isPii?: boolean | undefined;
};

export type PostV2LogsQueryEvalsResponse200Performance = {
  latency: number;
  firstTimeToToken?: number | null | undefined;
  tokensPerSecond?: number | null | undefined;
};

export type PostV2LogsQueryEvalsResponse200PromptTokensDetails = {
  cachedTokens?: number | undefined;
};

export type PostV2LogsQueryEvalsResponse200CompletionTokensDetails = {
  reasoningTokens?: number | undefined;
};

export type PostV2LogsQueryEvalsResponse200Usage = {
  totalTokens?: number | undefined;
  promptTokens?: number | undefined;
  completionTokens?: number | undefined;
  promptTokensDetails?:
    | PostV2LogsQueryEvalsResponse200PromptTokensDetails
    | undefined;
  completionTokensDetails?:
    | PostV2LogsQueryEvalsResponse200CompletionTokensDetails
    | undefined;
};

export type PostV2LogsQueryEvalsResponse200Billing = {
  totalCost?: number | null | undefined;
  inputCost?: number | null | undefined;
  outputCost?: number | null | undefined;
  billable: boolean;
};

/**
 * The type of the tool. Currently, only `function` is supported.
 */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunType =
  {
    Function: "function",
  } as const;
/**
 * The type of the tool. Currently, only `function` is supported.
 */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunType =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunType
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataToolsType =
  {
    Object: "object",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataToolsType =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataToolsType
  >;

/**
 * The parameters the functions accepts, described as a JSON Schema object.
 *
 * @remarks
 *
 *  Omitting `parameters` defines a function with an empty parameter list.
 */
export type PostV2LogsQueryEvalsResponse200Parameters = {
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataToolsType;
  properties: { [k: string]: any };
  required?: Array<string> | undefined;
  additionalProperties?: boolean | undefined;
};

export type PostV2LogsQueryEvalsResponse200Function = {
  /**
   * The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.
   */
  name: string;
  /**
   * A description of what the function does, used by the model to choose when and how to call the function.
   */
  description?: string | undefined;
  strict?: boolean | undefined;
  /**
   * The parameters the functions accepts, described as a JSON Schema object.
   *
   * @remarks
   *
   *  Omitting `parameters` defines a function with an empty parameter list.
   */
  parameters: PostV2LogsQueryEvalsResponse200Parameters;
};

export type PostV2LogsQueryEvalsResponse200Tools = {
  /**
   * The type of the tool. Currently, only `function` is supported.
   */
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunType;
  function: PostV2LogsQueryEvalsResponse200Function;
};

export type PostV2LogsQueryEvalsResponse200PromptSnippets = {
  /**
   * The id of the resource
   */
  id: string;
  key: string;
  value: string;
};

export type PostV2LogsQueryEvalsResponse200Data = {
  choices?: Array<PostV2LogsQueryEvalsResponse200Choices> | undefined;
  action: PostV2LogsQueryEvalsResponse200Action;
  promptConfig: PostV2LogsQueryEvalsResponse200PromptConfig;
  variables: Array<PostV2LogsQueryEvalsResponse200Variables>;
  performance?: PostV2LogsQueryEvalsResponse200Performance | undefined;
  usage?: PostV2LogsQueryEvalsResponse200Usage | undefined;
  billing?: PostV2LogsQueryEvalsResponse200Billing | undefined;
  tools?: Array<PostV2LogsQueryEvalsResponse200Tools> | undefined;
  promptSnippets: Array<PostV2LogsQueryEvalsResponse200PromptSnippets>;
};

export type PostV2LogsQueryEvalsResponseWorkflowRun = {
  id: string;
  /**
   * Metadata for the workflow run
   */
  workflowMetadata?: { [k: string]: any } | undefined;
  /**
   * Input for the workflow run
   */
  workflowInput?: { [k: string]: any } | undefined;
  /**
   * Output for the workflow run
   */
  workflowOutput?: { [k: string]: any } | undefined;
  /**
   * An optional field that is filled if the workflow was triggered by an HTTP request
   */
  requestProperties?:
    | PostV2LogsQueryEvalsResponse200RequestProperties
    | undefined;
  startedAt: Date;
  finishedAt?: Date | undefined;
  /**
   * Orquesta product
   */
  productType: PostV2LogsQueryEvalsResponse200ProductType;
  relatedEntities: Array<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1
  >;
  evals: Array<
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44
  >;
  data: PostV2LogsQueryEvalsResponse200Data;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74;

export type PostV2LogsQueryEvalsResponse2007 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Type;
  workflowRun: PostV2LogsQueryEvalsResponseWorkflowRun;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Type =
  {
    BertScore: "bert_score",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Type
  >;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value =
  {
    f1: number;
    precision: number;
    recall: number;
  };

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals6Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals6Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals6Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals6Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64;

export type PostV2LogsQueryEvalsResponse2006 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Type;
  value: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Type =
  {
    RougeN: "rouge_n",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Type
  >;

export type PostV2LogsQueryEvalsResponseRouge1 = {
  f1: number;
  precision: number;
  recall: number;
};

export type PostV2LogsQueryEvalsResponseRouge2 = {
  f1: number;
  precision: number;
  recall: number;
};

export type PostV2LogsQueryEvalsResponseRougeL = {
  f1: number;
  precision: number;
  recall: number;
};

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue =
  {
    rouge1: PostV2LogsQueryEvalsResponseRouge1;
    rouge2: PostV2LogsQueryEvalsResponseRouge2;
    rougeL: PostV2LogsQueryEvalsResponseRougeL;
  };

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals5Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals5Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals5Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals5Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54;

export type PostV2LogsQueryEvalsResponse2005 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Type;
  value: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Type =
  {
    StringArray: "string_array",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Type
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44;

export type PostV2LogsQueryEvalsResponse2004 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Type;
  values: Array<string>;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Type =
  {
    Boolean: "boolean",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Type
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34;

export type PostV2LogsQueryEvalsResponse2003 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Type;
  value: boolean;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Type =
  {
    Number: "number",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Type
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals24Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals24Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals24Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals24Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals23Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals23Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals23Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals23Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals22Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals22Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals22Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals22Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4;

export type PostV2LogsQueryEvalsResponse2002 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Type;
  value: number;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Type =
  {
    String: "string",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Type
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals14Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals14Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals14Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals14Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4EvalsType =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4EvalsType =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4EvalsType
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4EvalsType;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals11Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals11Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals11Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals11Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44;

export type PostV2LogsQueryEvalsResponse2001 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Type;
  value: string;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44
  >;
};

export type PostV2LogsQueryItemsResponseEvals =
  | PostV2LogsQueryEvalsResponse2001
  | PostV2LogsQueryEvalsResponse2002
  | PostV2LogsQueryEvalsResponse2003
  | PostV2LogsQueryEvalsResponse2004
  | PostV2LogsQueryEvalsResponse2005
  | PostV2LogsQueryEvalsResponse2006
  | PostV2LogsQueryEvalsResponse2007;

export const PostV2LogsQueryItemsResponseProductType = {
  Experiments: "experiments",
} as const;
export type PostV2LogsQueryItemsResponseProductType = ClosedEnum<
  typeof PostV2LogsQueryItemsResponseProductType
>;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems45Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems45Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems45Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntities5 = {
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems45Type;
  /**
   * The id of the resource
   */
  accountId: string;
};

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44Type =
  {
    ExperimentTestCase: "experiment_test_case",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44Type
  >;

export type PostV2LogsQueryRelatedEntitiesResponse4 = {
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44Type;
  /**
   * The id of the resource
   */
  testCaseId: string;
};

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43Type =
  {
    TestCaseRun: "test_case_run",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43Type
  >;

export type PostV2LogsQueryRelatedEntitiesResponse2003 = {
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43Type;
  /**
   * The id of the resource
   */
  testCaseRunId: string;
};

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42Type =
  {
    ExperimentRun: "experiment_run",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42Type
  >;

export type PostV2LogsQueryRelatedEntitiesResponse2002 = {
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42Type;
  /**
   * The id of the resource
   */
  experimentRunId: string;
};

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Type =
  {
    Experiment: "experiment",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Type
  >;

export type PostV2LogsQueryRelatedEntitiesResponse2001 = {
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Type;
  /**
   * The id of the resource
   */
  experimentId: string;
};

export type PostV2LogsQueryItemsResponseRelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse2001
  | PostV2LogsQueryRelatedEntitiesResponse2002
  | PostV2LogsQueryRelatedEntitiesResponse2003
  | PostV2LogsQueryRelatedEntitiesResponse4
  | PostV2LogsQueryRelatedEntities5;

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataChoicesRole =
  {
    System: "system",
    Assistant: "assistant",
    User: "user",
    Exception: "exception",
    Tool: "tool",
    Prompt: "prompt",
    Correction: "correction",
    ExpectedOutput: "expected_output",
  } as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataChoicesRole =
  ClosedEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataChoicesRole
  >;

export type PostV2LogsQueryMessageResponse2003 = {
  /**
   * The role of the prompt message
   */
  role:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataChoicesRole;
  url: string;
};

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataRole =
  {
    System: "system",
    Assistant: "assistant",
    User: "user",
    Exception: "exception",
    Tool: "tool",
    Prompt: "prompt",
    Correction: "correction",
    ExpectedOutput: "expected_output",
  } as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataRole =
  ClosedEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataRole
  >;

export type PostV2LogsQueryMessageResponse2002 = {
  /**
   * The role of the prompt message
   */
  role:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataRole;
  content: string | null;
};

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Role =
  {
    System: "system",
    Assistant: "assistant",
    User: "user",
    Exception: "exception",
    Tool: "tool",
    Prompt: "prompt",
    Correction: "correction",
    ExpectedOutput: "expected_output",
  } as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Role =
  ClosedEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Role
  >;

export const PostV2LogsQueryMessageResponse200Type = {
  Function: "function",
} as const;
export type PostV2LogsQueryMessageResponse200Type = ClosedEnum<
  typeof PostV2LogsQueryMessageResponse200Type
>;

export type PostV2LogsQueryMessageResponse200Function = {
  name: string;
  /**
   * JSON string arguments for the functions
   */
  arguments: string;
};

export type PostV2LogsQueryMessageResponse200ToolCalls = {
  id?: string | undefined;
  index?: number | undefined;
  type: PostV2LogsQueryMessageResponse200Type;
  function: PostV2LogsQueryMessageResponse200Function;
};

export type PostV2LogsQueryMessageResponse2001 = {
  /**
   * The role of the prompt message
   */
  role: PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Role;
  content?: string | null | undefined;
  toolCalls: Array<PostV2LogsQueryMessageResponse200ToolCalls>;
};

export type PostV2LogsQueryItemsResponseMessage =
  | PostV2LogsQueryMessageResponse2002
  | PostV2LogsQueryMessageResponse2003
  | PostV2LogsQueryMessageResponse2001;

export type PostV2LogsQueryItemsResponseChoices = {
  index: number;
  message?:
    | PostV2LogsQueryMessageResponse2002
    | PostV2LogsQueryMessageResponse2003
    | PostV2LogsQueryMessageResponse2001
    | undefined;
  finishReason?: string | null | undefined;
};

export const PostV2LogsQueryItemsResponseAction = {
  Invoke: "invoke",
} as const;
export type PostV2LogsQueryItemsResponseAction = ClosedEnum<
  typeof PostV2LogsQueryItemsResponseAction
>;

/**
 * The type of the model
 */
export const PostV2LogsQueryItemsResponseModelType = {
  Chat: "chat",
  Completion: "completion",
  Embedding: "embedding",
  Vision: "vision",
  Image: "image",
  Tts: "tts",
  Stt: "stt",
  Rerank: "rerank",
} as const;
/**
 * The type of the model
 */
export type PostV2LogsQueryItemsResponseModelType = ClosedEnum<
  typeof PostV2LogsQueryItemsResponseModelType
>;

/**
 * Only supported on `image` models.
 */
export const PostV2LogsQueryItemsResponse200Format = {
  Url: "url",
  B64Json: "b64_json",
  Text: "text",
  JsonObject: "json_object",
} as const;
/**
 * Only supported on `image` models.
 */
export type PostV2LogsQueryItemsResponse200Format = ClosedEnum<
  typeof PostV2LogsQueryItemsResponse200Format
>;

/**
 * Only supported on `image` models.
 */
export const PostV2LogsQueryItemsResponseQuality = {
  Standard: "standard",
  Hd: "hd",
} as const;
/**
 * Only supported on `image` models.
 */
export type PostV2LogsQueryItemsResponseQuality = ClosedEnum<
  typeof PostV2LogsQueryItemsResponseQuality
>;

export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsType =
  {
    JsonObject: "json_object",
  } as const;
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsType =
  ClosedEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsType
  >;

export type PostV2LogsQueryResponseFormatResponse2002 = {
  type:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsType;
};

export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyType =
  {
    JsonSchema: "json_schema",
  } as const;
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyType
  >;

export type PostV2LogsQueryResponseFormatResponse200JsonSchema = {
  name: string;
  strict: boolean;
  schema: { [k: string]: any };
};

export type PostV2LogsQueryResponseFormatResponse2001 = {
  type: PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyType;
  jsonSchema: PostV2LogsQueryResponseFormatResponse200JsonSchema;
};

/**
 * An object specifying the format that the model must output.
 *
 * @remarks
 *
 *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
 *
 *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
 *
 * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
 */
export type PostV2LogsQueryItemsResponseResponseFormat =
  | PostV2LogsQueryResponseFormatResponse2002
  | PostV2LogsQueryResponseFormatResponse2001;

/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export const PostV2LogsQueryItemsResponsePhotoRealVersion = {
  V1: "v1",
  V2: "v2",
} as const;
/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export type PostV2LogsQueryItemsResponsePhotoRealVersion = ClosedEnum<
  typeof PostV2LogsQueryItemsResponsePhotoRealVersion
>;

/**
 * The format to return the embeddings
 */
export const PostV2LogsQueryItemsResponseEncodingFormat = {
  Float: "float",
  Base64: "base64",
} as const;
/**
 * The format to return the embeddings
 */
export type PostV2LogsQueryItemsResponseEncodingFormat = ClosedEnum<
  typeof PostV2LogsQueryItemsResponseEncodingFormat
>;

/**
 * Model Parameters: Not all parameters apply to every model
 */
export type PostV2LogsQueryItemsResponseModelParameters = {
  /**
   * Only supported on `chat` and `completion` models.
   */
  temperature?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  maxTokens?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topK?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topP?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  frequencyPenalty?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  presencePenalty?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  numImages?: number | undefined;
  /**
   * Best effort deterministic seed for the model. Currently only OpenAI models support these
   */
  seed?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  format?: PostV2LogsQueryItemsResponse200Format | undefined;
  /**
   * Only supported on `image` models.
   */
  dimensions?: string | undefined;
  /**
   * Only supported on `image` models.
   */
  quality?: PostV2LogsQueryItemsResponseQuality | undefined;
  /**
   * Only supported on `image` models.
   */
  style?: string | undefined;
  /**
   * An object specifying the format that the model must output.
   *
   * @remarks
   *
   *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
   *
   *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
   *
   * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
   */
  responseFormat?:
    | PostV2LogsQueryResponseFormatResponse2002
    | PostV2LogsQueryResponseFormatResponse2001
    | null
    | undefined;
  /**
   * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
   */
  photoRealVersion?: PostV2LogsQueryItemsResponsePhotoRealVersion | undefined;
  /**
   * The format to return the embeddings
   */
  encodingFormat?: PostV2LogsQueryItemsResponseEncodingFormat | undefined;
};

export const PostV2LogsQueryItemsResponseProvider = {
  Cohere: "cohere",
  Openai: "openai",
  Anthropic: "anthropic",
  Huggingface: "huggingface",
  Replicate: "replicate",
  Google: "google",
  GoogleAi: "google-ai",
  Azure: "azure",
  Aws: "aws",
  Anyscale: "anyscale",
  Perplexity: "perplexity",
  Groq: "groq",
  Fal: "fal",
  Leonardoai: "leonardoai",
  Nvidia: "nvidia",
} as const;
export type PostV2LogsQueryItemsResponseProvider = ClosedEnum<
  typeof PostV2LogsQueryItemsResponseProvider
>;

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryItemsResponseRole = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryItemsResponseRole = ClosedEnum<
  typeof PostV2LogsQueryItemsResponseRole
>;

export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsType = {
  ImageUrl: "image_url",
} as const;
export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsType =
  ClosedEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsType
  >;

export type PostV2LogsQuery2Response200ImageUrl = {
  /**
   * The orq.ai id of the image
   */
  id?: string | undefined;
  /**
   * Either a URL of the image or the base64 encoded data URI.
   */
  url: string;
  /**
   * Specifies the detail level of the image. Currently only supported with OpenAI models
   */
  detail?: string | undefined;
};

/**
 * The image part of the prompt message. Only supported with vision models.
 */
export type PostV2LogsQuery2Response2002 = {
  type: PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsType;
  imageUrl: PostV2LogsQuery2Response200ImageUrl;
};

export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyType = {
  Text: "text",
} as const;
export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyType =
  ClosedEnum<typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyType>;

/**
 * Text content part of a prompt message
 */
export type PostV2LogsQuery2Response2001 = {
  type: PostV2LogsQuery2Response200ApplicationJSONResponseBodyType;
  text: string;
};

export type PostV2LogsQueryContentResponse2002 =
  | PostV2LogsQuery2Response2001
  | PostV2LogsQuery2Response2002;

/**
 * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
 */
export type PostV2LogsQueryItemsResponseContent =
  | string
  | Array<PostV2LogsQuery2Response2001 | PostV2LogsQuery2Response2002>;

export const PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4Type = {
  Function: "function",
} as const;
export type PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4Type =
  ClosedEnum<
    typeof PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4Type
  >;

export type PostV2LogsQueryItemsResponse200ApplicationJSONFunction = {
  name: string;
  /**
   * JSON string arguments for the functions
   */
  arguments: string;
};

export type PostV2LogsQueryItemsResponseToolCalls = {
  id?: string | undefined;
  index?: number | undefined;
  type: PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4Type;
  function: PostV2LogsQueryItemsResponse200ApplicationJSONFunction;
};

export type PostV2LogsQueryItemsResponseMessages = {
  /**
   * The role of the prompt message
   */
  role: PostV2LogsQueryItemsResponseRole;
  /**
   * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
   */
  content:
    | string
    | Array<PostV2LogsQuery2Response2001 | PostV2LogsQuery2Response2002>;
  toolCalls?: Array<PostV2LogsQueryItemsResponseToolCalls> | undefined;
  /**
   * The id of the resource
   */
  id?: string | undefined;
};

export type PostV2LogsQueryItemsResponsePromptConfig = {
  stream: boolean;
  model: string;
  /**
   * The id of the resource
   */
  modelDbId: string;
  /**
   * The type of the model
   */
  modelType: PostV2LogsQueryItemsResponseModelType;
  /**
   * Model Parameters: Not all parameters apply to every model
   */
  modelParameters: PostV2LogsQueryItemsResponseModelParameters;
  provider: PostV2LogsQueryItemsResponseProvider;
  messages: Array<PostV2LogsQueryItemsResponseMessages>;
  /**
   * The id of the resource
   */
  integrationId?: string | null | undefined;
  version?: string | undefined;
};

export type PostV2LogsQueryItemsVariables = {
  key: string;
  value?: any | undefined;
  isPii?: boolean | undefined;
};

export type PostV2LogsQueryItemsResponsePerformance = {
  latency: number;
  firstTimeToToken?: number | null | undefined;
  tokensPerSecond?: number | null | undefined;
};

export type PostV2LogsQueryItemsPromptTokensDetails = {
  cachedTokens?: number | undefined;
};

export type PostV2LogsQueryItemsCompletionTokensDetails = {
  reasoningTokens?: number | undefined;
};

export type PostV2LogsQueryItemsResponseUsage = {
  totalTokens?: number | undefined;
  promptTokens?: number | undefined;
  completionTokens?: number | undefined;
  promptTokensDetails?: PostV2LogsQueryItemsPromptTokensDetails | undefined;
  completionTokensDetails?:
    | PostV2LogsQueryItemsCompletionTokensDetails
    | undefined;
};

export type PostV2LogsQueryItemsBilling = {
  totalCost?: number | null | undefined;
  inputCost?: number | null | undefined;
  outputCost?: number | null | undefined;
  billable: boolean;
};

export type PostV2LogsQueryItemsResponse200Metadata = {
  /**
   * Unique identifier for the data source
   */
  datasourceId: string;
  /**
   * Unique identifier for the chunk
   */
  chunkId: string;
  /**
   * Name of the uploaded file during the datasource creation.
   */
  fileName: string;
  /**
   * Reference to the page number the chunk was extracted from. The property will only be available for `application/pdf` type of files. For other file types, the property will be `null`.
   */
  pageNumber?: number | null | undefined;
  /**
   * Type of the uploaded file when the datasource was created.
   */
  fileType: string;
};

export type PostV2LogsQueryItemsDocuments = {
  /**
   * The id of the resource
   */
  id: string;
  /**
   * Text content of the document
   */
  text: string;
  metadata: PostV2LogsQueryItemsResponse200Metadata;
  /**
   * The score of the document
   */
  score: number;
  /**
   * The rerank score of the document
   */
  rerankScore?: number | undefined;
};

export type PostV2LogsQueryItemsResponseRetrievals = {
  /**
   * Unique id of the knowledge base
   */
  knowledgeId: string;
  /**
   * The documents returned
   */
  documents: Array<PostV2LogsQueryItemsDocuments>;
  /**
   * The key of the knowledge base
   */
  knowledgeKey: string;
  /**
   * The query used to search the knowledge base
   */
  query: string;
};

export const PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyType =
  {
    Query: "query",
  } as const;
export type PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyType
  >;

export type PostV2LogsQueryConfigurationResponse2 = {
  type: PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyType;
  query: string;
};

export const PostV2LogsQueryConfigurationResponse200ApplicationJSONType = {
  LastUserMessage: "last_user_message",
} as const;
export type PostV2LogsQueryConfigurationResponse200ApplicationJSONType =
  ClosedEnum<typeof PostV2LogsQueryConfigurationResponse200ApplicationJSONType>;

export type PostV2LogsQueryConfigurationResponse1 = {
  type: PostV2LogsQueryConfigurationResponse200ApplicationJSONType;
};

/**
 * Defines the configuration settings which can either be for a user message or a text entry.
 */
export type PostV2LogsQueryItemsConfiguration =
  | PostV2LogsQueryConfigurationResponse1
  | PostV2LogsQueryConfigurationResponse2;

export type PostV2LogsQueryItemsKnowledgeBases = {
  /**
   * The id of the resource
   */
  knowledgeId: string;
  /**
   * Defines the configuration settings which can either be for a user message or a text entry.
   */
  configuration:
    | PostV2LogsQueryConfigurationResponse1
    | PostV2LogsQueryConfigurationResponse2;
};

/**
 * The type of the tool. Currently, only `function` is supported.
 */
export const PostV2LogsQueryItemsResponseType = {
  Function: "function",
} as const;
/**
 * The type of the tool. Currently, only `function` is supported.
 */
export type PostV2LogsQueryItemsResponseType = ClosedEnum<
  typeof PostV2LogsQueryItemsResponseType
>;

export const PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4DataType =
  {
    Object: "object",
  } as const;
export type PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4DataType =
  ClosedEnum<
    typeof PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4DataType
  >;

/**
 * The parameters the functions accepts, described as a JSON Schema object.
 *
 * @remarks
 *
 *  Omitting `parameters` defines a function with an empty parameter list.
 */
export type PostV2LogsQueryItemsResponseParameters = {
  type: PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4DataType;
  properties: { [k: string]: any };
  required?: Array<string> | undefined;
  additionalProperties?: boolean | undefined;
};

export type PostV2LogsQueryItemsResponseFunction = {
  /**
   * The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.
   */
  name: string;
  /**
   * A description of what the function does, used by the model to choose when and how to call the function.
   */
  description?: string | undefined;
  strict?: boolean | undefined;
  /**
   * The parameters the functions accepts, described as a JSON Schema object.
   *
   * @remarks
   *
   *  Omitting `parameters` defines a function with an empty parameter list.
   */
  parameters: PostV2LogsQueryItemsResponseParameters;
};

export type PostV2LogsQueryItemsResponseTools = {
  /**
   * The type of the tool. Currently, only `function` is supported.
   */
  type: PostV2LogsQueryItemsResponseType;
  function: PostV2LogsQueryItemsResponseFunction;
};

export type PostV2LogsQueryItemsPromptSnippets = {
  /**
   * The id of the resource
   */
  id: string;
  key: string;
  value: string;
};

export type PostV2LogsQueryItemsResponse200Data = {
  choices?: Array<PostV2LogsQueryItemsResponseChoices> | undefined;
  action?: PostV2LogsQueryItemsResponseAction | undefined;
  integrationIds?: Array<string> | undefined;
  promptConfig: PostV2LogsQueryItemsResponsePromptConfig;
  variables: Array<PostV2LogsQueryItemsVariables>;
  performance?: PostV2LogsQueryItemsResponsePerformance | undefined;
  usage?: PostV2LogsQueryItemsResponseUsage | undefined;
  billing?: PostV2LogsQueryItemsBilling | undefined;
  providerResponse?: any | undefined;
  retrievals?: Array<PostV2LogsQueryItemsResponseRetrievals> | undefined;
  knowledgeBases?: Array<PostV2LogsQueryItemsKnowledgeBases> | undefined;
  tools?: Array<PostV2LogsQueryItemsResponseTools> | undefined;
  promptSnippets: Array<PostV2LogsQueryItemsPromptSnippets>;
};

/**
 * The schema for the experiment workflow run
 */
export type Items4 = {
  /**
   * The unique identifier for the workflow run
   */
  id: string;
  /**
   * The unique identifier for the workspace
   */
  workspaceId: string;
  /**
   * Metadata for the workflow run
   */
  workflowMetadata?: { [k: string]: any } | undefined;
  /**
   * Input for the workflow run
   */
  workflowInput?: { [k: string]: any } | undefined;
  /**
   * Output for the workflow run
   */
  workflowOutput?: { [k: string]: any } | undefined;
  /**
   * The optional project_id for the entity of the event
   */
  projectId?: string | undefined;
  /**
   * An optional field that is filled if the workflow was triggered by an HTTP request
   */
  requestProperties?: PostV2LogsQueryItemsResponseRequestProperties | undefined;
  startedAt: Date;
  finishedAt?: Date | undefined;
  evals: Array<
    | PostV2LogsQueryEvalsResponse2001
    | PostV2LogsQueryEvalsResponse2002
    | PostV2LogsQueryEvalsResponse2003
    | PostV2LogsQueryEvalsResponse2004
    | PostV2LogsQueryEvalsResponse2005
    | PostV2LogsQueryEvalsResponse2006
    | PostV2LogsQueryEvalsResponse2007
  >;
  productType: PostV2LogsQueryItemsResponseProductType;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse2001
    | PostV2LogsQueryRelatedEntitiesResponse2002
    | PostV2LogsQueryRelatedEntitiesResponse2003
    | PostV2LogsQueryRelatedEntitiesResponse4
    | PostV2LogsQueryRelatedEntities5
  >;
  data: PostV2LogsQueryItemsResponse200Data;
};

/**
 * An optional field that is filled if the workflow was triggered by an HTTP request
 */
export type PostV2LogsQueryItemsRequestProperties = {
  source?: string | undefined;
  location?: string | undefined;
  latitude?: string | undefined;
  longitude?: string | undefined;
  responseTime?: number | undefined;
  metadata?: { [k: string]: any } | undefined;
  status?: number | undefined;
  context?: { [k: string]: any } | undefined;
  extraParams?: { [k: string]: any } | undefined;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Type =
  {
    LlmEval: "llm_eval",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Type
  >;

/**
 * An optional field that is filled if the workflow was triggered by an HTTP request
 */
export type PostV2LogsQueryEvalsResponseRequestProperties = {
  source?: string | undefined;
  location?: string | undefined;
  latitude?: string | undefined;
  longitude?: string | undefined;
  responseTime?: number | undefined;
  metadata?: { [k: string]: any } | undefined;
  status?: number | undefined;
  context?: { [k: string]: any } | undefined;
  extraParams?: { [k: string]: any } | undefined;
};

/**
 * Orquesta product
 */
export const PostV2LogsQueryEvalsResponseProductType = {
  Remoteconfigs: "remoteconfigs",
  Deployments: "deployments",
  Experiments: "experiments",
  Playgrounds: "playgrounds",
  LlmEvaluator: "llm_evaluator",
  Knowledge: "knowledge",
  Router: "router",
  Workflows: "workflows",
} as const;
/**
 * Orquesta product
 */
export type PostV2LogsQueryEvalsResponseProductType = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponseProductType
>;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunRelatedEntities =
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Type =
  {
    StringArray: "string_array",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Type
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4 = {
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Type;
  values: Array<string>;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType =
  {
    Boolean: "boolean",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunStatus =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunStatus =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunStatus
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals34Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals34Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals34Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals34Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals33Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals33Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals33Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals33Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals32Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals32Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals32Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals32Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunRelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3 = {
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType;
  value: boolean;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunStatus;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Type =
  {
    Number: "number",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Type
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals24Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals24Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals24Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals24Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals23Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals23Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals23Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals23Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals22Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals22Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals22Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals22Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2 = {
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Type;
  value: number;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsType =
  {
    String: "string",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsType =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsType
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsStatus =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsStatus =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsStatus
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvalsType =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvalsType =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvalsType
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvalsType;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsRelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1 = {
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsType;
  value: string;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsStatus;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14
  >;
};

export type PostV2LogsQueryEvalsResponseEvals =
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4;

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Evals7Role =
  {
    System: "system",
    Assistant: "assistant",
    User: "user",
    Exception: "exception",
    Tool: "tool",
    Prompt: "prompt",
    Correction: "correction",
    ExpectedOutput: "expected_output",
  } as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Evals7Role =
  ClosedEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Evals7Role
  >;

export type PostV2LogsQueryMessageResponse200ApplicationJson3 = {
  /**
   * The role of the prompt message
   */
  role:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Evals7Role;
  url: string;
};

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3EvalsRole =
  {
    System: "system",
    Assistant: "assistant",
    User: "user",
    Exception: "exception",
    Tool: "tool",
    Prompt: "prompt",
    Correction: "correction",
    ExpectedOutput: "expected_output",
  } as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3EvalsRole =
  ClosedEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3EvalsRole
  >;

export type PostV2LogsQueryMessageResponse200ApplicationJson2 = {
  /**
   * The role of the prompt message
   */
  role:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3EvalsRole;
  content: string | null;
};

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Role =
  {
    System: "system",
    Assistant: "assistant",
    User: "user",
    Exception: "exception",
    Tool: "tool",
    Prompt: "prompt",
    Correction: "correction",
    ExpectedOutput: "expected_output",
  } as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Role =
  ClosedEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Role
  >;

export const PostV2LogsQueryMessageResponse200ApplicationJSONType = {
  Function: "function",
} as const;
export type PostV2LogsQueryMessageResponse200ApplicationJSONType = ClosedEnum<
  typeof PostV2LogsQueryMessageResponse200ApplicationJSONType
>;

export type PostV2LogsQueryMessageResponse200ApplicationJSONFunction = {
  name: string;
  /**
   * JSON string arguments for the functions
   */
  arguments: string;
};

export type PostV2LogsQueryMessageResponse200ApplicationJSONToolCalls = {
  id?: string | undefined;
  index?: number | undefined;
  type: PostV2LogsQueryMessageResponse200ApplicationJSONType;
  function: PostV2LogsQueryMessageResponse200ApplicationJSONFunction;
};

export type PostV2LogsQueryMessageResponse200ApplicationJson1 = {
  /**
   * The role of the prompt message
   */
  role: PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Role;
  content?: string | null | undefined;
  toolCalls: Array<PostV2LogsQueryMessageResponse200ApplicationJSONToolCalls>;
};

export type PostV2LogsQueryEvalsResponseMessage =
  | PostV2LogsQueryMessageResponse200ApplicationJson2
  | PostV2LogsQueryMessageResponse200ApplicationJson3
  | PostV2LogsQueryMessageResponse200ApplicationJson1;

export type PostV2LogsQueryEvalsResponseChoices = {
  index: number;
  message?:
    | PostV2LogsQueryMessageResponse200ApplicationJson2
    | PostV2LogsQueryMessageResponse200ApplicationJson3
    | PostV2LogsQueryMessageResponse200ApplicationJson1
    | undefined;
  finishReason?: string | null | undefined;
};

export const PostV2LogsQueryEvalsResponseAction = {
  Invoke: "invoke",
} as const;
export type PostV2LogsQueryEvalsResponseAction = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponseAction
>;

/**
 * The type of the model
 */
export const PostV2LogsQueryEvalsResponseModelType = {
  Chat: "chat",
  Completion: "completion",
  Embedding: "embedding",
  Vision: "vision",
  Image: "image",
  Tts: "tts",
  Stt: "stt",
  Rerank: "rerank",
} as const;
/**
 * The type of the model
 */
export type PostV2LogsQueryEvalsResponseModelType = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponseModelType
>;

/**
 * Only supported on `image` models.
 */
export const PostV2LogsQueryEvalsResponse200Format = {
  Url: "url",
  B64Json: "b64_json",
  Text: "text",
  JsonObject: "json_object",
} as const;
/**
 * Only supported on `image` models.
 */
export type PostV2LogsQueryEvalsResponse200Format = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponse200Format
>;

/**
 * Only supported on `image` models.
 */
export const PostV2LogsQueryEvalsResponseQuality = {
  Standard: "standard",
  Hd: "hd",
} as const;
/**
 * Only supported on `image` models.
 */
export type PostV2LogsQueryEvalsResponseQuality = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponseQuality
>;

export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3EvalsType =
  {
    JsonObject: "json_object",
  } as const;
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3EvalsType =
  ClosedEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3EvalsType
  >;

export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32 =
  {
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3EvalsType;
  };

export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3Type =
  {
    JsonSchema: "json_schema",
  } as const;
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3Type =
  ClosedEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3Type
  >;

export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema =
  {
    name: string;
    strict: boolean;
    schema: { [k: string]: any };
  };

export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31 =
  {
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3Type;
    jsonSchema:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema;
  };

/**
 * An object specifying the format that the model must output.
 *
 * @remarks
 *
 *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
 *
 *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
 *
 * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
 */
export type PostV2LogsQueryEvalsResponseResponseFormat =
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31;

/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export const PostV2LogsQueryEvalsResponsePhotoRealVersion = {
  V1: "v1",
  V2: "v2",
} as const;
/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export type PostV2LogsQueryEvalsResponsePhotoRealVersion = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponsePhotoRealVersion
>;

/**
 * The format to return the embeddings
 */
export const PostV2LogsQueryEvalsResponseEncodingFormat = {
  Float: "float",
  Base64: "base64",
} as const;
/**
 * The format to return the embeddings
 */
export type PostV2LogsQueryEvalsResponseEncodingFormat = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponseEncodingFormat
>;

/**
 * Model Parameters: Not all parameters apply to every model
 */
export type PostV2LogsQueryEvalsResponseModelParameters = {
  /**
   * Only supported on `chat` and `completion` models.
   */
  temperature?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  maxTokens?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topK?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topP?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  frequencyPenalty?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  presencePenalty?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  numImages?: number | undefined;
  /**
   * Best effort deterministic seed for the model. Currently only OpenAI models support these
   */
  seed?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  format?: PostV2LogsQueryEvalsResponse200Format | undefined;
  /**
   * Only supported on `image` models.
   */
  dimensions?: string | undefined;
  /**
   * Only supported on `image` models.
   */
  quality?: PostV2LogsQueryEvalsResponseQuality | undefined;
  /**
   * Only supported on `image` models.
   */
  style?: string | undefined;
  /**
   * An object specifying the format that the model must output.
   *
   * @remarks
   *
   *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
   *
   *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
   *
   * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
   */
  responseFormat?:
    | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32
    | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31
    | null
    | undefined;
  /**
   * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
   */
  photoRealVersion?: PostV2LogsQueryEvalsResponsePhotoRealVersion | undefined;
  /**
   * The format to return the embeddings
   */
  encodingFormat?: PostV2LogsQueryEvalsResponseEncodingFormat | undefined;
};

export const PostV2LogsQueryEvalsResponseProvider = {
  Cohere: "cohere",
  Openai: "openai",
  Anthropic: "anthropic",
  Huggingface: "huggingface",
  Replicate: "replicate",
  Google: "google",
  GoogleAi: "google-ai",
  Azure: "azure",
  Aws: "aws",
  Anyscale: "anyscale",
  Perplexity: "perplexity",
  Groq: "groq",
  Fal: "fal",
  Leonardoai: "leonardoai",
  Nvidia: "nvidia",
} as const;
export type PostV2LogsQueryEvalsResponseProvider = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponseProvider
>;

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryEvalsResponseRole = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryEvalsResponseRole = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponseRole
>;

export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3EvalsType =
  {
    ImageUrl: "image_url",
  } as const;
export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3EvalsType =
  ClosedEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3EvalsType
  >;

export type PostV2LogsQuery2Response200ApplicationJSONImageUrl = {
  /**
   * The orq.ai id of the image
   */
  id?: string | undefined;
  /**
   * Either a URL of the image or the base64 encoded data URI.
   */
  url: string;
  /**
   * Specifies the detail level of the image. Currently only supported with OpenAI models
   */
  detail?: string | undefined;
};

/**
 * The image part of the prompt message. Only supported with vision models.
 */
export type PostV2LogsQuery2Response200ApplicationJson2 = {
  type: PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3EvalsType;
  imageUrl: PostV2LogsQuery2Response200ApplicationJSONImageUrl;
};

export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3Type =
  {
    Text: "text",
  } as const;
export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3Type =
  ClosedEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3Type
  >;

/**
 * Text content part of a prompt message
 */
export type PostV2LogsQuery2Response200ApplicationJson1 = {
  type: PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3Type;
  text: string;
};

export type PostV2LogsQueryContentResponse200ApplicationJson2 =
  | PostV2LogsQuery2Response200ApplicationJson1
  | PostV2LogsQuery2Response200ApplicationJson2;

/**
 * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
 */
export type PostV2LogsQueryEvalsResponseContent =
  | string
  | Array<
    | PostV2LogsQuery2Response200ApplicationJson1
    | PostV2LogsQuery2Response200ApplicationJson2
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataType =
  {
    Function: "function",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataType =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataType
  >;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function =
  {
    name: string;
    /**
     * JSON string arguments for the functions
     */
    arguments: string;
  };

export type PostV2LogsQueryEvalsResponseToolCalls = {
  id?: string | undefined;
  index?: number | undefined;
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataType;
  function:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function;
};

export type PostV2LogsQueryEvalsResponseMessages = {
  /**
   * The role of the prompt message
   */
  role: PostV2LogsQueryEvalsResponseRole;
  /**
   * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
   */
  content:
    | string
    | Array<
      | PostV2LogsQuery2Response200ApplicationJson1
      | PostV2LogsQuery2Response200ApplicationJson2
    >;
  toolCalls?: Array<PostV2LogsQueryEvalsResponseToolCalls> | undefined;
  /**
   * The id of the resource
   */
  id?: string | undefined;
};

export type PostV2LogsQueryEvalsResponsePromptConfig = {
  stream: boolean;
  model: string;
  /**
   * The id of the resource
   */
  modelDbId: string;
  /**
   * The type of the model
   */
  modelType: PostV2LogsQueryEvalsResponseModelType;
  /**
   * Model Parameters: Not all parameters apply to every model
   */
  modelParameters: PostV2LogsQueryEvalsResponseModelParameters;
  provider: PostV2LogsQueryEvalsResponseProvider;
  messages: Array<PostV2LogsQueryEvalsResponseMessages>;
  /**
   * The id of the resource
   */
  integrationId?: string | null | undefined;
  version?: string | undefined;
};

export type PostV2LogsQueryEvalsResponseVariables = {
  key: string;
  value?: any | undefined;
  isPii?: boolean | undefined;
};

export type PostV2LogsQueryEvalsResponsePerformance = {
  latency: number;
  firstTimeToToken?: number | null | undefined;
  tokensPerSecond?: number | null | undefined;
};

export type PostV2LogsQueryEvalsResponsePromptTokensDetails = {
  cachedTokens?: number | undefined;
};

export type PostV2LogsQueryEvalsResponseCompletionTokensDetails = {
  reasoningTokens?: number | undefined;
};

export type PostV2LogsQueryEvalsResponseUsage = {
  totalTokens?: number | undefined;
  promptTokens?: number | undefined;
  completionTokens?: number | undefined;
  promptTokensDetails?:
    | PostV2LogsQueryEvalsResponsePromptTokensDetails
    | undefined;
  completionTokensDetails?:
    | PostV2LogsQueryEvalsResponseCompletionTokensDetails
    | undefined;
};

export type PostV2LogsQueryEvalsResponseBilling = {
  totalCost?: number | null | undefined;
  inputCost?: number | null | undefined;
  outputCost?: number | null | undefined;
  billable: boolean;
};

/**
 * The type of the tool. Currently, only `function` is supported.
 */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunType =
  {
    Function: "function",
  } as const;
/**
 * The type of the tool. Currently, only `function` is supported.
 */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunType =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunType
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataToolsType =
  {
    Object: "object",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataToolsType =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataToolsType
  >;

/**
 * The parameters the functions accepts, described as a JSON Schema object.
 *
 * @remarks
 *
 *  Omitting `parameters` defines a function with an empty parameter list.
 */
export type PostV2LogsQueryEvalsResponseParameters = {
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataToolsType;
  properties: { [k: string]: any };
  required?: Array<string> | undefined;
  additionalProperties?: boolean | undefined;
};

export type PostV2LogsQueryEvalsResponseFunction = {
  /**
   * The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.
   */
  name: string;
  /**
   * A description of what the function does, used by the model to choose when and how to call the function.
   */
  description?: string | undefined;
  strict?: boolean | undefined;
  /**
   * The parameters the functions accepts, described as a JSON Schema object.
   *
   * @remarks
   *
   *  Omitting `parameters` defines a function with an empty parameter list.
   */
  parameters: PostV2LogsQueryEvalsResponseParameters;
};

export type PostV2LogsQueryEvalsResponseTools = {
  /**
   * The type of the tool. Currently, only `function` is supported.
   */
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunType;
  function: PostV2LogsQueryEvalsResponseFunction;
};

export type PostV2LogsQueryEvalsResponsePromptSnippets = {
  /**
   * The id of the resource
   */
  id: string;
  key: string;
  value: string;
};

export type PostV2LogsQueryEvalsResponseData = {
  choices?: Array<PostV2LogsQueryEvalsResponseChoices> | undefined;
  action: PostV2LogsQueryEvalsResponseAction;
  promptConfig: PostV2LogsQueryEvalsResponsePromptConfig;
  variables: Array<PostV2LogsQueryEvalsResponseVariables>;
  performance?: PostV2LogsQueryEvalsResponsePerformance | undefined;
  usage?: PostV2LogsQueryEvalsResponseUsage | undefined;
  billing?: PostV2LogsQueryEvalsResponseBilling | undefined;
  tools?: Array<PostV2LogsQueryEvalsResponseTools> | undefined;
  promptSnippets: Array<PostV2LogsQueryEvalsResponsePromptSnippets>;
};

export type PostV2LogsQueryEvalsWorkflowRun = {
  id: string;
  /**
   * Metadata for the workflow run
   */
  workflowMetadata?: { [k: string]: any } | undefined;
  /**
   * Input for the workflow run
   */
  workflowInput?: { [k: string]: any } | undefined;
  /**
   * Output for the workflow run
   */
  workflowOutput?: { [k: string]: any } | undefined;
  /**
   * An optional field that is filled if the workflow was triggered by an HTTP request
   */
  requestProperties?: PostV2LogsQueryEvalsResponseRequestProperties | undefined;
  startedAt: Date;
  finishedAt?: Date | undefined;
  /**
   * Orquesta product
   */
  productType: PostV2LogsQueryEvalsResponseProductType;
  relatedEntities: Array<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1
  >;
  evals: Array<
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4
  >;
  data: PostV2LogsQueryEvalsResponseData;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74;

export type PostV2LogsQueryEvalsResponse7 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Type;
  workflowRun: PostV2LogsQueryEvalsWorkflowRun;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Type =
  {
    BertScore: "bert_score",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Type
  >;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue = {
  f1: number;
  precision: number;
  recall: number;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals6Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals6Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals6Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals6Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64;

export type PostV2LogsQueryEvalsResponse6 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Type;
  value: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Type =
  {
    RougeN: "rouge_n",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Type
  >;

export type PostV2LogsQueryEvalsRouge1 = {
  f1: number;
  precision: number;
  recall: number;
};

export type PostV2LogsQueryEvalsRouge2 = {
  f1: number;
  precision: number;
  recall: number;
};

export type PostV2LogsQueryEvalsRougeL = {
  f1: number;
  precision: number;
  recall: number;
};

export type PostV2LogsQueryEvalsResponse200ApplicationJSONValue = {
  rouge1: PostV2LogsQueryEvalsRouge1;
  rouge2: PostV2LogsQueryEvalsRouge2;
  rougeL: PostV2LogsQueryEvalsRougeL;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals5Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals5Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals5Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals5Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54;

export type PostV2LogsQueryEvalsResponse5 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Type;
  value: PostV2LogsQueryEvalsResponse200ApplicationJSONValue;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Type =
  {
    StringArray: "string_array",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Type
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44;

export type PostV2LogsQueryEvalsResponse4 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Type;
  values: Array<string>;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Type =
  {
    Boolean: "boolean",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Type
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34;

export type PostV2LogsQueryEvalsResponse3 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Type;
  value: boolean;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Type =
  {
    Number: "number",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Type
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals24Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals24Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals24Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals24Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals23Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals23Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals23Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals23Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals22Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals22Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals22Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals22Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4;

export type PostV2LogsQueryEvalsResponse2 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Type;
  value: number;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Type =
  {
    String: "string",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Type
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals14Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals14Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals14Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals14Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3EvalsType =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3EvalsType =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3EvalsType
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3EvalsType;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals11Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals11Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals11Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals11Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34;

export type PostV2LogsQueryEvalsResponse1 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Type;
  value: string;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34
  >;
};

export type PostV2LogsQueryItemsEvals =
  | PostV2LogsQueryEvalsResponse1
  | PostV2LogsQueryEvalsResponse2
  | PostV2LogsQueryEvalsResponse3
  | PostV2LogsQueryEvalsResponse4
  | PostV2LogsQueryEvalsResponse5
  | PostV2LogsQueryEvalsResponse6
  | PostV2LogsQueryEvalsResponse7;

export const PostV2LogsQueryItemsProductType = {
  Playgrounds: "playgrounds",
} as const;
export type PostV2LogsQueryItemsProductType = ClosedEnum<
  typeof PostV2LogsQueryItemsProductType
>;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntities4 = {
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34Type;
  /**
   * The id of the resource
   */
  accountId: string;
};

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33Type =
  {
    PlaygroundCompletion: "playground_completion",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33Type
  >;

export type PostV2LogsQueryRelatedEntitiesResponse3 = {
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33Type;
  /**
   * The id of the resource
   */
  playgroundCompletionId: string;
};

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32Type =
  {
    PlaygroundBlock: "playground_block",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32Type
  >;

export type PostV2LogsQueryRelatedEntitiesResponse2 = {
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32Type;
  /**
   * The id of the resource
   */
  playgroundBlockId: string;
};

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Type =
  {
    Playground: "playground",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Type
  >;

export type PostV2LogsQueryRelatedEntitiesResponse1 = {
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Type;
  /**
   * The id of the resource
   */
  playgroundId: string;
};

export type PostV2LogsQueryItemsRelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse1
  | PostV2LogsQueryRelatedEntitiesResponse2
  | PostV2LogsQueryRelatedEntitiesResponse3
  | PostV2LogsQueryRelatedEntities4;

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsRole =
  {
    System: "system",
    Assistant: "assistant",
    User: "user",
    Exception: "exception",
    Tool: "tool",
    Prompt: "prompt",
    Correction: "correction",
    ExpectedOutput: "expected_output",
  } as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsRole =
  ClosedEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsRole
  >;

export type PostV2LogsQueryMessageResponse3 = {
  /**
   * The role of the prompt message
   */
  role: PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsRole;
  url: string;
};

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyRole =
  {
    System: "system",
    Assistant: "assistant",
    User: "user",
    Exception: "exception",
    Tool: "tool",
    Prompt: "prompt",
    Correction: "correction",
    ExpectedOutput: "expected_output",
  } as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyRole =
  ClosedEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyRole
  >;

export type PostV2LogsQueryMessageResponse2 = {
  /**
   * The role of the prompt message
   */
  role: PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyRole;
  content: string | null;
};

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryMessageResponse200ApplicationJSONRole = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryMessageResponse200ApplicationJSONRole = ClosedEnum<
  typeof PostV2LogsQueryMessageResponse200ApplicationJSONRole
>;

export const PostV2LogsQueryMessageResponseType = {
  Function: "function",
} as const;
export type PostV2LogsQueryMessageResponseType = ClosedEnum<
  typeof PostV2LogsQueryMessageResponseType
>;

export type PostV2LogsQueryMessageResponseFunction = {
  name: string;
  /**
   * JSON string arguments for the functions
   */
  arguments: string;
};

export type PostV2LogsQueryMessageResponseToolCalls = {
  id?: string | undefined;
  index?: number | undefined;
  type: PostV2LogsQueryMessageResponseType;
  function: PostV2LogsQueryMessageResponseFunction;
};

export type PostV2LogsQueryMessageResponse1 = {
  /**
   * The role of the prompt message
   */
  role: PostV2LogsQueryMessageResponse200ApplicationJSONRole;
  content?: string | null | undefined;
  toolCalls: Array<PostV2LogsQueryMessageResponseToolCalls>;
};

export type PostV2LogsQueryItemsMessage =
  | PostV2LogsQueryMessageResponse2
  | PostV2LogsQueryMessageResponse3
  | PostV2LogsQueryMessageResponse1;

export type PostV2LogsQueryItemsChoices = {
  index: number;
  message?:
    | PostV2LogsQueryMessageResponse2
    | PostV2LogsQueryMessageResponse3
    | PostV2LogsQueryMessageResponse1
    | undefined;
  finishReason?: string | null | undefined;
};

export const PostV2LogsQueryItemsAction = {
  Invoke: "invoke",
} as const;
export type PostV2LogsQueryItemsAction = ClosedEnum<
  typeof PostV2LogsQueryItemsAction
>;

/**
 * The type of the model
 */
export const PostV2LogsQueryItemsModelType = {
  Chat: "chat",
  Completion: "completion",
  Embedding: "embedding",
  Vision: "vision",
  Image: "image",
  Tts: "tts",
  Stt: "stt",
  Rerank: "rerank",
} as const;
/**
 * The type of the model
 */
export type PostV2LogsQueryItemsModelType = ClosedEnum<
  typeof PostV2LogsQueryItemsModelType
>;

/**
 * Only supported on `image` models.
 */
export const PostV2LogsQueryItemsFormat = {
  Url: "url",
  B64Json: "b64_json",
  Text: "text",
  JsonObject: "json_object",
} as const;
/**
 * Only supported on `image` models.
 */
export type PostV2LogsQueryItemsFormat = ClosedEnum<
  typeof PostV2LogsQueryItemsFormat
>;

/**
 * Only supported on `image` models.
 */
export const PostV2LogsQueryItemsQuality = {
  Standard: "standard",
  Hd: "hd",
} as const;
/**
 * Only supported on `image` models.
 */
export type PostV2LogsQueryItemsQuality = ClosedEnum<
  typeof PostV2LogsQueryItemsQuality
>;

export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONType = {
  JsonObject: "json_object",
} as const;
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONType =
  ClosedEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONType
  >;

export type PostV2LogsQueryResponseFormatResponse2 = {
  type: PostV2LogsQueryResponseFormatResponse200ApplicationJSONType;
};

export const PostV2LogsQueryResponseFormatResponse200Type = {
  JsonSchema: "json_schema",
} as const;
export type PostV2LogsQueryResponseFormatResponse200Type = ClosedEnum<
  typeof PostV2LogsQueryResponseFormatResponse200Type
>;

export type PostV2LogsQueryResponseFormatResponseJsonSchema = {
  name: string;
  strict: boolean;
  schema: { [k: string]: any };
};

export type PostV2LogsQueryResponseFormatResponse1 = {
  type: PostV2LogsQueryResponseFormatResponse200Type;
  jsonSchema: PostV2LogsQueryResponseFormatResponseJsonSchema;
};

/**
 * An object specifying the format that the model must output.
 *
 * @remarks
 *
 *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
 *
 *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
 *
 * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
 */
export type PostV2LogsQueryItemsResponseFormat =
  | PostV2LogsQueryResponseFormatResponse2
  | PostV2LogsQueryResponseFormatResponse1;

/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export const PostV2LogsQueryItemsPhotoRealVersion = {
  V1: "v1",
  V2: "v2",
} as const;
/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export type PostV2LogsQueryItemsPhotoRealVersion = ClosedEnum<
  typeof PostV2LogsQueryItemsPhotoRealVersion
>;

/**
 * The format to return the embeddings
 */
export const PostV2LogsQueryItemsEncodingFormat = {
  Float: "float",
  Base64: "base64",
} as const;
/**
 * The format to return the embeddings
 */
export type PostV2LogsQueryItemsEncodingFormat = ClosedEnum<
  typeof PostV2LogsQueryItemsEncodingFormat
>;

/**
 * Model Parameters: Not all parameters apply to every model
 */
export type PostV2LogsQueryItemsModelParameters = {
  /**
   * Only supported on `chat` and `completion` models.
   */
  temperature?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  maxTokens?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topK?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topP?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  frequencyPenalty?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  presencePenalty?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  numImages?: number | undefined;
  /**
   * Best effort deterministic seed for the model. Currently only OpenAI models support these
   */
  seed?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  format?: PostV2LogsQueryItemsFormat | undefined;
  /**
   * Only supported on `image` models.
   */
  dimensions?: string | undefined;
  /**
   * Only supported on `image` models.
   */
  quality?: PostV2LogsQueryItemsQuality | undefined;
  /**
   * Only supported on `image` models.
   */
  style?: string | undefined;
  /**
   * An object specifying the format that the model must output.
   *
   * @remarks
   *
   *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
   *
   *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
   *
   * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
   */
  responseFormat?:
    | PostV2LogsQueryResponseFormatResponse2
    | PostV2LogsQueryResponseFormatResponse1
    | null
    | undefined;
  /**
   * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
   */
  photoRealVersion?: PostV2LogsQueryItemsPhotoRealVersion | undefined;
  /**
   * The format to return the embeddings
   */
  encodingFormat?: PostV2LogsQueryItemsEncodingFormat | undefined;
};

export const PostV2LogsQueryItemsProvider = {
  Cohere: "cohere",
  Openai: "openai",
  Anthropic: "anthropic",
  Huggingface: "huggingface",
  Replicate: "replicate",
  Google: "google",
  GoogleAi: "google-ai",
  Azure: "azure",
  Aws: "aws",
  Anyscale: "anyscale",
  Perplexity: "perplexity",
  Groq: "groq",
  Fal: "fal",
  Leonardoai: "leonardoai",
  Nvidia: "nvidia",
} as const;
export type PostV2LogsQueryItemsProvider = ClosedEnum<
  typeof PostV2LogsQueryItemsProvider
>;

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryItemsRole = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryItemsRole = ClosedEnum<
  typeof PostV2LogsQueryItemsRole
>;

export const PostV2LogsQuery2Response200ApplicationJSONType = {
  ImageUrl: "image_url",
} as const;
export type PostV2LogsQuery2Response200ApplicationJSONType = ClosedEnum<
  typeof PostV2LogsQuery2Response200ApplicationJSONType
>;

export type PostV2LogsQuery2ResponseImageUrl = {
  /**
   * The orq.ai id of the image
   */
  id?: string | undefined;
  /**
   * Either a URL of the image or the base64 encoded data URI.
   */
  url: string;
  /**
   * Specifies the detail level of the image. Currently only supported with OpenAI models
   */
  detail?: string | undefined;
};

/**
 * The image part of the prompt message. Only supported with vision models.
 */
export type PostV2LogsQuery2Response2 = {
  type: PostV2LogsQuery2Response200ApplicationJSONType;
  imageUrl: PostV2LogsQuery2ResponseImageUrl;
};

export const PostV2LogsQuery2Response200Type = {
  Text: "text",
} as const;
export type PostV2LogsQuery2Response200Type = ClosedEnum<
  typeof PostV2LogsQuery2Response200Type
>;

/**
 * Text content part of a prompt message
 */
export type PostV2LogsQuery2Response1 = {
  type: PostV2LogsQuery2Response200Type;
  text: string;
};

export type PostV2LogsQueryContentResponse2 =
  | PostV2LogsQuery2Response1
  | PostV2LogsQuery2Response2;

/**
 * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
 */
export type PostV2LogsQueryItemsContent =
  | string
  | Array<PostV2LogsQuery2Response1 | PostV2LogsQuery2Response2>;

export const PostV2LogsQueryItemsResponse200Type = {
  Function: "function",
} as const;
export type PostV2LogsQueryItemsResponse200Type = ClosedEnum<
  typeof PostV2LogsQueryItemsResponse200Type
>;

export type PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction =
  {
    name: string;
    /**
     * JSON string arguments for the functions
     */
    arguments: string;
  };

export type PostV2LogsQueryItemsToolCalls = {
  id?: string | undefined;
  index?: number | undefined;
  type: PostV2LogsQueryItemsResponse200Type;
  function: PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction;
};

export type PostV2LogsQueryItemsMessages = {
  /**
   * The role of the prompt message
   */
  role: PostV2LogsQueryItemsRole;
  /**
   * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
   */
  content:
    | string
    | Array<PostV2LogsQuery2Response1 | PostV2LogsQuery2Response2>;
  toolCalls?: Array<PostV2LogsQueryItemsToolCalls> | undefined;
  /**
   * The id of the resource
   */
  id?: string | undefined;
};

export type PostV2LogsQueryItemsPromptConfig = {
  stream: boolean;
  model: string;
  /**
   * The id of the resource
   */
  modelDbId: string;
  /**
   * The type of the model
   */
  modelType: PostV2LogsQueryItemsModelType;
  /**
   * Model Parameters: Not all parameters apply to every model
   */
  modelParameters: PostV2LogsQueryItemsModelParameters;
  provider: PostV2LogsQueryItemsProvider;
  messages: Array<PostV2LogsQueryItemsMessages>;
  /**
   * The id of the resource
   */
  integrationId?: string | null | undefined;
  version?: string | undefined;
};

export type ItemsVariables = {
  key: string;
  value?: any | undefined;
  isPii?: boolean | undefined;
};

export type PostV2LogsQueryItemsPerformance = {
  latency: number;
  firstTimeToToken?: number | null | undefined;
  tokensPerSecond?: number | null | undefined;
};

export type ItemsPromptTokensDetails = {
  cachedTokens?: number | undefined;
};

export type ItemsCompletionTokensDetails = {
  reasoningTokens?: number | undefined;
};

export type PostV2LogsQueryItemsUsage = {
  totalTokens?: number | undefined;
  promptTokens?: number | undefined;
  completionTokens?: number | undefined;
  promptTokensDetails?: ItemsPromptTokensDetails | undefined;
  completionTokensDetails?: ItemsCompletionTokensDetails | undefined;
};

export type ItemsBilling = {
  totalCost?: number | null | undefined;
  inputCost?: number | null | undefined;
  outputCost?: number | null | undefined;
  billable: boolean;
};

export type PostV2LogsQueryItemsResponseMetadata = {
  /**
   * Unique identifier for the data source
   */
  datasourceId: string;
  /**
   * Unique identifier for the chunk
   */
  chunkId: string;
  /**
   * Name of the uploaded file during the datasource creation.
   */
  fileName: string;
  /**
   * Reference to the page number the chunk was extracted from. The property will only be available for `application/pdf` type of files. For other file types, the property will be `null`.
   */
  pageNumber?: number | null | undefined;
  /**
   * Type of the uploaded file when the datasource was created.
   */
  fileType: string;
};

export type ItemsDocuments = {
  /**
   * The id of the resource
   */
  id: string;
  /**
   * Text content of the document
   */
  text: string;
  metadata: PostV2LogsQueryItemsResponseMetadata;
  /**
   * The score of the document
   */
  score: number;
  /**
   * The rerank score of the document
   */
  rerankScore?: number | undefined;
};

export type PostV2LogsQueryItemsRetrievals = {
  /**
   * Unique id of the knowledge base
   */
  knowledgeId: string;
  /**
   * The documents returned
   */
  documents: Array<ItemsDocuments>;
  /**
   * The key of the knowledge base
   */
  knowledgeKey: string;
  /**
   * The query used to search the knowledge base
   */
  query: string;
};

export const PostV2LogsQueryConfigurationResponse200Type = {
  Query: "query",
} as const;
export type PostV2LogsQueryConfigurationResponse200Type = ClosedEnum<
  typeof PostV2LogsQueryConfigurationResponse200Type
>;

export type PostV2LogsQueryConfiguration2 = {
  type: PostV2LogsQueryConfigurationResponse200Type;
  query: string;
};

export const PostV2LogsQueryConfigurationResponseType = {
  LastUserMessage: "last_user_message",
} as const;
export type PostV2LogsQueryConfigurationResponseType = ClosedEnum<
  typeof PostV2LogsQueryConfigurationResponseType
>;

export type PostV2LogsQueryConfiguration1 = {
  type: PostV2LogsQueryConfigurationResponseType;
};

/**
 * Defines the configuration settings which can either be for a user message or a text entry.
 */
export type ItemsConfiguration =
  | PostV2LogsQueryConfiguration1
  | PostV2LogsQueryConfiguration2;

export type ItemsKnowledgeBases = {
  /**
   * The id of the resource
   */
  knowledgeId: string;
  /**
   * Defines the configuration settings which can either be for a user message or a text entry.
   */
  configuration: PostV2LogsQueryConfiguration1 | PostV2LogsQueryConfiguration2;
};

/**
 * The type of the tool. Currently, only `function` is supported.
 */
export const PostV2LogsQueryItemsType = {
  Function: "function",
} as const;
/**
 * The type of the tool. Currently, only `function` is supported.
 */
export type PostV2LogsQueryItemsType = ClosedEnum<
  typeof PostV2LogsQueryItemsType
>;

export const PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyType = {
  Object: "object",
} as const;
export type PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyType
  >;

/**
 * The parameters the functions accepts, described as a JSON Schema object.
 *
 * @remarks
 *
 *  Omitting `parameters` defines a function with an empty parameter list.
 */
export type PostV2LogsQueryItemsParameters = {
  type: PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyType;
  properties: { [k: string]: any };
  required?: Array<string> | undefined;
  additionalProperties?: boolean | undefined;
};

export type PostV2LogsQueryItemsFunction = {
  /**
   * The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.
   */
  name: string;
  /**
   * A description of what the function does, used by the model to choose when and how to call the function.
   */
  description?: string | undefined;
  strict?: boolean | undefined;
  /**
   * The parameters the functions accepts, described as a JSON Schema object.
   *
   * @remarks
   *
   *  Omitting `parameters` defines a function with an empty parameter list.
   */
  parameters: PostV2LogsQueryItemsParameters;
};

export type PostV2LogsQueryItemsTools = {
  /**
   * The type of the tool. Currently, only `function` is supported.
   */
  type: PostV2LogsQueryItemsType;
  function: PostV2LogsQueryItemsFunction;
};

export type ItemsPromptSnippets = {
  /**
   * The id of the resource
   */
  id: string;
  key: string;
  value: string;
};

export type PostV2LogsQueryItemsResponseData = {
  choices: Array<PostV2LogsQueryItemsChoices>;
  integrationIds?: Array<string> | undefined;
  action: PostV2LogsQueryItemsAction;
  promptConfig: PostV2LogsQueryItemsPromptConfig;
  variables: Array<ItemsVariables>;
  performance?: PostV2LogsQueryItemsPerformance | undefined;
  usage?: PostV2LogsQueryItemsUsage | undefined;
  billing: ItemsBilling;
  providerResponse?: any | undefined;
  retrievals?: Array<PostV2LogsQueryItemsRetrievals> | undefined;
  knowledgeBases?: Array<ItemsKnowledgeBases> | undefined;
  tools?: Array<PostV2LogsQueryItemsTools> | undefined;
  promptSnippets: Array<ItemsPromptSnippets>;
};

/**
 * The schema for the deployment workflow run
 */
export type Items3 = {
  /**
   * The unique identifier for the workflow run
   */
  id: string;
  /**
   * The unique identifier for the workspace
   */
  workspaceId: string;
  /**
   * Metadata for the workflow run
   */
  workflowMetadata?: { [k: string]: any } | undefined;
  /**
   * Input for the workflow run
   */
  workflowInput?: { [k: string]: any } | undefined;
  /**
   * Output for the workflow run
   */
  workflowOutput?: { [k: string]: any } | undefined;
  /**
   * The optional project_id for the entity of the event
   */
  projectId?: string | undefined;
  /**
   * An optional field that is filled if the workflow was triggered by an HTTP request
   */
  requestProperties?: PostV2LogsQueryItemsRequestProperties | undefined;
  startedAt: Date;
  finishedAt?: Date | undefined;
  evals: Array<
    | PostV2LogsQueryEvalsResponse1
    | PostV2LogsQueryEvalsResponse2
    | PostV2LogsQueryEvalsResponse3
    | PostV2LogsQueryEvalsResponse4
    | PostV2LogsQueryEvalsResponse5
    | PostV2LogsQueryEvalsResponse6
    | PostV2LogsQueryEvalsResponse7
  >;
  productType: PostV2LogsQueryItemsProductType;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse1
    | PostV2LogsQueryRelatedEntitiesResponse2
    | PostV2LogsQueryRelatedEntitiesResponse3
    | PostV2LogsQueryRelatedEntities4
  >;
  data: PostV2LogsQueryItemsResponseData;
};

/**
 * An optional field that is filled if the workflow was triggered by an HTTP request
 */
export type ItemsRequestProperties = {
  source?: string | undefined;
  location?: string | undefined;
  latitude?: string | undefined;
  longitude?: string | undefined;
  responseTime?: number | undefined;
  metadata?: { [k: string]: any } | undefined;
  status?: number | undefined;
  context?: { [k: string]: any } | undefined;
  extraParams?: { [k: string]: any } | undefined;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Type =
  {
    LlmEval: "llm_eval",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Type
  >;

/**
 * An optional field that is filled if the workflow was triggered by an HTTP request
 */
export type PostV2LogsQueryEvalsRequestProperties = {
  source?: string | undefined;
  location?: string | undefined;
  latitude?: string | undefined;
  longitude?: string | undefined;
  responseTime?: number | undefined;
  metadata?: { [k: string]: any } | undefined;
  status?: number | undefined;
  context?: { [k: string]: any } | undefined;
  extraParams?: { [k: string]: any } | undefined;
};

/**
 * Orquesta product
 */
export const PostV2LogsQueryEvalsProductType = {
  Remoteconfigs: "remoteconfigs",
  Deployments: "deployments",
  Experiments: "experiments",
  Playgrounds: "playgrounds",
  LlmEvaluator: "llm_evaluator",
  Knowledge: "knowledge",
  Router: "router",
  Workflows: "workflows",
} as const;
/**
 * Orquesta product
 */
export type PostV2LogsQueryEvalsProductType = ClosedEnum<
  typeof PostV2LogsQueryEvalsProductType
>;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunRelatedEntities =
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Type =
  {
    StringArray: "string_array",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Type
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4 = {
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Type;
  values: Array<string>;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType =
  {
    Boolean: "boolean",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunStatus =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunStatus =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunStatus
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals34Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals34Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals34Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals34Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals33Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals33Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals33Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals33Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals32Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals32Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals32Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals32Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunRelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3 = {
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType;
  value: boolean;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunStatus;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Type =
  {
    Number: "number",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Type
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals24Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals24Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals24Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals24Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals23Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals23Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals23Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals23Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals22Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals22Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals22Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals22Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2 = {
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Type;
  value: number;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsType =
  {
    String: "string",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsType =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsType
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsStatus =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsStatus =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsStatus
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvalsType =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvalsType =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvalsType
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvalsType;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsRelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1 = {
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsType;
  value: string;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsStatus;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14
  >;
};

export type PostV2LogsQueryEvalsEvals =
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4;

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Evals7Role =
  {
    System: "system",
    Assistant: "assistant",
    User: "user",
    Exception: "exception",
    Tool: "tool",
    Prompt: "prompt",
    Correction: "correction",
    ExpectedOutput: "expected_output",
  } as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Evals7Role =
  ClosedEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Evals7Role
  >;

export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3 = {
  /**
   * The role of the prompt message
   */
  role:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Evals7Role;
  url: string;
};

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2EvalsRole =
  {
    System: "system",
    Assistant: "assistant",
    User: "user",
    Exception: "exception",
    Tool: "tool",
    Prompt: "prompt",
    Correction: "correction",
    ExpectedOutput: "expected_output",
  } as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2EvalsRole =
  ClosedEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2EvalsRole
  >;

export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2 = {
  /**
   * The role of the prompt message
   */
  role:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2EvalsRole;
  content: string | null;
};

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Role =
  {
    System: "system",
    Assistant: "assistant",
    User: "user",
    Exception: "exception",
    Tool: "tool",
    Prompt: "prompt",
    Correction: "correction",
    ExpectedOutput: "expected_output",
  } as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Role =
  ClosedEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Role
  >;

export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyType =
  {
    Function: "function",
  } as const;
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyType
  >;

export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction =
  {
    name: string;
    /**
     * JSON string arguments for the functions
     */
    arguments: string;
  };

export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls =
  {
    id?: string | undefined;
    index?: number | undefined;
    type: PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyType;
    function:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction;
  };

export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1 = {
  /**
   * The role of the prompt message
   */
  role: PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Role;
  content?: string | null | undefined;
  toolCalls: Array<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls
  >;
};

export type PostV2LogsQueryEvalsMessage =
  | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2
  | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3
  | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1;

export type PostV2LogsQueryEvalsChoices = {
  index: number;
  message?:
    | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2
    | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3
    | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1
    | undefined;
  finishReason?: string | null | undefined;
};

export const PostV2LogsQueryEvalsAction = {
  Invoke: "invoke",
} as const;
export type PostV2LogsQueryEvalsAction = ClosedEnum<
  typeof PostV2LogsQueryEvalsAction
>;

/**
 * The type of the model
 */
export const PostV2LogsQueryEvalsModelType = {
  Chat: "chat",
  Completion: "completion",
  Embedding: "embedding",
  Vision: "vision",
  Image: "image",
  Tts: "tts",
  Stt: "stt",
  Rerank: "rerank",
} as const;
/**
 * The type of the model
 */
export type PostV2LogsQueryEvalsModelType = ClosedEnum<
  typeof PostV2LogsQueryEvalsModelType
>;

/**
 * Only supported on `image` models.
 */
export const PostV2LogsQueryEvalsFormat = {
  Url: "url",
  B64Json: "b64_json",
  Text: "text",
  JsonObject: "json_object",
} as const;
/**
 * Only supported on `image` models.
 */
export type PostV2LogsQueryEvalsFormat = ClosedEnum<
  typeof PostV2LogsQueryEvalsFormat
>;

/**
 * Only supported on `image` models.
 */
export const PostV2LogsQueryEvalsQuality = {
  Standard: "standard",
  Hd: "hd",
} as const;
/**
 * Only supported on `image` models.
 */
export type PostV2LogsQueryEvalsQuality = ClosedEnum<
  typeof PostV2LogsQueryEvalsQuality
>;

export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Evals7Type =
  {
    JsonObject: "json_object",
  } as const;
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Evals7Type =
  ClosedEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Evals7Type
  >;

export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2 =
  {
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Evals7Type;
  };

export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2EvalsType =
  {
    JsonSchema: "json_schema",
  } as const;
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2EvalsType =
  ClosedEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2EvalsType
  >;

export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema =
  {
    name: string;
    strict: boolean;
    schema: { [k: string]: any };
  };

export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1 =
  {
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2EvalsType;
    jsonSchema:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema;
  };

/**
 * An object specifying the format that the model must output.
 *
 * @remarks
 *
 *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
 *
 *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
 *
 * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
 */
export type PostV2LogsQueryEvalsResponseFormat =
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1;

/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export const PostV2LogsQueryEvalsPhotoRealVersion = {
  V1: "v1",
  V2: "v2",
} as const;
/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export type PostV2LogsQueryEvalsPhotoRealVersion = ClosedEnum<
  typeof PostV2LogsQueryEvalsPhotoRealVersion
>;

/**
 * The format to return the embeddings
 */
export const PostV2LogsQueryEvalsEncodingFormat = {
  Float: "float",
  Base64: "base64",
} as const;
/**
 * The format to return the embeddings
 */
export type PostV2LogsQueryEvalsEncodingFormat = ClosedEnum<
  typeof PostV2LogsQueryEvalsEncodingFormat
>;

/**
 * Model Parameters: Not all parameters apply to every model
 */
export type PostV2LogsQueryEvalsModelParameters = {
  /**
   * Only supported on `chat` and `completion` models.
   */
  temperature?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  maxTokens?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topK?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topP?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  frequencyPenalty?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  presencePenalty?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  numImages?: number | undefined;
  /**
   * Best effort deterministic seed for the model. Currently only OpenAI models support these
   */
  seed?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  format?: PostV2LogsQueryEvalsFormat | undefined;
  /**
   * Only supported on `image` models.
   */
  dimensions?: string | undefined;
  /**
   * Only supported on `image` models.
   */
  quality?: PostV2LogsQueryEvalsQuality | undefined;
  /**
   * Only supported on `image` models.
   */
  style?: string | undefined;
  /**
   * An object specifying the format that the model must output.
   *
   * @remarks
   *
   *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
   *
   *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
   *
   * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
   */
  responseFormat?:
    | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2
    | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1
    | null
    | undefined;
  /**
   * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
   */
  photoRealVersion?: PostV2LogsQueryEvalsPhotoRealVersion | undefined;
  /**
   * The format to return the embeddings
   */
  encodingFormat?: PostV2LogsQueryEvalsEncodingFormat | undefined;
};

export const PostV2LogsQueryEvalsProvider = {
  Cohere: "cohere",
  Openai: "openai",
  Anthropic: "anthropic",
  Huggingface: "huggingface",
  Replicate: "replicate",
  Google: "google",
  GoogleAi: "google-ai",
  Azure: "azure",
  Aws: "aws",
  Anyscale: "anyscale",
  Perplexity: "perplexity",
  Groq: "groq",
  Fal: "fal",
  Leonardoai: "leonardoai",
  Nvidia: "nvidia",
} as const;
export type PostV2LogsQueryEvalsProvider = ClosedEnum<
  typeof PostV2LogsQueryEvalsProvider
>;

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryEvalsRole = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryEvalsRole = ClosedEnum<
  typeof PostV2LogsQueryEvalsRole
>;

export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2EvalsType =
  {
    ImageUrl: "image_url",
  } as const;
export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2EvalsType =
  ClosedEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2EvalsType
  >;

export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl = {
  /**
   * The orq.ai id of the image
   */
  id?: string | undefined;
  /**
   * Either a URL of the image or the base64 encoded data URI.
   */
  url: string;
  /**
   * Specifies the detail level of the image. Currently only supported with OpenAI models
   */
  detail?: string | undefined;
};

/**
 * The image part of the prompt message. Only supported with vision models.
 */
export type PostV2LogsQuery2Response200ApplicationJSONResponseBody2 = {
  type: PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2EvalsType;
  imageUrl: PostV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl;
};

export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2Type =
  {
    Text: "text",
  } as const;
export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2Type =
  ClosedEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2Type
  >;

/**
 * Text content part of a prompt message
 */
export type PostV2LogsQuery2Response200ApplicationJSONResponseBody1 = {
  type: PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2Type;
  text: string;
};

export type PostV2LogsQueryContentResponse200ApplicationJSONResponseBody2 =
  | PostV2LogsQuery2Response200ApplicationJSONResponseBody1
  | PostV2LogsQuery2Response200ApplicationJSONResponseBody2;

/**
 * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
 */
export type PostV2LogsQueryEvalsContent =
  | string
  | Array<
    | PostV2LogsQuery2Response200ApplicationJSONResponseBody1
    | PostV2LogsQuery2Response200ApplicationJSONResponseBody2
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataType =
  {
    Function: "function",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataType =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataType
  >;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction =
  {
    name: string;
    /**
     * JSON string arguments for the functions
     */
    arguments: string;
  };

export type PostV2LogsQueryEvalsToolCalls = {
  id?: string | undefined;
  index?: number | undefined;
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataType;
  function: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction;
};

export type PostV2LogsQueryEvalsMessages = {
  /**
   * The role of the prompt message
   */
  role: PostV2LogsQueryEvalsRole;
  /**
   * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
   */
  content:
    | string
    | Array<
      | PostV2LogsQuery2Response200ApplicationJSONResponseBody1
      | PostV2LogsQuery2Response200ApplicationJSONResponseBody2
    >;
  toolCalls?: Array<PostV2LogsQueryEvalsToolCalls> | undefined;
  /**
   * The id of the resource
   */
  id?: string | undefined;
};

export type PostV2LogsQueryEvalsPromptConfig = {
  stream: boolean;
  model: string;
  /**
   * The id of the resource
   */
  modelDbId: string;
  /**
   * The type of the model
   */
  modelType: PostV2LogsQueryEvalsModelType;
  /**
   * Model Parameters: Not all parameters apply to every model
   */
  modelParameters: PostV2LogsQueryEvalsModelParameters;
  provider: PostV2LogsQueryEvalsProvider;
  messages: Array<PostV2LogsQueryEvalsMessages>;
  /**
   * The id of the resource
   */
  integrationId?: string | null | undefined;
  version?: string | undefined;
};

export type PostV2LogsQueryEvalsResponse200ApplicationJSONVariables = {
  key: string;
  value?: any | undefined;
  isPii?: boolean | undefined;
};

export type PostV2LogsQueryEvalsPerformance = {
  latency: number;
  firstTimeToToken?: number | null | undefined;
  tokensPerSecond?: number | null | undefined;
};

export type PostV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails =
  {
    cachedTokens?: number | undefined;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails =
  {
    reasoningTokens?: number | undefined;
  };

export type PostV2LogsQueryEvalsUsage = {
  totalTokens?: number | undefined;
  promptTokens?: number | undefined;
  completionTokens?: number | undefined;
  promptTokensDetails?:
    | PostV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails
    | undefined;
  completionTokensDetails?:
    | PostV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails
    | undefined;
};

export type PostV2LogsQueryEvalsResponse200ApplicationJSONBilling = {
  totalCost?: number | null | undefined;
  inputCost?: number | null | undefined;
  outputCost?: number | null | undefined;
  billable: boolean;
};

/**
 * The type of the tool. Currently, only `function` is supported.
 */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunType =
  {
    Function: "function",
  } as const;
/**
 * The type of the tool. Currently, only `function` is supported.
 */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunType =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunType
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataToolsType =
  {
    Object: "object",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataToolsType =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataToolsType
  >;

/**
 * The parameters the functions accepts, described as a JSON Schema object.
 *
 * @remarks
 *
 *  Omitting `parameters` defines a function with an empty parameter list.
 */
export type PostV2LogsQueryEvalsParameters = {
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataToolsType;
  properties: { [k: string]: any };
  required?: Array<string> | undefined;
  additionalProperties?: boolean | undefined;
};

export type PostV2LogsQueryEvalsFunction = {
  /**
   * The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.
   */
  name: string;
  /**
   * A description of what the function does, used by the model to choose when and how to call the function.
   */
  description?: string | undefined;
  strict?: boolean | undefined;
  /**
   * The parameters the functions accepts, described as a JSON Schema object.
   *
   * @remarks
   *
   *  Omitting `parameters` defines a function with an empty parameter list.
   */
  parameters: PostV2LogsQueryEvalsParameters;
};

export type PostV2LogsQueryEvalsTools = {
  /**
   * The type of the tool. Currently, only `function` is supported.
   */
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunType;
  function: PostV2LogsQueryEvalsFunction;
};

export type PostV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets = {
  /**
   * The id of the resource
   */
  id: string;
  key: string;
  value: string;
};

export type PostV2LogsQueryEvalsData = {
  choices?: Array<PostV2LogsQueryEvalsChoices> | undefined;
  action: PostV2LogsQueryEvalsAction;
  promptConfig: PostV2LogsQueryEvalsPromptConfig;
  variables: Array<PostV2LogsQueryEvalsResponse200ApplicationJSONVariables>;
  performance?: PostV2LogsQueryEvalsPerformance | undefined;
  usage?: PostV2LogsQueryEvalsUsage | undefined;
  billing?: PostV2LogsQueryEvalsResponse200ApplicationJSONBilling | undefined;
  tools?: Array<PostV2LogsQueryEvalsTools> | undefined;
  promptSnippets: Array<
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets
  >;
};

export type PostV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun = {
  id: string;
  /**
   * Metadata for the workflow run
   */
  workflowMetadata?: { [k: string]: any } | undefined;
  /**
   * Input for the workflow run
   */
  workflowInput?: { [k: string]: any } | undefined;
  /**
   * Output for the workflow run
   */
  workflowOutput?: { [k: string]: any } | undefined;
  /**
   * An optional field that is filled if the workflow was triggered by an HTTP request
   */
  requestProperties?: PostV2LogsQueryEvalsRequestProperties | undefined;
  startedAt: Date;
  finishedAt?: Date | undefined;
  /**
   * Orquesta product
   */
  productType: PostV2LogsQueryEvalsProductType;
  relatedEntities: Array<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1
  >;
  evals: Array<
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4
  >;
  data: PostV2LogsQueryEvalsData;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74;

export type PostV2LogsQueryEvals7 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Type;
  workflowRun: PostV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Type =
  {
    BertScore: "bert_score",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Type
  >;

export type PostV2LogsQueryEvalsResponse200Value = {
  f1: number;
  precision: number;
  recall: number;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals6Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals6Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals6Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals6Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64;

export type PostV2LogsQueryEvals6 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Type;
  value: PostV2LogsQueryEvalsResponse200Value;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Type =
  {
    RougeN: "rouge_n",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Type
  >;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONRouge1 = {
  f1: number;
  precision: number;
  recall: number;
};

export type PostV2LogsQueryEvalsResponse200ApplicationJSONRouge2 = {
  f1: number;
  precision: number;
  recall: number;
};

export type PostV2LogsQueryEvalsResponse200ApplicationJSONRougeL = {
  f1: number;
  precision: number;
  recall: number;
};

export type PostV2LogsQueryEvalsResponseValue = {
  rouge1: PostV2LogsQueryEvalsResponse200ApplicationJSONRouge1;
  rouge2: PostV2LogsQueryEvalsResponse200ApplicationJSONRouge2;
  rougeL: PostV2LogsQueryEvalsResponse200ApplicationJSONRougeL;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals5Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals5Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals5Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals5Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54;

export type PostV2LogsQueryEvals5 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Type;
  value: PostV2LogsQueryEvalsResponseValue;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Type =
  {
    StringArray: "string_array",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Type
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44;

export type PostV2LogsQueryEvals4 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Type;
  values: Array<string>;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Type =
  {
    Boolean: "boolean",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Type
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34;

export type PostV2LogsQueryEvals3 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Type;
  value: boolean;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22Type =
  {
    Number: "number",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22Type
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals24Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals24Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals24Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals24Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals23Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals23Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals23Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals23Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals22Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals22Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals22Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals22Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4;

export type PostV2LogsQueryEvals2 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22Type;
  value: number;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Type =
  {
    String: "string",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Type
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsStatus =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsStatus =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsStatus
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals14Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals14Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals14Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals14Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2EvalsType =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2EvalsType =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2EvalsType
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2EvalsType;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals11Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals11Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals11Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals11Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24;

export type PostV2LogsQueryEvals1 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Type;
  value: string;
  /**
   * The id of the resource
   */
  id: string;
  status: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsStatus;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24
  >;
};

export type ItemsEvals =
  | PostV2LogsQueryEvals1
  | PostV2LogsQueryEvals2
  | PostV2LogsQueryEvals3
  | PostV2LogsQueryEvals4
  | PostV2LogsQueryEvals5
  | PostV2LogsQueryEvals6
  | PostV2LogsQueryEvals7;

export const ItemsProductType = {
  Deployments: "deployments",
} as const;
export type ItemsProductType = ClosedEnum<typeof ItemsProductType>;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems27Type =
  {
    Conversation: "conversation",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems27Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems27Type
  >;

/**
 * Define the relationship between multiple logs that are part of the same conversation
 */
export type PostV2LogsQueryRelatedEntities7 = {
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems27Type;
  conversationId: string;
};

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems26Type =
  {
    Chain: "chain",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems26Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems26Type
  >;

/**
 * Define the relationship between multiple logs that are part of the same chain
 */
export type PostV2LogsQueryRelatedEntities6 = {
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems26Type;
  chainId: string;
};

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse5 = {
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Type;
  contactId: string;
};

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItemsType =
  {
    DeploymentCompletion: "deployment_completion",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItemsType =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItemsType
  >;

export type PostV2LogsQueryRelatedEntitiesResponse2004 = {
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItemsType;
  /**
   * The id of the resource
   */
  deploymentCompletionId: string;
};

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyType =
  {
    DeploymentVariant: "deployment_variant",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyType
  >;

export type PostV2LogsQueryRelatedEntities3 = {
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyType;
  /**
   * The id of the resource
   */
  deploymentVariantId: string;
};

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONType = {
  Deployment: "deployment",
} as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONType =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONType
  >;

export type PostV2LogsQueryRelatedEntities2 = {
  type: PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONType;
  /**
   * The id of the resource
   */
  deploymentId: string;
};

export const PostV2LogsQueryRelatedEntitiesResponse200Type = {
  DeploymentKey: "deployment_key",
} as const;
export type PostV2LogsQueryRelatedEntitiesResponse200Type = ClosedEnum<
  typeof PostV2LogsQueryRelatedEntitiesResponse200Type
>;

export type PostV2LogsQueryRelatedEntities1 = {
  type: PostV2LogsQueryRelatedEntitiesResponse200Type;
  deploymentKey: string;
};

export type ItemsRelatedEntities =
  | PostV2LogsQueryRelatedEntities1
  | PostV2LogsQueryRelatedEntities2
  | PostV2LogsQueryRelatedEntities3
  | PostV2LogsQueryRelatedEntitiesResponse2004
  | PostV2LogsQueryRelatedEntitiesResponse5
  | PostV2LogsQueryRelatedEntities6
  | PostV2LogsQueryRelatedEntities7;

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryMessageResponse200Role = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryMessageResponse200Role = ClosedEnum<
  typeof PostV2LogsQueryMessageResponse200Role
>;

export type PostV2LogsQueryMessage3 = {
  /**
   * The role of the prompt message
   */
  role: PostV2LogsQueryMessageResponse200Role;
  url: string;
};

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryMessageResponseRole = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryMessageResponseRole = ClosedEnum<
  typeof PostV2LogsQueryMessageResponseRole
>;

export type PostV2LogsQueryMessage2 = {
  /**
   * The role of the prompt message
   */
  role: PostV2LogsQueryMessageResponseRole;
  content: string | null;
};

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryMessageRole = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryMessageRole = ClosedEnum<
  typeof PostV2LogsQueryMessageRole
>;

export const PostV2LogsQueryMessageType = {
  Function: "function",
} as const;
export type PostV2LogsQueryMessageType = ClosedEnum<
  typeof PostV2LogsQueryMessageType
>;

export type PostV2LogsQueryMessageFunction = {
  name: string;
  /**
   * JSON string arguments for the functions
   */
  arguments: string;
};

export type PostV2LogsQueryMessageToolCalls = {
  id?: string | undefined;
  index?: number | undefined;
  type: PostV2LogsQueryMessageType;
  function: PostV2LogsQueryMessageFunction;
};

export type PostV2LogsQueryMessage1 = {
  /**
   * The role of the prompt message
   */
  role: PostV2LogsQueryMessageRole;
  content?: string | null | undefined;
  toolCalls: Array<PostV2LogsQueryMessageToolCalls>;
};

export type ItemsMessage =
  | PostV2LogsQueryMessage2
  | PostV2LogsQueryMessage3
  | PostV2LogsQueryMessage1;

export type ItemsChoices = {
  index: number;
  message?:
    | PostV2LogsQueryMessage2
    | PostV2LogsQueryMessage3
    | PostV2LogsQueryMessage1
    | undefined;
  finishReason?: string | null | undefined;
};

export const ItemsAction = {
  GetConfig: "get_config",
  Invoke: "invoke",
  Simulate: "simulate",
} as const;
export type ItemsAction = ClosedEnum<typeof ItemsAction>;

/**
 * The type of the model
 */
export const ItemsModelType = {
  Chat: "chat",
  Completion: "completion",
  Embedding: "embedding",
  Vision: "vision",
  Image: "image",
  Tts: "tts",
  Stt: "stt",
  Rerank: "rerank",
} as const;
/**
 * The type of the model
 */
export type ItemsModelType = ClosedEnum<typeof ItemsModelType>;

/**
 * Only supported on `image` models.
 */
export const ItemsFormat = {
  Url: "url",
  B64Json: "b64_json",
  Text: "text",
  JsonObject: "json_object",
} as const;
/**
 * Only supported on `image` models.
 */
export type ItemsFormat = ClosedEnum<typeof ItemsFormat>;

/**
 * Only supported on `image` models.
 */
export const ItemsQuality = {
  Standard: "standard",
  Hd: "hd",
} as const;
/**
 * Only supported on `image` models.
 */
export type ItemsQuality = ClosedEnum<typeof ItemsQuality>;

export const PostV2LogsQueryResponseFormatResponseType = {
  JsonObject: "json_object",
} as const;
export type PostV2LogsQueryResponseFormatResponseType = ClosedEnum<
  typeof PostV2LogsQueryResponseFormatResponseType
>;

export type PostV2LogsQueryResponseFormat2 = {
  type: PostV2LogsQueryResponseFormatResponseType;
};

export const PostV2LogsQueryResponseFormatType = {
  JsonSchema: "json_schema",
} as const;
export type PostV2LogsQueryResponseFormatType = ClosedEnum<
  typeof PostV2LogsQueryResponseFormatType
>;

export type PostV2LogsQueryResponseFormatJsonSchema = {
  name: string;
  strict: boolean;
  schema: { [k: string]: any };
};

export type PostV2LogsQueryResponseFormat1 = {
  type: PostV2LogsQueryResponseFormatType;
  jsonSchema: PostV2LogsQueryResponseFormatJsonSchema;
};

/**
 * An object specifying the format that the model must output.
 *
 * @remarks
 *
 *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
 *
 *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
 *
 * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
 */
export type ItemsResponseFormat =
  | PostV2LogsQueryResponseFormat2
  | PostV2LogsQueryResponseFormat1;

/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export const ItemsPhotoRealVersion = {
  V1: "v1",
  V2: "v2",
} as const;
/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export type ItemsPhotoRealVersion = ClosedEnum<typeof ItemsPhotoRealVersion>;

/**
 * The format to return the embeddings
 */
export const ItemsEncodingFormat = {
  Float: "float",
  Base64: "base64",
} as const;
/**
 * The format to return the embeddings
 */
export type ItemsEncodingFormat = ClosedEnum<typeof ItemsEncodingFormat>;

/**
 * Model Parameters: Not all parameters apply to every model
 */
export type ItemsModelParameters = {
  /**
   * Only supported on `chat` and `completion` models.
   */
  temperature?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  maxTokens?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topK?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topP?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  frequencyPenalty?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  presencePenalty?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  numImages?: number | undefined;
  /**
   * Best effort deterministic seed for the model. Currently only OpenAI models support these
   */
  seed?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  format?: ItemsFormat | undefined;
  /**
   * Only supported on `image` models.
   */
  dimensions?: string | undefined;
  /**
   * Only supported on `image` models.
   */
  quality?: ItemsQuality | undefined;
  /**
   * Only supported on `image` models.
   */
  style?: string | undefined;
  /**
   * An object specifying the format that the model must output.
   *
   * @remarks
   *
   *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
   *
   *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
   *
   * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
   */
  responseFormat?:
    | PostV2LogsQueryResponseFormat2
    | PostV2LogsQueryResponseFormat1
    | null
    | undefined;
  /**
   * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
   */
  photoRealVersion?: ItemsPhotoRealVersion | undefined;
  /**
   * The format to return the embeddings
   */
  encodingFormat?: ItemsEncodingFormat | undefined;
};

export const ItemsProvider = {
  Cohere: "cohere",
  Openai: "openai",
  Anthropic: "anthropic",
  Huggingface: "huggingface",
  Replicate: "replicate",
  Google: "google",
  GoogleAi: "google-ai",
  Azure: "azure",
  Aws: "aws",
  Anyscale: "anyscale",
  Perplexity: "perplexity",
  Groq: "groq",
  Fal: "fal",
  Leonardoai: "leonardoai",
  Nvidia: "nvidia",
} as const;
export type ItemsProvider = ClosedEnum<typeof ItemsProvider>;

/**
 * The role of the prompt message
 */
export const ItemsRole = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type ItemsRole = ClosedEnum<typeof ItemsRole>;

export const PostV2LogsQuery2ResponseType = {
  ImageUrl: "image_url",
} as const;
export type PostV2LogsQuery2ResponseType = ClosedEnum<
  typeof PostV2LogsQuery2ResponseType
>;

export type PostV2LogsQuery2ImageUrl = {
  /**
   * The orq.ai id of the image
   */
  id?: string | undefined;
  /**
   * Either a URL of the image or the base64 encoded data URI.
   */
  url: string;
  /**
   * Specifies the detail level of the image. Currently only supported with OpenAI models
   */
  detail?: string | undefined;
};

/**
 * The image part of the prompt message. Only supported with vision models.
 */
export type PostV2LogsQuery22 = {
  type: PostV2LogsQuery2ResponseType;
  imageUrl: PostV2LogsQuery2ImageUrl;
};

export const PostV2LogsQuery2Type = {
  Text: "text",
} as const;
export type PostV2LogsQuery2Type = ClosedEnum<typeof PostV2LogsQuery2Type>;

/**
 * Text content part of a prompt message
 */
export type PostV2LogsQuery21 = {
  type: PostV2LogsQuery2Type;
  text: string;
};

export type PostV2LogsQueryContent2 = PostV2LogsQuery21 | PostV2LogsQuery22;

/**
 * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
 */
export type ItemsContent =
  | string
  | Array<PostV2LogsQuery21 | PostV2LogsQuery22>;

export const PostV2LogsQueryItemsResponse200ApplicationJSONType = {
  Function: "function",
} as const;
export type PostV2LogsQueryItemsResponse200ApplicationJSONType = ClosedEnum<
  typeof PostV2LogsQueryItemsResponse200ApplicationJSONType
>;

export type PostV2LogsQueryItemsResponse200Function = {
  name: string;
  /**
   * JSON string arguments for the functions
   */
  arguments: string;
};

export type ItemsToolCalls = {
  id?: string | undefined;
  index?: number | undefined;
  type: PostV2LogsQueryItemsResponse200ApplicationJSONType;
  function: PostV2LogsQueryItemsResponse200Function;
};

export type ItemsMessages = {
  /**
   * The role of the prompt message
   */
  role: ItemsRole;
  /**
   * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
   */
  content: string | Array<PostV2LogsQuery21 | PostV2LogsQuery22>;
  toolCalls?: Array<ItemsToolCalls> | undefined;
  /**
   * The id of the resource
   */
  id?: string | undefined;
};

export type ItemsPromptConfig = {
  stream: boolean;
  model: string;
  /**
   * The id of the resource
   */
  modelDbId: string;
  /**
   * The type of the model
   */
  modelType: ItemsModelType;
  /**
   * Model Parameters: Not all parameters apply to every model
   */
  modelParameters: ItemsModelParameters;
  provider: ItemsProvider;
  messages: Array<ItemsMessages>;
  /**
   * The id of the resource
   */
  integrationId?: string | null | undefined;
  version?: string | undefined;
};

export type PostV2LogsQueryItemsResponseVariables = {
  key: string;
  value?: any | undefined;
  isPii?: boolean | undefined;
};

export type ItemsPerformance = {
  latency: number;
  firstTimeToToken?: number | null | undefined;
  tokensPerSecond?: number | null | undefined;
};

export type PostV2LogsQueryItemsResponsePromptTokensDetails = {
  cachedTokens?: number | undefined;
};

export type PostV2LogsQueryItemsResponseCompletionTokensDetails = {
  reasoningTokens?: number | undefined;
};

export type ItemsUsage = {
  totalTokens?: number | undefined;
  promptTokens?: number | undefined;
  completionTokens?: number | undefined;
  promptTokensDetails?:
    | PostV2LogsQueryItemsResponsePromptTokensDetails
    | undefined;
  completionTokensDetails?:
    | PostV2LogsQueryItemsResponseCompletionTokensDetails
    | undefined;
};

export type PostV2LogsQueryItemsResponseBilling = {
  totalCost?: number | null | undefined;
  inputCost?: number | null | undefined;
  outputCost?: number | null | undefined;
  billable: boolean;
};

export type ItemsRetries = {
  retryAttempt: number;
  status: number;
  message?: string | undefined;
  isFallback?: boolean | undefined;
};

export type PostV2LogsQueryItemsMetadata = {
  /**
   * Unique identifier for the data source
   */
  datasourceId: string;
  /**
   * Unique identifier for the chunk
   */
  chunkId: string;
  /**
   * Name of the uploaded file during the datasource creation.
   */
  fileName: string;
  /**
   * Reference to the page number the chunk was extracted from. The property will only be available for `application/pdf` type of files. For other file types, the property will be `null`.
   */
  pageNumber?: number | null | undefined;
  /**
   * Type of the uploaded file when the datasource was created.
   */
  fileType: string;
};

export type PostV2LogsQueryItemsResponseDocuments = {
  /**
   * The id of the resource
   */
  id: string;
  /**
   * Text content of the document
   */
  text: string;
  metadata: PostV2LogsQueryItemsMetadata;
  /**
   * The score of the document
   */
  score: number;
  /**
   * The rerank score of the document
   */
  rerankScore?: number | undefined;
};

export type ItemsRetrievals = {
  /**
   * Unique id of the knowledge base
   */
  knowledgeId: string;
  /**
   * The documents returned
   */
  documents: Array<PostV2LogsQueryItemsResponseDocuments>;
  /**
   * The key of the knowledge base
   */
  knowledgeKey: string;
  /**
   * The query used to search the knowledge base
   */
  query: string;
};

export const PostV2LogsQueryConfigurationType = {
  Query: "query",
} as const;
export type PostV2LogsQueryConfigurationType = ClosedEnum<
  typeof PostV2LogsQueryConfigurationType
>;

export type PostV2LogsQueryConfigurationResponse2002 = {
  type: PostV2LogsQueryConfigurationType;
  query: string;
};

export const PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyItemsType =
  {
    LastUserMessage: "last_user_message",
  } as const;
export type PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyItemsType =
  ClosedEnum<
    typeof PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyItemsType
  >;

export type PostV2LogsQueryConfigurationResponse2001 = {
  type:
    PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyItemsType;
};

/**
 * Defines the configuration settings which can either be for a user message or a text entry.
 */
export type PostV2LogsQueryItemsResponseConfiguration =
  | PostV2LogsQueryConfigurationResponse2001
  | PostV2LogsQueryConfigurationResponse2002;

export type PostV2LogsQueryItemsResponseKnowledgeBases = {
  /**
   * The id of the resource
   */
  knowledgeId: string;
  /**
   * Defines the configuration settings which can either be for a user message or a text entry.
   */
  configuration:
    | PostV2LogsQueryConfigurationResponse2001
    | PostV2LogsQueryConfigurationResponse2002;
};

/**
 * The type of the tool. Currently, only `function` is supported.
 */
export const ItemsType = {
  Function: "function",
} as const;
/**
 * The type of the tool. Currently, only `function` is supported.
 */
export type ItemsType = ClosedEnum<typeof ItemsType>;

export const PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody2Type = {
  Object: "object",
} as const;
export type PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody2Type =
  ClosedEnum<
    typeof PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody2Type
  >;

/**
 * The parameters the functions accepts, described as a JSON Schema object.
 *
 * @remarks
 *
 *  Omitting `parameters` defines a function with an empty parameter list.
 */
export type ItemsParameters = {
  type: PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody2Type;
  properties: { [k: string]: any };
  required?: Array<string> | undefined;
  additionalProperties?: boolean | undefined;
};

export type ItemsFunction = {
  /**
   * The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.
   */
  name: string;
  /**
   * A description of what the function does, used by the model to choose when and how to call the function.
   */
  description?: string | undefined;
  strict?: boolean | undefined;
  /**
   * The parameters the functions accepts, described as a JSON Schema object.
   *
   * @remarks
   *
   *  Omitting `parameters` defines a function with an empty parameter list.
   */
  parameters: ItemsParameters;
};

export type ItemsTools = {
  /**
   * The type of the tool. Currently, only `function` is supported.
   */
  type: ItemsType;
  function: ItemsFunction;
};

export const PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyType =
  {
    Semantic: "semantic",
  } as const;
export type PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyType
  >;

/**
 * The type of the model
 */
export const PostV2LogsQueryCacheConfigResponseModelType = {
  Chat: "chat",
  Completion: "completion",
  Embedding: "embedding",
  Vision: "vision",
  Image: "image",
  Tts: "tts",
  Stt: "stt",
  Rerank: "rerank",
} as const;
/**
 * The type of the model
 */
export type PostV2LogsQueryCacheConfigResponseModelType = ClosedEnum<
  typeof PostV2LogsQueryCacheConfigResponseModelType
>;

/**
 * Only supported on `image` models.
 */
export const PostV2LogsQueryCacheConfigResponse200Format = {
  Url: "url",
  B64Json: "b64_json",
  Text: "text",
  JsonObject: "json_object",
} as const;
/**
 * Only supported on `image` models.
 */
export type PostV2LogsQueryCacheConfigResponse200Format = ClosedEnum<
  typeof PostV2LogsQueryCacheConfigResponse200Format
>;

/**
 * Only supported on `image` models.
 */
export const PostV2LogsQueryCacheConfigResponseQuality = {
  Standard: "standard",
  Hd: "hd",
} as const;
/**
 * Only supported on `image` models.
 */
export type PostV2LogsQueryCacheConfigResponseQuality = ClosedEnum<
  typeof PostV2LogsQueryCacheConfigResponseQuality
>;

export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataCacheConfigType =
  {
    JsonObject: "json_object",
  } as const;
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataCacheConfigType =
  ClosedEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataCacheConfigType
  >;

export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22 =
  {
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataCacheConfigType;
  };

export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataType =
  {
    JsonSchema: "json_schema",
  } as const;
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataType =
  ClosedEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataType
  >;

export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema =
  {
    name: string;
    strict: boolean;
    schema: { [k: string]: any };
  };

export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21 =
  {
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataType;
    jsonSchema:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema;
  };

/**
 * An object specifying the format that the model must output.
 *
 * @remarks
 *
 *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
 *
 *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
 *
 * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
 */
export type PostV2LogsQueryCacheConfigResponseResponseFormat =
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21;

/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export const PostV2LogsQueryCacheConfigResponsePhotoRealVersion = {
  V1: "v1",
  V2: "v2",
} as const;
/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export type PostV2LogsQueryCacheConfigResponsePhotoRealVersion = ClosedEnum<
  typeof PostV2LogsQueryCacheConfigResponsePhotoRealVersion
>;

/**
 * The format to return the embeddings
 */
export const PostV2LogsQueryCacheConfigResponseEncodingFormat = {
  Float: "float",
  Base64: "base64",
} as const;
/**
 * The format to return the embeddings
 */
export type PostV2LogsQueryCacheConfigResponseEncodingFormat = ClosedEnum<
  typeof PostV2LogsQueryCacheConfigResponseEncodingFormat
>;

/**
 * Model Parameters: Not all parameters apply to every model
 */
export type PostV2LogsQueryCacheConfigResponseModelParameters = {
  /**
   * Only supported on `chat` and `completion` models.
   */
  temperature?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  maxTokens?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topK?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topP?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  frequencyPenalty?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  presencePenalty?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  numImages?: number | undefined;
  /**
   * Best effort deterministic seed for the model. Currently only OpenAI models support these
   */
  seed?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  format?: PostV2LogsQueryCacheConfigResponse200Format | undefined;
  /**
   * Only supported on `image` models.
   */
  dimensions?: string | undefined;
  /**
   * Only supported on `image` models.
   */
  quality?: PostV2LogsQueryCacheConfigResponseQuality | undefined;
  /**
   * Only supported on `image` models.
   */
  style?: string | undefined;
  /**
   * An object specifying the format that the model must output.
   *
   * @remarks
   *
   *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
   *
   *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
   *
   * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
   */
  responseFormat?:
    | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22
    | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21
    | null
    | undefined;
  /**
   * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
   */
  photoRealVersion?:
    | PostV2LogsQueryCacheConfigResponsePhotoRealVersion
    | undefined;
  /**
   * The format to return the embeddings
   */
  encodingFormat?: PostV2LogsQueryCacheConfigResponseEncodingFormat | undefined;
};

export const PostV2LogsQueryCacheConfigResponseProvider = {
  Cohere: "cohere",
  Openai: "openai",
  Anthropic: "anthropic",
  Huggingface: "huggingface",
  Replicate: "replicate",
  Google: "google",
  GoogleAi: "google-ai",
  Azure: "azure",
  Aws: "aws",
  Anyscale: "anyscale",
  Perplexity: "perplexity",
  Groq: "groq",
  Fal: "fal",
  Leonardoai: "leonardoai",
  Nvidia: "nvidia",
} as const;
export type PostV2LogsQueryCacheConfigResponseProvider = ClosedEnum<
  typeof PostV2LogsQueryCacheConfigResponseProvider
>;

/**
 * Configuration of embedding model to be used
 */
export type PostV2LogsQueryCacheConfigResponse200ModelConfig = {
  model: string;
  /**
   * The id of the resource
   */
  modelDbId: string;
  /**
   * The type of the model
   */
  modelType: PostV2LogsQueryCacheConfigResponseModelType;
  /**
   * Model Parameters: Not all parameters apply to every model
   */
  modelParameters: PostV2LogsQueryCacheConfigResponseModelParameters;
  provider: PostV2LogsQueryCacheConfigResponseProvider;
  /**
   * The id of the resource
   */
  integrationId?: string | null | undefined;
  version?: string | undefined;
};

/**
 * Schema for exact matching type of cache.
 */
export type PostV2LogsQueryCacheConfigResponse2 = {
  type: PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyType;
  /**
   * Configuration of embedding model to be used
   */
  modelConfig: PostV2LogsQueryCacheConfigResponse200ModelConfig;
  /**
   * Time To Live
   */
  ttl?: number | undefined;
  /**
   * A floating-point number typically ranging from 0 to 1.
   */
  similarityScoreThreshold?: number | undefined;
};

export const PostV2LogsQueryCacheConfigResponse200ApplicationJSONType = {
  Exact: "exact",
} as const;
export type PostV2LogsQueryCacheConfigResponse200ApplicationJSONType =
  ClosedEnum<typeof PostV2LogsQueryCacheConfigResponse200ApplicationJSONType>;

/**
 * Schema for exact matching type of cache.
 */
export type PostV2LogsQueryCacheConfigResponse1 = {
  type: PostV2LogsQueryCacheConfigResponse200ApplicationJSONType;
  /**
   * Time To Live
   */
  ttl?: number | undefined;
};

export type PostV2LogsQueryItemsCacheConfig =
  | PostV2LogsQueryCacheConfigResponse1
  | PostV2LogsQueryCacheConfigResponse2;

export const PostV2LogsQueryEvaluatorsResponse200ApplicationJSONConfigType = {
  InputEvaluator: "input_evaluator",
  OutputEvaluator: "output_evaluator",
  InputGuardrail: "input_guardrail",
  OutputGuardrail: "output_guardrail",
} as const;
export type PostV2LogsQueryEvaluatorsResponse200ApplicationJSONConfigType =
  ClosedEnum<
    typeof PostV2LogsQueryEvaluatorsResponse200ApplicationJSONConfigType
  >;

export const PostV2LogsQueryEvaluatorsType = {
  Guardrail: "guardrail",
} as const;
export type PostV2LogsQueryEvaluatorsType = ClosedEnum<
  typeof PostV2LogsQueryEvaluatorsType
>;

export type PostV2LogsQueryEvaluatorsResponse2 = {
  id: string;
  configType: PostV2LogsQueryEvaluatorsResponse200ApplicationJSONConfigType;
  evaluatorId: string;
  enabled?: boolean | undefined;
  type: PostV2LogsQueryEvaluatorsType;
  sampleRate?: number | undefined;
};

export const PostV2LogsQueryEvaluatorsResponse200ConfigType = {
  InputEvaluator: "input_evaluator",
  OutputEvaluator: "output_evaluator",
  InputGuardrail: "input_guardrail",
  OutputGuardrail: "output_guardrail",
} as const;
export type PostV2LogsQueryEvaluatorsResponse200ConfigType = ClosedEnum<
  typeof PostV2LogsQueryEvaluatorsResponse200ConfigType
>;

export const PostV2LogsQueryEvaluatorsResponse200ApplicationJSONType = {
  Evaluator: "evaluator",
} as const;
export type PostV2LogsQueryEvaluatorsResponse200ApplicationJSONType =
  ClosedEnum<typeof PostV2LogsQueryEvaluatorsResponse200ApplicationJSONType>;

export type PostV2LogsQueryEvaluatorsResponse1 = {
  id: string;
  configType: PostV2LogsQueryEvaluatorsResponse200ConfigType;
  evaluatorId: string;
  enabled?: boolean | undefined;
  type: PostV2LogsQueryEvaluatorsResponse200ApplicationJSONType;
  sampleRate?: number | undefined;
};

export type PostV2LogsQueryItemsEvaluators =
  | PostV2LogsQueryEvaluatorsResponse1
  | PostV2LogsQueryEvaluatorsResponse2;

export const PostV2LogsQueryItemsGuardrailsBehavior = {
  Retry: "retry",
  Fallback: "fallback",
} as const;
export type PostV2LogsQueryItemsGuardrailsBehavior = ClosedEnum<
  typeof PostV2LogsQueryItemsGuardrailsBehavior
>;

export type ItemsMetadata = {
  outputMasking?: boolean | undefined;
  isCachingEnabled?: boolean | undefined;
  cacheConfig?:
    | PostV2LogsQueryCacheConfigResponse1
    | PostV2LogsQueryCacheConfigResponse2
    | null
    | undefined;
  evaluators?:
    | Array<
      PostV2LogsQueryEvaluatorsResponse1 | PostV2LogsQueryEvaluatorsResponse2
    >
    | undefined;
  guardrailsBehavior?: PostV2LogsQueryItemsGuardrailsBehavior | undefined;
};

export const PostV2LogsQueryCacheConfigResponse200Type = {
  Semantic: "semantic",
} as const;
export type PostV2LogsQueryCacheConfigResponse200Type = ClosedEnum<
  typeof PostV2LogsQueryCacheConfigResponse200Type
>;

/**
 * The type of the model
 */
export const PostV2LogsQueryCacheConfigResponse200ModelType = {
  Chat: "chat",
  Completion: "completion",
  Embedding: "embedding",
  Vision: "vision",
  Image: "image",
  Tts: "tts",
  Stt: "stt",
  Rerank: "rerank",
} as const;
/**
 * The type of the model
 */
export type PostV2LogsQueryCacheConfigResponse200ModelType = ClosedEnum<
  typeof PostV2LogsQueryCacheConfigResponse200ModelType
>;

/**
 * Only supported on `image` models.
 */
export const PostV2LogsQueryCacheConfigResponse200ApplicationJSONFormat = {
  Url: "url",
  B64Json: "b64_json",
  Text: "text",
  JsonObject: "json_object",
} as const;
/**
 * Only supported on `image` models.
 */
export type PostV2LogsQueryCacheConfigResponse200ApplicationJSONFormat =
  ClosedEnum<typeof PostV2LogsQueryCacheConfigResponse200ApplicationJSONFormat>;

/**
 * Only supported on `image` models.
 */
export const PostV2LogsQueryCacheConfigResponse200Quality = {
  Standard: "standard",
  Hd: "hd",
} as const;
/**
 * Only supported on `image` models.
 */
export type PostV2LogsQueryCacheConfigResponse200Quality = ClosedEnum<
  typeof PostV2LogsQueryCacheConfigResponse200Quality
>;

export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsCacheConfigType =
  {
    JsonObject: "json_object",
  } as const;
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsCacheConfigType =
  ClosedEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsCacheConfigType
  >;

export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2 =
  {
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsCacheConfigType;
  };

export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsType =
  {
    JsonSchema: "json_schema",
  } as const;
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsType =
  ClosedEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsType
  >;

export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema =
  {
    name: string;
    strict: boolean;
    schema: { [k: string]: any };
  };

export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1 =
  {
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsType;
    jsonSchema:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema;
  };

/**
 * An object specifying the format that the model must output.
 *
 * @remarks
 *
 *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
 *
 *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
 *
 * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
 */
export type PostV2LogsQueryCacheConfigResponse200ResponseFormat =
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1;

/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export const PostV2LogsQueryCacheConfigResponse200PhotoRealVersion = {
  V1: "v1",
  V2: "v2",
} as const;
/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export type PostV2LogsQueryCacheConfigResponse200PhotoRealVersion = ClosedEnum<
  typeof PostV2LogsQueryCacheConfigResponse200PhotoRealVersion
>;

/**
 * The format to return the embeddings
 */
export const PostV2LogsQueryCacheConfigResponse200EncodingFormat = {
  Float: "float",
  Base64: "base64",
} as const;
/**
 * The format to return the embeddings
 */
export type PostV2LogsQueryCacheConfigResponse200EncodingFormat = ClosedEnum<
  typeof PostV2LogsQueryCacheConfigResponse200EncodingFormat
>;

/**
 * Model Parameters: Not all parameters apply to every model
 */
export type PostV2LogsQueryCacheConfigResponse200ModelParameters = {
  /**
   * Only supported on `chat` and `completion` models.
   */
  temperature?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  maxTokens?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topK?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topP?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  frequencyPenalty?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  presencePenalty?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  numImages?: number | undefined;
  /**
   * Best effort deterministic seed for the model. Currently only OpenAI models support these
   */
  seed?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  format?:
    | PostV2LogsQueryCacheConfigResponse200ApplicationJSONFormat
    | undefined;
  /**
   * Only supported on `image` models.
   */
  dimensions?: string | undefined;
  /**
   * Only supported on `image` models.
   */
  quality?: PostV2LogsQueryCacheConfigResponse200Quality | undefined;
  /**
   * Only supported on `image` models.
   */
  style?: string | undefined;
  /**
   * An object specifying the format that the model must output.
   *
   * @remarks
   *
   *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
   *
   *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
   *
   * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
   */
  responseFormat?:
    | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2
    | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1
    | null
    | undefined;
  /**
   * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
   */
  photoRealVersion?:
    | PostV2LogsQueryCacheConfigResponse200PhotoRealVersion
    | undefined;
  /**
   * The format to return the embeddings
   */
  encodingFormat?:
    | PostV2LogsQueryCacheConfigResponse200EncodingFormat
    | undefined;
};

export const PostV2LogsQueryCacheConfigResponse200Provider = {
  Cohere: "cohere",
  Openai: "openai",
  Anthropic: "anthropic",
  Huggingface: "huggingface",
  Replicate: "replicate",
  Google: "google",
  GoogleAi: "google-ai",
  Azure: "azure",
  Aws: "aws",
  Anyscale: "anyscale",
  Perplexity: "perplexity",
  Groq: "groq",
  Fal: "fal",
  Leonardoai: "leonardoai",
  Nvidia: "nvidia",
} as const;
export type PostV2LogsQueryCacheConfigResponse200Provider = ClosedEnum<
  typeof PostV2LogsQueryCacheConfigResponse200Provider
>;

/**
 * Configuration of embedding model to be used
 */
export type PostV2LogsQueryCacheConfigResponseModelConfig = {
  model: string;
  /**
   * The id of the resource
   */
  modelDbId: string;
  /**
   * The type of the model
   */
  modelType: PostV2LogsQueryCacheConfigResponse200ModelType;
  /**
   * Model Parameters: Not all parameters apply to every model
   */
  modelParameters: PostV2LogsQueryCacheConfigResponse200ModelParameters;
  provider: PostV2LogsQueryCacheConfigResponse200Provider;
  /**
   * The id of the resource
   */
  integrationId?: string | null | undefined;
  version?: string | undefined;
};

/**
 * Schema for exact matching type of cache.
 */
export type PostV2LogsQueryCacheConfigResponse2002 = {
  type: PostV2LogsQueryCacheConfigResponse200Type;
  /**
   * Configuration of embedding model to be used
   */
  modelConfig: PostV2LogsQueryCacheConfigResponseModelConfig;
  /**
   * Time To Live
   */
  ttl?: number | undefined;
  /**
   * A floating-point number typically ranging from 0 to 1.
   */
  similarityScoreThreshold?: number | undefined;
};

export const PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyItemsType =
  {
    Exact: "exact",
  } as const;
export type PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyItemsType =
  ClosedEnum<
    typeof PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyItemsType
  >;

/**
 * Schema for exact matching type of cache.
 */
export type PostV2LogsQueryCacheConfigResponse2001 = {
  type:
    PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyItemsType;
  /**
   * Time To Live
   */
  ttl?: number | undefined;
};

export type PostV2LogsQueryItemsResponseCacheConfig =
  | PostV2LogsQueryCacheConfigResponse2001
  | PostV2LogsQueryCacheConfigResponse2002;

export const PostV2LogsQueryEvaluatorsResponseConfigType = {
  InputEvaluator: "input_evaluator",
  OutputEvaluator: "output_evaluator",
  InputGuardrail: "input_guardrail",
  OutputGuardrail: "output_guardrail",
} as const;
export type PostV2LogsQueryEvaluatorsResponseConfigType = ClosedEnum<
  typeof PostV2LogsQueryEvaluatorsResponseConfigType
>;

export const PostV2LogsQueryEvaluatorsResponse200Type = {
  Guardrail: "guardrail",
} as const;
export type PostV2LogsQueryEvaluatorsResponse200Type = ClosedEnum<
  typeof PostV2LogsQueryEvaluatorsResponse200Type
>;

export type PostV2LogsQueryEvaluators2 = {
  id: string;
  configType: PostV2LogsQueryEvaluatorsResponseConfigType;
  evaluatorId: string;
  enabled?: boolean | undefined;
  type: PostV2LogsQueryEvaluatorsResponse200Type;
  sampleRate?: number | undefined;
};

export const PostV2LogsQueryEvaluatorsConfigType = {
  InputEvaluator: "input_evaluator",
  OutputEvaluator: "output_evaluator",
  InputGuardrail: "input_guardrail",
  OutputGuardrail: "output_guardrail",
} as const;
export type PostV2LogsQueryEvaluatorsConfigType = ClosedEnum<
  typeof PostV2LogsQueryEvaluatorsConfigType
>;

export const PostV2LogsQueryEvaluatorsResponseType = {
  Evaluator: "evaluator",
} as const;
export type PostV2LogsQueryEvaluatorsResponseType = ClosedEnum<
  typeof PostV2LogsQueryEvaluatorsResponseType
>;

export type PostV2LogsQueryEvaluators1 = {
  id: string;
  configType: PostV2LogsQueryEvaluatorsConfigType;
  evaluatorId: string;
  enabled?: boolean | undefined;
  type: PostV2LogsQueryEvaluatorsResponseType;
  sampleRate?: number | undefined;
};

export type ItemsEvaluators =
  | PostV2LogsQueryEvaluators1
  | PostV2LogsQueryEvaluators2;

export const ItemsGuardrailsBehavior = {
  Retry: "retry",
  Fallback: "fallback",
} as const;
export type ItemsGuardrailsBehavior = ClosedEnum<
  typeof ItemsGuardrailsBehavior
>;

export type ItemsSettings = {
  outputMasking?: boolean | undefined;
  isCachingEnabled?: boolean | undefined;
  cacheConfig?:
    | PostV2LogsQueryCacheConfigResponse2001
    | PostV2LogsQueryCacheConfigResponse2002
    | null
    | undefined;
  evaluators?:
    | Array<PostV2LogsQueryEvaluators1 | PostV2LogsQueryEvaluators2>
    | undefined;
  guardrailsBehavior?: ItemsGuardrailsBehavior | undefined;
};

export type ItemsErrors = {
  code: number;
  message: string;
};

export type ItemsProcessingAttempts = {
  id: string;
  startedAt: string;
  queuedAt?: string | undefined;
  completedAt?: string | undefined;
  errors?: Array<ItemsErrors> | undefined;
};

export type PostV2LogsQueryItemsResponsePromptSnippets = {
  /**
   * The id of the resource
   */
  id: string;
  key: string;
  value: string;
};

export type ItemsFiles = {
  fileId: string;
  fileName: string;
  objectName: string;
  content: string;
};

export const PostV2LogsQueryCacheConfigType = {
  Semantic: "semantic",
} as const;
export type PostV2LogsQueryCacheConfigType = ClosedEnum<
  typeof PostV2LogsQueryCacheConfigType
>;

/**
 * The type of the model
 */
export const PostV2LogsQueryCacheConfigModelType = {
  Chat: "chat",
  Completion: "completion",
  Embedding: "embedding",
  Vision: "vision",
  Image: "image",
  Tts: "tts",
  Stt: "stt",
  Rerank: "rerank",
} as const;
/**
 * The type of the model
 */
export type PostV2LogsQueryCacheConfigModelType = ClosedEnum<
  typeof PostV2LogsQueryCacheConfigModelType
>;

/**
 * Only supported on `image` models.
 */
export const PostV2LogsQueryCacheConfigFormat = {
  Url: "url",
  B64Json: "b64_json",
  Text: "text",
  JsonObject: "json_object",
} as const;
/**
 * Only supported on `image` models.
 */
export type PostV2LogsQueryCacheConfigFormat = ClosedEnum<
  typeof PostV2LogsQueryCacheConfigFormat
>;

/**
 * Only supported on `image` models.
 */
export const PostV2LogsQueryCacheConfigQuality = {
  Standard: "standard",
  Hd: "hd",
} as const;
/**
 * Only supported on `image` models.
 */
export type PostV2LogsQueryCacheConfigQuality = ClosedEnum<
  typeof PostV2LogsQueryCacheConfigQuality
>;

export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataType =
  {
    JsonObject: "json_object",
  } as const;
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataType =
  ClosedEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataType
  >;

export type PostV2LogsQueryResponseFormatResponse200ApplicationJson2 = {
  type:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataType;
};

export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Type =
  {
    JsonSchema: "json_schema",
  } as const;
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Type =
  ClosedEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Type
  >;

export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema =
  {
    name: string;
    strict: boolean;
    schema: { [k: string]: any };
  };

export type PostV2LogsQueryResponseFormatResponse200ApplicationJson1 = {
  type:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Type;
  jsonSchema: PostV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema;
};

/**
 * An object specifying the format that the model must output.
 *
 * @remarks
 *
 *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
 *
 *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
 *
 * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
 */
export type PostV2LogsQueryCacheConfigResponseFormat =
  | PostV2LogsQueryResponseFormatResponse200ApplicationJson2
  | PostV2LogsQueryResponseFormatResponse200ApplicationJson1;

/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export const PostV2LogsQueryCacheConfigPhotoRealVersion = {
  V1: "v1",
  V2: "v2",
} as const;
/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export type PostV2LogsQueryCacheConfigPhotoRealVersion = ClosedEnum<
  typeof PostV2LogsQueryCacheConfigPhotoRealVersion
>;

/**
 * The format to return the embeddings
 */
export const PostV2LogsQueryCacheConfigEncodingFormat = {
  Float: "float",
  Base64: "base64",
} as const;
/**
 * The format to return the embeddings
 */
export type PostV2LogsQueryCacheConfigEncodingFormat = ClosedEnum<
  typeof PostV2LogsQueryCacheConfigEncodingFormat
>;

/**
 * Model Parameters: Not all parameters apply to every model
 */
export type PostV2LogsQueryCacheConfigModelParameters = {
  /**
   * Only supported on `chat` and `completion` models.
   */
  temperature?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  maxTokens?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topK?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topP?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  frequencyPenalty?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  presencePenalty?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  numImages?: number | undefined;
  /**
   * Best effort deterministic seed for the model. Currently only OpenAI models support these
   */
  seed?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  format?: PostV2LogsQueryCacheConfigFormat | undefined;
  /**
   * Only supported on `image` models.
   */
  dimensions?: string | undefined;
  /**
   * Only supported on `image` models.
   */
  quality?: PostV2LogsQueryCacheConfigQuality | undefined;
  /**
   * Only supported on `image` models.
   */
  style?: string | undefined;
  /**
   * An object specifying the format that the model must output.
   *
   * @remarks
   *
   *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
   *
   *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
   *
   * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
   */
  responseFormat?:
    | PostV2LogsQueryResponseFormatResponse200ApplicationJson2
    | PostV2LogsQueryResponseFormatResponse200ApplicationJson1
    | null
    | undefined;
  /**
   * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
   */
  photoRealVersion?: PostV2LogsQueryCacheConfigPhotoRealVersion | undefined;
  /**
   * The format to return the embeddings
   */
  encodingFormat?: PostV2LogsQueryCacheConfigEncodingFormat | undefined;
};

export const PostV2LogsQueryCacheConfigProvider = {
  Cohere: "cohere",
  Openai: "openai",
  Anthropic: "anthropic",
  Huggingface: "huggingface",
  Replicate: "replicate",
  Google: "google",
  GoogleAi: "google-ai",
  Azure: "azure",
  Aws: "aws",
  Anyscale: "anyscale",
  Perplexity: "perplexity",
  Groq: "groq",
  Fal: "fal",
  Leonardoai: "leonardoai",
  Nvidia: "nvidia",
} as const;
export type PostV2LogsQueryCacheConfigProvider = ClosedEnum<
  typeof PostV2LogsQueryCacheConfigProvider
>;

/**
 * Configuration of embedding model to be used
 */
export type PostV2LogsQueryCacheConfigModelConfig = {
  model: string;
  /**
   * The id of the resource
   */
  modelDbId: string;
  /**
   * The type of the model
   */
  modelType: PostV2LogsQueryCacheConfigModelType;
  /**
   * Model Parameters: Not all parameters apply to every model
   */
  modelParameters: PostV2LogsQueryCacheConfigModelParameters;
  provider: PostV2LogsQueryCacheConfigProvider;
  /**
   * The id of the resource
   */
  integrationId?: string | null | undefined;
  version?: string | undefined;
};

/**
 * Schema for exact matching type of cache.
 */
export type PostV2LogsQueryCacheConfig2 = {
  type: PostV2LogsQueryCacheConfigType;
  /**
   * Configuration of embedding model to be used
   */
  modelConfig: PostV2LogsQueryCacheConfigModelConfig;
  /**
   * Time To Live
   */
  ttl?: number | undefined;
  /**
   * A floating-point number typically ranging from 0 to 1.
   */
  similarityScoreThreshold?: number | undefined;
};

export const PostV2LogsQueryCacheConfigResponseType = {
  Exact: "exact",
} as const;
export type PostV2LogsQueryCacheConfigResponseType = ClosedEnum<
  typeof PostV2LogsQueryCacheConfigResponseType
>;

/**
 * Schema for exact matching type of cache.
 */
export type PostV2LogsQueryCacheConfig1 = {
  type: PostV2LogsQueryCacheConfigResponseType;
  /**
   * Time To Live
   */
  ttl?: number | undefined;
};

export type ItemsCacheConfig =
  | PostV2LogsQueryCacheConfig1
  | PostV2LogsQueryCacheConfig2;

export const ItemsCacheStatus = {
  Hit: "HIT",
  Miss: "MISS",
} as const;
export type ItemsCacheStatus = ClosedEnum<typeof ItemsCacheStatus>;

export type PostV2LogsQueryItemsData = {
  deploymentId: string;
  deploymentKey: string;
  deploymentVariantVersion: string;
  deploymentVariantPosition: number;
  deploymentVariantId: string;
  isDefaultMatched: boolean;
  choices?: Array<ItemsChoices> | undefined;
  integrationIds?: Array<string> | undefined;
  action: ItemsAction;
  promptConfig: ItemsPromptConfig;
  variables: Array<PostV2LogsQueryItemsResponseVariables>;
  performance?: ItemsPerformance | undefined;
  usage?: ItemsUsage | undefined;
  billing?: PostV2LogsQueryItemsResponseBilling | undefined;
  retries: Array<ItemsRetries>;
  providerResponse?: any | undefined;
  retrievals?: Array<ItemsRetrievals> | undefined;
  knowledgeBases?:
    | Array<PostV2LogsQueryItemsResponseKnowledgeBases>
    | undefined;
  tools?: Array<ItemsTools> | undefined;
  metadata?: ItemsMetadata | undefined;
  settings?: ItemsSettings | undefined;
  processingAttempts?: Array<ItemsProcessingAttempts> | undefined;
  promptSnippets: Array<PostV2LogsQueryItemsResponsePromptSnippets>;
  files?: Array<ItemsFiles> | undefined;
  cacheKey?: string | undefined;
  cacheConfig?:
    | PostV2LogsQueryCacheConfig1
    | PostV2LogsQueryCacheConfig2
    | undefined;
  isCachingEnabled?: boolean | undefined;
  cacheStatus?: ItemsCacheStatus | undefined;
};

/**
 * The schema for the deployment workflow run
 */
export type Items2 = {
  /**
   * The unique identifier for the workflow run
   */
  id: string;
  /**
   * The unique identifier for the workspace
   */
  workspaceId: string;
  /**
   * Metadata for the workflow run
   */
  workflowMetadata?: { [k: string]: any } | undefined;
  /**
   * Input for the workflow run
   */
  workflowInput?: { [k: string]: any } | undefined;
  /**
   * Output for the workflow run
   */
  workflowOutput?: { [k: string]: any } | undefined;
  /**
   * The optional project_id for the entity of the event
   */
  projectId?: string | undefined;
  /**
   * An optional field that is filled if the workflow was triggered by an HTTP request
   */
  requestProperties?: ItemsRequestProperties | undefined;
  startedAt: Date;
  finishedAt?: Date | undefined;
  evals: Array<
    | PostV2LogsQueryEvals1
    | PostV2LogsQueryEvals2
    | PostV2LogsQueryEvals3
    | PostV2LogsQueryEvals4
    | PostV2LogsQueryEvals5
    | PostV2LogsQueryEvals6
    | PostV2LogsQueryEvals7
  >;
  productType: ItemsProductType;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntities1
    | PostV2LogsQueryRelatedEntities2
    | PostV2LogsQueryRelatedEntities3
    | PostV2LogsQueryRelatedEntitiesResponse2004
    | PostV2LogsQueryRelatedEntitiesResponse5
    | PostV2LogsQueryRelatedEntities6
    | PostV2LogsQueryRelatedEntities7
  >;
  data: PostV2LogsQueryItemsData;
};

/**
 * An optional field that is filled if the workflow was triggered by an HTTP request
 */
export type PostV2LogsQueryItemsResponse200RequestProperties = {
  source?: string | undefined;
  location?: string | undefined;
  latitude?: string | undefined;
  longitude?: string | undefined;
  responseTime?: number | undefined;
  metadata?: { [k: string]: any } | undefined;
  status?: number | undefined;
  context?: { [k: string]: any } | undefined;
  extraParams?: { [k: string]: any } | undefined;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsType =
  {
    LlmEval: "llm_eval",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsType =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsType
  >;

/**
 * An optional field that is filled if the workflow was triggered by an HTTP request
 */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties = {
  source?: string | undefined;
  location?: string | undefined;
  latitude?: string | undefined;
  longitude?: string | undefined;
  responseTime?: number | undefined;
  metadata?: { [k: string]: any } | undefined;
  status?: number | undefined;
  context?: { [k: string]: any } | undefined;
  extraParams?: { [k: string]: any } | undefined;
};

/**
 * Orquesta product
 */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONProductType = {
  Remoteconfigs: "remoteconfigs",
  Deployments: "deployments",
  Experiments: "experiments",
  Playgrounds: "playgrounds",
  LlmEvaluator: "llm_evaluator",
  Knowledge: "knowledge",
  Router: "router",
  Workflows: "workflows",
} as const;
/**
 * Orquesta product
 */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONProductType =
  ClosedEnum<typeof PostV2LogsQueryEvalsResponse200ApplicationJSONProductType>;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17RelatedEntities =
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType =
  {
    StringArray: "string_array",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsStatus =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsStatus =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsStatus
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals44Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals44Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals44Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals44Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals43Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals43Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals43Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals43Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals42Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals42Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals42Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals42Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14 =
  {
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType;
    values: Array<string>;
    /**
     * The id of the resource
     */
    id: string;
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsStatus;
    timestamp: Date;
    relatedEntities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74
    >;
  };

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Type =
  {
    Boolean: "boolean",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Type
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsRelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13 =
  {
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Type;
    value: boolean;
    /**
     * The id of the resource
     */
    id: string;
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3Status;
    timestamp: Date;
    relatedEntities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34
    >;
  };

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsType =
  {
    Number: "number",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsType =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsType
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunStatus =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunStatus =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunStatus
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals24Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals24Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals24Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals24Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals23Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals23Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals23Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals23Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals22Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals22Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals22Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals22Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12 =
  {
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsType;
    value: number;
    /**
     * The id of the resource
     */
    id: string;
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunStatus;
    timestamp: Date;
    relatedEntities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4
    >;
  };

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1Type =
  {
    String: "string",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1Type
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals14Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals14Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals14Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals14Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvalsType =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvalsType =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvalsType
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvalsType;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals11Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals11Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals11Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals11Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunRelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11 =
  {
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1Type;
    value: string;
    /**
     * The id of the resource
     */
    id: string;
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Status;
    timestamp: Date;
    relatedEntities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4
    >;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONEvals =
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14;

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Evals7Role =
  {
    System: "system",
    Assistant: "assistant",
    User: "user",
    Exception: "exception",
    Tool: "tool",
    Prompt: "prompt",
    Correction: "correction",
    ExpectedOutput: "expected_output",
  } as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Evals7Role =
  ClosedEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Evals7Role
  >;

export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13 =
  {
    /**
     * The role of the prompt message
     */
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Evals7Role;
    url: string;
  };

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1EvalsRole =
  {
    System: "system",
    Assistant: "assistant",
    User: "user",
    Exception: "exception",
    Tool: "tool",
    Prompt: "prompt",
    Correction: "correction",
    ExpectedOutput: "expected_output",
  } as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1EvalsRole =
  ClosedEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1EvalsRole
  >;

export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12 =
  {
    /**
     * The role of the prompt message
     */
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1EvalsRole;
    content: string | null;
  };

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Role =
  {
    System: "system",
    Assistant: "assistant",
    User: "user",
    Exception: "exception",
    Tool: "tool",
    Prompt: "prompt",
    Correction: "correction",
    ExpectedOutput: "expected_output",
  } as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Role =
  ClosedEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Role
  >;

export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Type =
  {
    Function: "function",
  } as const;
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Type =
  ClosedEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Type
  >;

export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function =
  {
    name: string;
    /**
     * JSON string arguments for the functions
     */
    arguments: string;
  };

export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls =
  {
    id?: string | undefined;
    index?: number | undefined;
    type:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Type;
    function:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function;
  };

export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11 =
  {
    /**
     * The role of the prompt message
     */
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Role;
    content?: string | null | undefined;
    toolCalls: Array<
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls
    >;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONMessage =
  | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12
  | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13
  | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONChoices = {
  index: number;
  message?:
    | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12
    | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13
    | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11
    | undefined;
  finishReason?: string | null | undefined;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONAction = {
  Invoke: "invoke",
} as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONAction = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponse200ApplicationJSONAction
>;

/**
 * The type of the model
 */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONModelType = {
  Chat: "chat",
  Completion: "completion",
  Embedding: "embedding",
  Vision: "vision",
  Image: "image",
  Tts: "tts",
  Stt: "stt",
  Rerank: "rerank",
} as const;
/**
 * The type of the model
 */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONModelType =
  ClosedEnum<typeof PostV2LogsQueryEvalsResponse200ApplicationJSONModelType>;

/**
 * Only supported on `image` models.
 */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFormat =
  {
    Url: "url",
    B64Json: "b64_json",
    Text: "text",
    JsonObject: "json_object",
  } as const;
/**
 * Only supported on `image` models.
 */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFormat =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFormat
  >;

/**
 * Only supported on `image` models.
 */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONQuality = {
  Standard: "standard",
  Hd: "hd",
} as const;
/**
 * Only supported on `image` models.
 */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONQuality = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponse200ApplicationJSONQuality
>;

export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1EvalsType =
  {
    JsonObject: "json_object",
  } as const;
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1EvalsType =
  ClosedEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1EvalsType
  >;

export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12 =
  {
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1EvalsType;
  };

export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1Type =
  {
    JsonSchema: "json_schema",
  } as const;
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1Type =
  ClosedEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1Type
  >;

export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema =
  {
    name: string;
    strict: boolean;
    schema: { [k: string]: any };
  };

export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11 =
  {
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1Type;
    jsonSchema:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema;
  };

/**
 * An object specifying the format that the model must output.
 *
 * @remarks
 *
 *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
 *
 *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
 *
 * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
 */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseFormat =
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11;

/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONPhotoRealVersion = {
  V1: "v1",
  V2: "v2",
} as const;
/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONPhotoRealVersion =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONPhotoRealVersion
  >;

/**
 * The format to return the embeddings
 */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONEncodingFormat = {
  Float: "float",
  Base64: "base64",
} as const;
/**
 * The format to return the embeddings
 */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONEncodingFormat =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONEncodingFormat
  >;

/**
 * Model Parameters: Not all parameters apply to every model
 */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONModelParameters = {
  /**
   * Only supported on `chat` and `completion` models.
   */
  temperature?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  maxTokens?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topK?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topP?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  frequencyPenalty?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  presencePenalty?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  numImages?: number | undefined;
  /**
   * Best effort deterministic seed for the model. Currently only OpenAI models support these
   */
  seed?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  format?:
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFormat
    | undefined;
  /**
   * Only supported on `image` models.
   */
  dimensions?: string | undefined;
  /**
   * Only supported on `image` models.
   */
  quality?: PostV2LogsQueryEvalsResponse200ApplicationJSONQuality | undefined;
  /**
   * Only supported on `image` models.
   */
  style?: string | undefined;
  /**
   * An object specifying the format that the model must output.
   *
   * @remarks
   *
   *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
   *
   *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
   *
   * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
   */
  responseFormat?:
    | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12
    | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11
    | null
    | undefined;
  /**
   * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
   */
  photoRealVersion?:
    | PostV2LogsQueryEvalsResponse200ApplicationJSONPhotoRealVersion
    | undefined;
  /**
   * The format to return the embeddings
   */
  encodingFormat?:
    | PostV2LogsQueryEvalsResponse200ApplicationJSONEncodingFormat
    | undefined;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONProvider = {
  Cohere: "cohere",
  Openai: "openai",
  Anthropic: "anthropic",
  Huggingface: "huggingface",
  Replicate: "replicate",
  Google: "google",
  GoogleAi: "google-ai",
  Azure: "azure",
  Aws: "aws",
  Anyscale: "anyscale",
  Perplexity: "perplexity",
  Groq: "groq",
  Fal: "fal",
  Leonardoai: "leonardoai",
  Nvidia: "nvidia",
} as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONProvider = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponse200ApplicationJSONProvider
>;

/**
 * The role of the prompt message
 */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONRole = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONRole = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponse200ApplicationJSONRole
>;

export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1EvalsType =
  {
    ImageUrl: "image_url",
  } as const;
export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1EvalsType =
  ClosedEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1EvalsType
  >;

export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl =
  {
    /**
     * The orq.ai id of the image
     */
    id?: string | undefined;
    /**
     * Either a URL of the image or the base64 encoded data URI.
     */
    url: string;
    /**
     * Specifies the detail level of the image. Currently only supported with OpenAI models
     */
    detail?: string | undefined;
  };

/**
 * The image part of the prompt message. Only supported with vision models.
 */
export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12 = {
  type: PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1EvalsType;
  imageUrl:
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl;
};

export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1Type =
  {
    Text: "text",
  } as const;
export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1Type =
  ClosedEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1Type
  >;

/**
 * Text content part of a prompt message
 */
export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11 = {
  type: PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1Type;
  text: string;
};

export type PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems12 =
  | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11
  | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12;

/**
 * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
 */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONContent =
  | string
  | Array<
    | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11
    | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunType =
  {
    Function: "function",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunType =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunType
  >;

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function =
  {
    name: string;
    /**
     * JSON string arguments for the functions
     */
    arguments: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONToolCalls = {
  id?: string | undefined;
  index?: number | undefined;
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunType;
  function:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function;
};

export type PostV2LogsQueryEvalsResponse200ApplicationJSONMessages = {
  /**
   * The role of the prompt message
   */
  role: PostV2LogsQueryEvalsResponse200ApplicationJSONRole;
  /**
   * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
   */
  content:
    | string
    | Array<
      | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11
      | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12
    >;
  toolCalls?:
    | Array<PostV2LogsQueryEvalsResponse200ApplicationJSONToolCalls>
    | undefined;
  /**
   * The id of the resource
   */
  id?: string | undefined;
};

export type PostV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig = {
  stream: boolean;
  model: string;
  /**
   * The id of the resource
   */
  modelDbId: string;
  /**
   * The type of the model
   */
  modelType: PostV2LogsQueryEvalsResponse200ApplicationJSONModelType;
  /**
   * Model Parameters: Not all parameters apply to every model
   */
  modelParameters:
    PostV2LogsQueryEvalsResponse200ApplicationJSONModelParameters;
  provider: PostV2LogsQueryEvalsResponse200ApplicationJSONProvider;
  messages: Array<PostV2LogsQueryEvalsResponse200ApplicationJSONMessages>;
  /**
   * The id of the resource
   */
  integrationId?: string | null | undefined;
  version?: string | undefined;
};

export type PostV2LogsQueryEvalsVariables = {
  key: string;
  value?: any | undefined;
  isPii?: boolean | undefined;
};

export type PostV2LogsQueryEvalsResponse200ApplicationJSONPerformance = {
  latency: number;
  firstTimeToToken?: number | null | undefined;
  tokensPerSecond?: number | null | undefined;
};

export type PostV2LogsQueryEvalsPromptTokensDetails = {
  cachedTokens?: number | undefined;
};

export type PostV2LogsQueryEvalsCompletionTokensDetails = {
  reasoningTokens?: number | undefined;
};

export type PostV2LogsQueryEvalsResponse200ApplicationJSONUsage = {
  totalTokens?: number | undefined;
  promptTokens?: number | undefined;
  completionTokens?: number | undefined;
  promptTokensDetails?: PostV2LogsQueryEvalsPromptTokensDetails | undefined;
  completionTokensDetails?:
    | PostV2LogsQueryEvalsCompletionTokensDetails
    | undefined;
};

export type PostV2LogsQueryEvalsBilling = {
  totalCost?: number | null | undefined;
  inputCost?: number | null | undefined;
  outputCost?: number | null | undefined;
  billable: boolean;
};

/**
 * The type of the tool. Currently, only `function` is supported.
 */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17Type =
  {
    Function: "function",
  } as const;
/**
 * The type of the tool. Currently, only `function` is supported.
 */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17Type
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunDataType =
  {
    Object: "object",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunDataType =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunDataType
  >;

/**
 * The parameters the functions accepts, described as a JSON Schema object.
 *
 * @remarks
 *
 *  Omitting `parameters` defines a function with an empty parameter list.
 */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONParameters = {
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunDataType;
  properties: { [k: string]: any };
  required?: Array<string> | undefined;
  additionalProperties?: boolean | undefined;
};

export type PostV2LogsQueryEvalsResponse200ApplicationJSONFunction = {
  /**
   * The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.
   */
  name: string;
  /**
   * A description of what the function does, used by the model to choose when and how to call the function.
   */
  description?: string | undefined;
  strict?: boolean | undefined;
  /**
   * The parameters the functions accepts, described as a JSON Schema object.
   *
   * @remarks
   *
   *  Omitting `parameters` defines a function with an empty parameter list.
   */
  parameters: PostV2LogsQueryEvalsResponse200ApplicationJSONParameters;
};

export type PostV2LogsQueryEvalsResponse200ApplicationJSONTools = {
  /**
   * The type of the tool. Currently, only `function` is supported.
   */
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17Type;
  function: PostV2LogsQueryEvalsResponse200ApplicationJSONFunction;
};

export type PostV2LogsQueryEvalsPromptSnippets = {
  /**
   * The id of the resource
   */
  id: string;
  key: string;
  value: string;
};

export type PostV2LogsQueryEvalsResponse200ApplicationJSONData = {
  choices?:
    | Array<PostV2LogsQueryEvalsResponse200ApplicationJSONChoices>
    | undefined;
  action: PostV2LogsQueryEvalsResponse200ApplicationJSONAction;
  promptConfig: PostV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig;
  variables: Array<PostV2LogsQueryEvalsVariables>;
  performance?:
    | PostV2LogsQueryEvalsResponse200ApplicationJSONPerformance
    | undefined;
  usage?: PostV2LogsQueryEvalsResponse200ApplicationJSONUsage | undefined;
  billing?: PostV2LogsQueryEvalsBilling | undefined;
  tools?:
    | Array<PostV2LogsQueryEvalsResponse200ApplicationJSONTools>
    | undefined;
  promptSnippets: Array<PostV2LogsQueryEvalsPromptSnippets>;
};

export type PostV2LogsQueryEvalsResponse200WorkflowRun = {
  id: string;
  /**
   * Metadata for the workflow run
   */
  workflowMetadata?: { [k: string]: any } | undefined;
  /**
   * Input for the workflow run
   */
  workflowInput?: { [k: string]: any } | undefined;
  /**
   * Output for the workflow run
   */
  workflowOutput?: { [k: string]: any } | undefined;
  /**
   * An optional field that is filled if the workflow was triggered by an HTTP request
   */
  requestProperties?:
    | PostV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties
    | undefined;
  startedAt: Date;
  finishedAt?: Date | undefined;
  /**
   * Orquesta product
   */
  productType: PostV2LogsQueryEvalsResponse200ApplicationJSONProductType;
  relatedEntities: Array<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71
  >;
  evals: Array<
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14
  >;
  data: PostV2LogsQueryEvalsResponse200ApplicationJSONData;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyStatus =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyStatus =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyStatus
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyRelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4;

export type PostV2LogsQueryEvalsResponse200ApplicationJson7 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsType;
  workflowRun: PostV2LogsQueryEvalsResponse200WorkflowRun;
  /**
   * The id of the resource
   */
  id: string;
  status: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyStatus;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyType = {
  BertScore: "bert_score",
} as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyType
  >;

export type PostV2LogsQueryEvalsValue = {
  f1: number;
  precision: number;
  recall: number;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONStatus = {
  Pending: "pending",
  Completed: "completed",
  Failed: "failed",
} as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONStatus = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponse200ApplicationJSONStatus
>;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals64Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals64Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals64Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals64Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals63Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals63Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals63Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals63Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals62Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals62Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals62Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals62Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals6Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals6Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals6Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals6Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONRelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4;

export type PostV2LogsQueryEvalsResponse200ApplicationJson6 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyType;
  value: PostV2LogsQueryEvalsValue;
  /**
   * The id of the resource
   */
  id: string;
  status: PostV2LogsQueryEvalsResponse200ApplicationJSONStatus;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONType = {
  RougeN: "rouge_n",
} as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONType = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponse200ApplicationJSONType
>;

export type PostV2LogsQueryEvalsResponse200Rouge1 = {
  f1: number;
  precision: number;
  recall: number;
};

export type PostV2LogsQueryEvalsResponse200Rouge2 = {
  f1: number;
  precision: number;
  recall: number;
};

export type PostV2LogsQueryEvalsResponse200RougeL = {
  f1: number;
  precision: number;
  recall: number;
};

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value =
  {
    rouge1: PostV2LogsQueryEvalsResponse200Rouge1;
    rouge2: PostV2LogsQueryEvalsResponse200Rouge2;
    rougeL: PostV2LogsQueryEvalsResponse200RougeL;
  };

export const PostV2LogsQueryEvalsResponse200Status = {
  Pending: "pending",
  Completed: "completed",
  Failed: "failed",
} as const;
export type PostV2LogsQueryEvalsResponse200Status = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponse200Status
>;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals54Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals54Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals54Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4 = {
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals54Type;
  /**
   * The id of the resource
   */
  evaluatorId: string;
};

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals5Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals5Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals5Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals5Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4;

export type PostV2LogsQueryEvalsResponse200ApplicationJson5 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONType;
  value: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value;
  /**
   * The id of the resource
   */
  id: string;
  status: PostV2LogsQueryEvalsResponse200Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4
  >;
};

export const PostV2LogsQueryEvalsResponse200Type = {
  StringArray: "string_array",
} as const;
export type PostV2LogsQueryEvalsResponse200Type = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponse200Type
>;

export const PostV2LogsQueryEvalsResponseStatus = {
  Pending: "pending",
  Completed: "completed",
  Failed: "failed",
} as const;
export type PostV2LogsQueryEvalsResponseStatus = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponseStatus
>;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponseRelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44;

export type PostV2LogsQueryEvalsResponse200ApplicationJson4 = {
  type: PostV2LogsQueryEvalsResponse200Type;
  values: Array<string>;
  /**
   * The id of the resource
   */
  id: string;
  status: PostV2LogsQueryEvalsResponseStatus;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44
  >;
};

export const PostV2LogsQueryEvalsResponseType = {
  Boolean: "boolean",
} as const;
export type PostV2LogsQueryEvalsResponseType = ClosedEnum<
  typeof PostV2LogsQueryEvalsResponseType
>;

export const PostV2LogsQueryEvalsStatus = {
  Pending: "pending",
  Completed: "completed",
  Failed: "failed",
} as const;
export type PostV2LogsQueryEvalsStatus = ClosedEnum<
  typeof PostV2LogsQueryEvalsStatus
>;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1EvalsType =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1EvalsType =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1EvalsType
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1EvalsType;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsRelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34;

export type PostV2LogsQueryEvalsResponse200ApplicationJson3 = {
  type: PostV2LogsQueryEvalsResponseType;
  value: boolean;
  /**
   * The id of the resource
   */
  id: string;
  status: PostV2LogsQueryEvalsStatus;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34
  >;
};

export const PostV2LogsQueryEvalsType = {
  Number: "number",
} as const;
export type PostV2LogsQueryEvalsType = ClosedEnum<
  typeof PostV2LogsQueryEvalsType
>;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals24Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals24Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals24Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals24Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals23Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals23Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals23Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals23Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals22Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals22Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals22Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals22Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4;

export type PostV2LogsQueryEvalsResponse200ApplicationJson2 = {
  type: PostV2LogsQueryEvalsType;
  value: number;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4
  >;
};

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Type =
  {
    String: "string",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Type =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Type
  >;

export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Status =
  {
    Pending: "pending",
    Completed: "completed",
    Failed: "failed",
  } as const;
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Status =
  ClosedEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Status
  >;

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals14Type =
  {
    Evaluator: "evaluator",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals14Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals14Type
  >;

/**
 * Define the relationship between an evaluator and an entity. Can be LLM Evals, Code Evals or HTTP Evals
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals14Type;
    /**
     * The id of the resource
     */
    evaluatorId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals13Type =
  {
    HumanEval: "human_eval",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals13Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals13Type
  >;

/**
 * Define the relationship between an entity and a human eval, also known as feedback
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals13Type;
    /**
     * The id of the resource
     */
    humanEvalId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals12Type =
  {
    Contact: "contact",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals12Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals12Type
  >;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals12Type;
    contactId: string;
  };

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1Type =
  {
    Account: "account",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1Type
  >;

/**
 * Define the internal account of the system. Also sometimes called user (internal)
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11 =
  {
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1Type;
    /**
     * The id of the resource
     */
    accountId: string;
  };

export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsRelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14;

export type PostV2LogsQueryEvalsResponse200ApplicationJson1 = {
  type: PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Type;
  value: string;
  /**
   * The id of the resource
   */
  id: string;
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Status;
  timestamp: Date;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14
  >;
};

export type PostV2LogsQueryItemsResponse200Evals =
  | PostV2LogsQueryEvalsResponse200ApplicationJson1
  | PostV2LogsQueryEvalsResponse200ApplicationJson2
  | PostV2LogsQueryEvalsResponse200ApplicationJson3
  | PostV2LogsQueryEvalsResponse200ApplicationJson4
  | PostV2LogsQueryEvalsResponse200ApplicationJson5
  | PostV2LogsQueryEvalsResponse200ApplicationJson6
  | PostV2LogsQueryEvalsResponse200ApplicationJson7;

export const PostV2LogsQueryItemsResponse200ProductType = {
  Remoteconfigs: "remoteconfigs",
} as const;
export type PostV2LogsQueryItemsResponse200ProductType = ClosedEnum<
  typeof PostV2LogsQueryItemsResponse200ProductType
>;

export const PostV2LogsQueryRelatedEntitiesResponseType = {
  Contact: "contact",
} as const;
export type PostV2LogsQueryRelatedEntitiesResponseType = ClosedEnum<
  typeof PostV2LogsQueryRelatedEntitiesResponseType
>;

/**
 * Define the user set using the SDK
 */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3 = {
  type: PostV2LogsQueryRelatedEntitiesResponseType;
  contactId: string;
};

export const PostV2LogsQueryRelatedEntitiesType = {
  RemoteconfigVariant: "remoteconfig_variant",
} as const;
export type PostV2LogsQueryRelatedEntitiesType = ClosedEnum<
  typeof PostV2LogsQueryRelatedEntitiesType
>;

export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2 = {
  type: PostV2LogsQueryRelatedEntitiesType;
  remoteConfigVariantId: string;
};

export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Type =
  {
    Remoteconfig: "remoteconfig",
  } as const;
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Type =
  ClosedEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Type
  >;

export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1 = {
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Type;
  remoteConfigId: string;
};

export type PostV2LogsQueryItemsResponse200RelatedEntities =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3;

export const PostV2LogsQueryItemsResponse200Action = {
  GetConfig: "get_config",
  Simulate: "simulate",
} as const;
export type PostV2LogsQueryItemsResponse200Action = ClosedEnum<
  typeof PostV2LogsQueryItemsResponse200Action
>;

export type ItemsData = {
  remoteConfigId: string;
  remoteConfigKey: string;
  remoteConfigType: string;
  remoteConfigVersion: number;
  remoteConfigVariantId: string;
  remoteConfigVariantPosition: number;
  remoteConfigValue?: any | undefined;
  isDefaultMatched: boolean;
  action: PostV2LogsQueryItemsResponse200Action;
};

/**
 * The schema for a remote config workflow run
 */
export type Items1 = {
  /**
   * The unique identifier for the workflow run
   */
  id: string;
  /**
   * The unique identifier for the workspace
   */
  workspaceId: string;
  /**
   * Metadata for the workflow run
   */
  workflowMetadata?: { [k: string]: any } | undefined;
  /**
   * Input for the workflow run
   */
  workflowInput?: { [k: string]: any } | undefined;
  /**
   * Output for the workflow run
   */
  workflowOutput?: { [k: string]: any } | undefined;
  /**
   * The optional project_id for the entity of the event
   */
  projectId?: string | undefined;
  /**
   * An optional field that is filled if the workflow was triggered by an HTTP request
   */
  requestProperties?:
    | PostV2LogsQueryItemsResponse200RequestProperties
    | undefined;
  startedAt: Date;
  finishedAt?: Date | undefined;
  evals: Array<
    | PostV2LogsQueryEvalsResponse200ApplicationJson1
    | PostV2LogsQueryEvalsResponse200ApplicationJson2
    | PostV2LogsQueryEvalsResponse200ApplicationJson3
    | PostV2LogsQueryEvalsResponse200ApplicationJson4
    | PostV2LogsQueryEvalsResponse200ApplicationJson5
    | PostV2LogsQueryEvalsResponse200ApplicationJson6
    | PostV2LogsQueryEvalsResponse200ApplicationJson7
  >;
  productType: PostV2LogsQueryItemsResponse200ProductType;
  relatedEntities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3
  >;
  data: ItemsData;
};

/**
 * The schema for a workflow run
 */
export type Items = Items1 | Items2 | Items3 | Items4;

/**
 * Returns a list of workflow runs
 */
export type PostV2LogsQueryResponseBody = {
  /**
   * Total number of items
   */
  count: number;
  /**
   * List of items
   */
  items: Array<Items1 | Items2 | Items3 | Items4>;
  nextLastId?: string | null | undefined;
};

/** @internal */
export const Pagination$inboundSchema: z.ZodType<
  Pagination,
  z.ZodTypeDef,
  unknown
> = z.object({
  page: z.number().optional(),
  limit: z.number(),
  lastId: z.nullable(z.string()).optional(),
});

/** @internal */
export type Pagination$Outbound = {
  page?: number | undefined;
  limit: number;
  lastId?: string | null | undefined;
};

/** @internal */
export const Pagination$outboundSchema: z.ZodType<
  Pagination$Outbound,
  z.ZodTypeDef,
  Pagination
> = z.object({
  page: z.number().optional(),
  limit: z.number(),
  lastId: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Pagination$ {
  /** @deprecated use `Pagination$inboundSchema` instead. */
  export const inboundSchema = Pagination$inboundSchema;
  /** @deprecated use `Pagination$outboundSchema` instead. */
  export const outboundSchema = Pagination$outboundSchema;
  /** @deprecated use `Pagination$Outbound` instead. */
  export type Outbound = Pagination$Outbound;
}

export function paginationToJSON(pagination: Pagination): string {
  return JSON.stringify(Pagination$outboundSchema.parse(pagination));
}

export function paginationFromJSON(
  jsonString: string,
): SafeParseResult<Pagination, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Pagination$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Pagination' from JSON`,
  );
}

/** @internal */
export const Direction$inboundSchema: z.ZodNativeEnum<typeof Direction> = z
  .nativeEnum(Direction);

/** @internal */
export const Direction$outboundSchema: z.ZodNativeEnum<typeof Direction> =
  Direction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Direction$ {
  /** @deprecated use `Direction$inboundSchema` instead. */
  export const inboundSchema = Direction$inboundSchema;
  /** @deprecated use `Direction$outboundSchema` instead. */
  export const outboundSchema = Direction$outboundSchema;
}

/** @internal */
export const SortingProps$inboundSchema: z.ZodType<
  SortingProps,
  z.ZodTypeDef,
  unknown
> = z.object({
  key: z.string(),
  direction: Direction$inboundSchema.optional(),
});

/** @internal */
export type SortingProps$Outbound = {
  key: string;
  direction?: string | undefined;
};

/** @internal */
export const SortingProps$outboundSchema: z.ZodType<
  SortingProps$Outbound,
  z.ZodTypeDef,
  SortingProps
> = z.object({
  key: z.string(),
  direction: Direction$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SortingProps$ {
  /** @deprecated use `SortingProps$inboundSchema` instead. */
  export const inboundSchema = SortingProps$inboundSchema;
  /** @deprecated use `SortingProps$outboundSchema` instead. */
  export const outboundSchema = SortingProps$outboundSchema;
  /** @deprecated use `SortingProps$Outbound` instead. */
  export type Outbound = SortingProps$Outbound;
}

export function sortingPropsToJSON(sortingProps: SortingProps): string {
  return JSON.stringify(SortingProps$outboundSchema.parse(sortingProps));
}

export function sortingPropsFromJSON(
  jsonString: string,
): SafeParseResult<SortingProps, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SortingProps$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SortingProps' from JSON`,
  );
}

/** @internal */
export const Operator$inboundSchema: z.ZodNativeEnum<typeof Operator> = z
  .nativeEnum(Operator);

/** @internal */
export const Operator$outboundSchema: z.ZodNativeEnum<typeof Operator> =
  Operator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Operator$ {
  /** @deprecated use `Operator$inboundSchema` instead. */
  export const inboundSchema = Operator$inboundSchema;
  /** @deprecated use `Operator$outboundSchema` instead. */
  export const outboundSchema = Operator$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyQuery7Operator$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryFiltersRequestRequestBodyQuery7Operator
  > = z.nativeEnum(PostV2LogsQueryFiltersRequestRequestBodyQuery7Operator);

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyQuery7Operator$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryFiltersRequestRequestBodyQuery7Operator
  > = PostV2LogsQueryFiltersRequestRequestBodyQuery7Operator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersRequestRequestBodyQuery7Operator$ {
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQuery7Operator$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyQuery7Operator$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQuery7Operator$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyQuery7Operator$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyQuery7Type$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestRequestBodyQuery7Type> = z
    .nativeEnum(PostV2LogsQueryFiltersRequestRequestBodyQuery7Type);

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyQuery7Type$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestRequestBodyQuery7Type> =
    PostV2LogsQueryFiltersRequestRequestBodyQuery7Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersRequestRequestBodyQuery7Type$ {
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQuery7Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyQuery7Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQuery7Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyQuery7Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters75$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters75
  > = z.nativeEnum(
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters75,
  );

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters75$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters75
  > =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters75$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters75$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters75$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters75$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters75$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters75$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters74$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters74
  > = z.nativeEnum(
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters74,
  );

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters74$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters74
  > =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters74$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters74$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters74$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters74$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters74$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters74$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters73$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters73
  > = z.nativeEnum(
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters73,
  );

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters73$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters73
  > =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters73$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters73$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters73$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters73$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters73$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters73$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters72$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters72
  > = z.nativeEnum(
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters72,
  );

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters72$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters72
  > =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters72$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters72$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters72$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters72$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters72$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters72$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters71$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters71
  > = z.nativeEnum(
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters71,
  );

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters71$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters71
  > =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters71$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters71$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters71$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters71$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters71$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters71$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyQuery7HideOperators$inboundSchema:
  z.ZodType<
    PostV2LogsQueryFiltersRequestRequestBodyQuery7HideOperators,
    z.ZodTypeDef,
    unknown
  > = z.union([
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters71$inboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters72$inboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters73$inboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters74$inboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters75$inboundSchema,
  ]);

/** @internal */
export type PostV2LogsQueryFiltersRequestRequestBodyQuery7HideOperators$Outbound =
  | string
  | string
  | string
  | string
  | string;

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyQuery7HideOperators$outboundSchema:
  z.ZodType<
    PostV2LogsQueryFiltersRequestRequestBodyQuery7HideOperators$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryFiltersRequestRequestBodyQuery7HideOperators
  > = z.union([
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters71$outboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters72$outboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters73$outboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters74$outboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters75$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersRequestRequestBodyQuery7HideOperators$ {
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQuery7HideOperators$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyQuery7HideOperators$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQuery7HideOperators$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyQuery7HideOperators$outboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQuery7HideOperators$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryFiltersRequestRequestBodyQuery7HideOperators$Outbound;
}

export function postV2LogsQueryFiltersRequestRequestBodyQuery7HideOperatorsToJSON(
  postV2LogsQueryFiltersRequestRequestBodyQuery7HideOperators:
    PostV2LogsQueryFiltersRequestRequestBodyQuery7HideOperators,
): string {
  return JSON.stringify(
    PostV2LogsQueryFiltersRequestRequestBodyQuery7HideOperators$outboundSchema
      .parse(postV2LogsQueryFiltersRequestRequestBodyQuery7HideOperators),
  );
}

export function postV2LogsQueryFiltersRequestRequestBodyQuery7HideOperatorsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryFiltersRequestRequestBodyQuery7HideOperators,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryFiltersRequestRequestBodyQuery7HideOperators$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryFiltersRequestRequestBodyQuery7HideOperators' from JSON`,
  );
}

/** @internal */
export const Seven$inboundSchema: z.ZodType<Seven, z.ZodTypeDef, unknown> = z
  .object({
    operator:
      PostV2LogsQueryFiltersRequestRequestBodyQuery7Operator$inboundSchema,
    value: z.boolean().default(false),
    type: PostV2LogsQueryFiltersRequestRequestBodyQuery7Type$inboundSchema,
    name: z.string(),
    path: z.string(),
    hideOperators: z.array(
      z.union([
        PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters71$inboundSchema,
        PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters72$inboundSchema,
        PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters73$inboundSchema,
        PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters74$inboundSchema,
        PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters75$inboundSchema,
      ]),
    ).optional(),
  });

/** @internal */
export type Seven$Outbound = {
  operator: string;
  value: boolean;
  type: string;
  name: string;
  path: string;
  hideOperators?: Array<string | string | string | string | string> | undefined;
};

/** @internal */
export const Seven$outboundSchema: z.ZodType<
  Seven$Outbound,
  z.ZodTypeDef,
  Seven
> = z.object({
  operator:
    PostV2LogsQueryFiltersRequestRequestBodyQuery7Operator$outboundSchema,
  value: z.boolean().default(false),
  type: PostV2LogsQueryFiltersRequestRequestBodyQuery7Type$outboundSchema,
  name: z.string(),
  path: z.string(),
  hideOperators: z.array(
    z.union([
      PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters71$outboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters72$outboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters73$outboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters74$outboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters75$outboundSchema,
    ]),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Seven$ {
  /** @deprecated use `Seven$inboundSchema` instead. */
  export const inboundSchema = Seven$inboundSchema;
  /** @deprecated use `Seven$outboundSchema` instead. */
  export const outboundSchema = Seven$outboundSchema;
  /** @deprecated use `Seven$Outbound` instead. */
  export type Outbound = Seven$Outbound;
}

export function sevenToJSON(seven: Seven): string {
  return JSON.stringify(Seven$outboundSchema.parse(seven));
}

export function sevenFromJSON(
  jsonString: string,
): SafeParseResult<Seven, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Seven$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Seven' from JSON`,
  );
}

/** @internal */
export const Operator5$inboundSchema: z.ZodNativeEnum<typeof Operator5> = z
  .nativeEnum(Operator5);

/** @internal */
export const Operator5$outboundSchema: z.ZodNativeEnum<typeof Operator5> =
  Operator5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Operator5$ {
  /** @deprecated use `Operator5$inboundSchema` instead. */
  export const inboundSchema = Operator5$inboundSchema;
  /** @deprecated use `Operator5$outboundSchema` instead. */
  export const outboundSchema = Operator5$outboundSchema;
}

/** @internal */
export const Operator4$inboundSchema: z.ZodNativeEnum<typeof Operator4> = z
  .nativeEnum(Operator4);

/** @internal */
export const Operator4$outboundSchema: z.ZodNativeEnum<typeof Operator4> =
  Operator4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Operator4$ {
  /** @deprecated use `Operator4$inboundSchema` instead. */
  export const inboundSchema = Operator4$inboundSchema;
  /** @deprecated use `Operator4$outboundSchema` instead. */
  export const outboundSchema = Operator4$outboundSchema;
}

/** @internal */
export const Operator3$inboundSchema: z.ZodNativeEnum<typeof Operator3> = z
  .nativeEnum(Operator3);

/** @internal */
export const Operator3$outboundSchema: z.ZodNativeEnum<typeof Operator3> =
  Operator3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Operator3$ {
  /** @deprecated use `Operator3$inboundSchema` instead. */
  export const inboundSchema = Operator3$inboundSchema;
  /** @deprecated use `Operator3$outboundSchema` instead. */
  export const outboundSchema = Operator3$outboundSchema;
}

/** @internal */
export const Operator2$inboundSchema: z.ZodNativeEnum<typeof Operator2> = z
  .nativeEnum(Operator2);

/** @internal */
export const Operator2$outboundSchema: z.ZodNativeEnum<typeof Operator2> =
  Operator2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Operator2$ {
  /** @deprecated use `Operator2$inboundSchema` instead. */
  export const inboundSchema = Operator2$inboundSchema;
  /** @deprecated use `Operator2$outboundSchema` instead. */
  export const outboundSchema = Operator2$outboundSchema;
}

/** @internal */
export const Operator1$inboundSchema: z.ZodNativeEnum<typeof Operator1> = z
  .nativeEnum(Operator1);

/** @internal */
export const Operator1$outboundSchema: z.ZodNativeEnum<typeof Operator1> =
  Operator1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Operator1$ {
  /** @deprecated use `Operator1$inboundSchema` instead. */
  export const inboundSchema = Operator1$inboundSchema;
  /** @deprecated use `Operator1$outboundSchema` instead. */
  export const outboundSchema = Operator1$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyQuery6Operator$inboundSchema:
  z.ZodType<
    PostV2LogsQueryFiltersRequestRequestBodyQuery6Operator,
    z.ZodTypeDef,
    unknown
  > = z.union([
    Operator1$inboundSchema,
    Operator2$inboundSchema,
    Operator3$inboundSchema,
    Operator4$inboundSchema,
    Operator5$inboundSchema,
  ]);

/** @internal */
export type PostV2LogsQueryFiltersRequestRequestBodyQuery6Operator$Outbound =
  | string
  | string
  | string
  | string
  | string;

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyQuery6Operator$outboundSchema:
  z.ZodType<
    PostV2LogsQueryFiltersRequestRequestBodyQuery6Operator$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryFiltersRequestRequestBodyQuery6Operator
  > = z.union([
    Operator1$outboundSchema,
    Operator2$outboundSchema,
    Operator3$outboundSchema,
    Operator4$outboundSchema,
    Operator5$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersRequestRequestBodyQuery6Operator$ {
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQuery6Operator$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyQuery6Operator$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQuery6Operator$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyQuery6Operator$outboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQuery6Operator$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryFiltersRequestRequestBodyQuery6Operator$Outbound;
}

export function postV2LogsQueryFiltersRequestRequestBodyQuery6OperatorToJSON(
  postV2LogsQueryFiltersRequestRequestBodyQuery6Operator:
    PostV2LogsQueryFiltersRequestRequestBodyQuery6Operator,
): string {
  return JSON.stringify(
    PostV2LogsQueryFiltersRequestRequestBodyQuery6Operator$outboundSchema.parse(
      postV2LogsQueryFiltersRequestRequestBodyQuery6Operator,
    ),
  );
}

export function postV2LogsQueryFiltersRequestRequestBodyQuery6OperatorFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryFiltersRequestRequestBodyQuery6Operator,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryFiltersRequestRequestBodyQuery6Operator$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryFiltersRequestRequestBodyQuery6Operator' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyQuery6Type$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestRequestBodyQuery6Type> = z
    .nativeEnum(PostV2LogsQueryFiltersRequestRequestBodyQuery6Type);

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyQuery6Type$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestRequestBodyQuery6Type> =
    PostV2LogsQueryFiltersRequestRequestBodyQuery6Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersRequestRequestBodyQuery6Type$ {
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQuery6Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyQuery6Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQuery6Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyQuery6Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyQuery6OptionsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryFiltersRequestRequestBodyQuery6OptionsType
  > = z.nativeEnum(PostV2LogsQueryFiltersRequestRequestBodyQuery6OptionsType);

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyQuery6OptionsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryFiltersRequestRequestBodyQuery6OptionsType
  > = PostV2LogsQueryFiltersRequestRequestBodyQuery6OptionsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersRequestRequestBodyQuery6OptionsType$ {
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQuery6OptionsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyQuery6OptionsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQuery6OptionsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyQuery6OptionsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQuery5$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQuery5> =
    z.nativeEnum(PostV2LogsQueryHideOperatorsRequestRequestBodyQuery5);

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQuery5$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQuery5> =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequestRequestBodyQuery5$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQuery5$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery5$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQuery5$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery5$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQuery4$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQuery4> =
    z.nativeEnum(PostV2LogsQueryHideOperatorsRequestRequestBodyQuery4);

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQuery4$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQuery4> =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequestRequestBodyQuery4$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQuery4$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQuery4$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery4$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters3$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters3
  > = z.nativeEnum(PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters3);

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters3$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters3
  > = PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters3$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters3$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters2$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters2
  > = z.nativeEnum(PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters2);

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters2$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters2
  > = PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters2$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters2$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters1$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters1
  > = z.nativeEnum(PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters1);

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters1$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters1
  > = PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters1$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters1$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyQueryHideOperators$inboundSchema:
  z.ZodType<
    PostV2LogsQueryFiltersRequestRequestBodyQueryHideOperators,
    z.ZodTypeDef,
    unknown
  > = z.union([
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters1$inboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters2$inboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters3$inboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery4$inboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery5$inboundSchema,
  ]);

/** @internal */
export type PostV2LogsQueryFiltersRequestRequestBodyQueryHideOperators$Outbound =
  | string
  | string
  | string
  | string
  | string;

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyQueryHideOperators$outboundSchema:
  z.ZodType<
    PostV2LogsQueryFiltersRequestRequestBodyQueryHideOperators$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryFiltersRequestRequestBodyQueryHideOperators
  > = z.union([
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters1$outboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters2$outboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters3$outboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery4$outboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery5$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersRequestRequestBodyQueryHideOperators$ {
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQueryHideOperators$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyQueryHideOperators$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQueryHideOperators$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyQueryHideOperators$outboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQueryHideOperators$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryFiltersRequestRequestBodyQueryHideOperators$Outbound;
}

export function postV2LogsQueryFiltersRequestRequestBodyQueryHideOperatorsToJSON(
  postV2LogsQueryFiltersRequestRequestBodyQueryHideOperators:
    PostV2LogsQueryFiltersRequestRequestBodyQueryHideOperators,
): string {
  return JSON.stringify(
    PostV2LogsQueryFiltersRequestRequestBodyQueryHideOperators$outboundSchema
      .parse(postV2LogsQueryFiltersRequestRequestBodyQueryHideOperators),
  );
}

export function postV2LogsQueryFiltersRequestRequestBodyQueryHideOperatorsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryFiltersRequestRequestBodyQueryHideOperators,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryFiltersRequestRequestBodyQueryHideOperators$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryFiltersRequestRequestBodyQueryHideOperators' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryFiltersOptions$inboundSchema: z.ZodType<
  PostV2LogsQueryFiltersOptions,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  path: z.string(),
  type: PostV2LogsQueryFiltersRequestRequestBodyQuery6OptionsType$inboundSchema,
  hideOperators: z.array(
    z.union([
      PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters1$inboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters2$inboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters3$inboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBodyQuery4$inboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBodyQuery5$inboundSchema,
    ]),
  ).optional(),
  id: z.string(),
});

/** @internal */
export type PostV2LogsQueryFiltersOptions$Outbound = {
  name: string;
  path: string;
  type: string;
  hideOperators?: Array<string | string | string | string | string> | undefined;
  id: string;
};

/** @internal */
export const PostV2LogsQueryFiltersOptions$outboundSchema: z.ZodType<
  PostV2LogsQueryFiltersOptions$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryFiltersOptions
> = z.object({
  name: z.string(),
  path: z.string(),
  type:
    PostV2LogsQueryFiltersRequestRequestBodyQuery6OptionsType$outboundSchema,
  hideOperators: z.array(
    z.union([
      PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters1$outboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters2$outboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters3$outboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBodyQuery4$outboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBodyQuery5$outboundSchema,
    ]),
  ).optional(),
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersOptions$ {
  /** @deprecated use `PostV2LogsQueryFiltersOptions$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryFiltersOptions$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersOptions$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryFiltersOptions$outboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersOptions$Outbound` instead. */
  export type Outbound = PostV2LogsQueryFiltersOptions$Outbound;
}

export function postV2LogsQueryFiltersOptionsToJSON(
  postV2LogsQueryFiltersOptions: PostV2LogsQueryFiltersOptions,
): string {
  return JSON.stringify(
    PostV2LogsQueryFiltersOptions$outboundSchema.parse(
      postV2LogsQueryFiltersOptions,
    ),
  );
}

export function postV2LogsQueryFiltersOptionsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryFiltersOptions, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryFiltersOptions$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryFiltersOptions' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters5$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters5
  > = z.nativeEnum(PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters5);

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters5$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters5
  > = PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters5$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters5$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters5$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters5$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters5$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters4$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters4
  > = z.nativeEnum(PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters4);

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters4$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters4
  > = PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters4$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters4$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters4$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters4$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters63$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters63
  > = z.nativeEnum(
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters63,
  );

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters63$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters63
  > =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters63$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters63$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters63$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters63$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters63$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters63$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters62$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters62
  > = z.nativeEnum(
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters62,
  );

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters62$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters62
  > =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters62$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters62$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters62$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters62$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters62$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters62$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters61$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters61
  > = z.nativeEnum(
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters61,
  );

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters61$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters61
  > =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters61$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters61$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters61$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters61$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters61$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters61$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyQuery6HideOperators$inboundSchema:
  z.ZodType<
    PostV2LogsQueryFiltersRequestRequestBodyQuery6HideOperators,
    z.ZodTypeDef,
    unknown
  > = z.union([
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters61$inboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters62$inboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters63$inboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters4$inboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters5$inboundSchema,
  ]);

/** @internal */
export type PostV2LogsQueryFiltersRequestRequestBodyQuery6HideOperators$Outbound =
  | string
  | string
  | string
  | string
  | string;

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyQuery6HideOperators$outboundSchema:
  z.ZodType<
    PostV2LogsQueryFiltersRequestRequestBodyQuery6HideOperators$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryFiltersRequestRequestBodyQuery6HideOperators
  > = z.union([
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters61$outboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters62$outboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters63$outboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters4$outboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters5$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersRequestRequestBodyQuery6HideOperators$ {
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQuery6HideOperators$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyQuery6HideOperators$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQuery6HideOperators$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyQuery6HideOperators$outboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQuery6HideOperators$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryFiltersRequestRequestBodyQuery6HideOperators$Outbound;
}

export function postV2LogsQueryFiltersRequestRequestBodyQuery6HideOperatorsToJSON(
  postV2LogsQueryFiltersRequestRequestBodyQuery6HideOperators:
    PostV2LogsQueryFiltersRequestRequestBodyQuery6HideOperators,
): string {
  return JSON.stringify(
    PostV2LogsQueryFiltersRequestRequestBodyQuery6HideOperators$outboundSchema
      .parse(postV2LogsQueryFiltersRequestRequestBodyQuery6HideOperators),
  );
}

export function postV2LogsQueryFiltersRequestRequestBodyQuery6HideOperatorsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryFiltersRequestRequestBodyQuery6HideOperators,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryFiltersRequestRequestBodyQuery6HideOperators$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryFiltersRequestRequestBodyQuery6HideOperators' from JSON`,
  );
}

/** @internal */
export const Six$inboundSchema: z.ZodType<Six, z.ZodTypeDef, unknown> = z
  .object({
    operator: z.union([
      Operator1$inboundSchema,
      Operator2$inboundSchema,
      Operator3$inboundSchema,
      Operator4$inboundSchema,
      Operator5$inboundSchema,
    ]),
    value: z.nullable(z.any()).optional(),
    type: PostV2LogsQueryFiltersRequestRequestBodyQuery6Type$inboundSchema,
    options: z.array(z.lazy(() => PostV2LogsQueryFiltersOptions$inboundSchema)),
    selectedOptionId: z.nullable(z.string()),
    name: z.string(),
    path: z.string(),
    hideOperators: z.array(
      z.union([
        PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters61$inboundSchema,
        PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters62$inboundSchema,
        PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters63$inboundSchema,
        PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters4$inboundSchema,
        PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters5$inboundSchema,
      ]),
    ).optional(),
  });

/** @internal */
export type Six$Outbound = {
  operator: string | string | string | string | string;
  value?: any | null | undefined;
  type: string;
  options: Array<PostV2LogsQueryFiltersOptions$Outbound>;
  selectedOptionId: string | null;
  name: string;
  path: string;
  hideOperators?: Array<string | string | string | string | string> | undefined;
};

/** @internal */
export const Six$outboundSchema: z.ZodType<Six$Outbound, z.ZodTypeDef, Six> = z
  .object({
    operator: z.union([
      Operator1$outboundSchema,
      Operator2$outboundSchema,
      Operator3$outboundSchema,
      Operator4$outboundSchema,
      Operator5$outboundSchema,
    ]),
    value: z.nullable(z.any()).optional(),
    type: PostV2LogsQueryFiltersRequestRequestBodyQuery6Type$outboundSchema,
    options: z.array(
      z.lazy(() => PostV2LogsQueryFiltersOptions$outboundSchema),
    ),
    selectedOptionId: z.nullable(z.string()),
    name: z.string(),
    path: z.string(),
    hideOperators: z.array(
      z.union([
        PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters61$outboundSchema,
        PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters62$outboundSchema,
        PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters63$outboundSchema,
        PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters4$outboundSchema,
        PostV2LogsQueryHideOperatorsRequestRequestBodyQueryFilters5$outboundSchema,
      ]),
    ).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Six$ {
  /** @deprecated use `Six$inboundSchema` instead. */
  export const inboundSchema = Six$inboundSchema;
  /** @deprecated use `Six$outboundSchema` instead. */
  export const outboundSchema = Six$outboundSchema;
  /** @deprecated use `Six$Outbound` instead. */
  export type Outbound = Six$Outbound;
}

export function sixToJSON(six: Six): string {
  return JSON.stringify(Six$outboundSchema.parse(six));
}

export function sixFromJSON(
  jsonString: string,
): SafeParseResult<Six, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Six$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Six' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyQueryOperator$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryFiltersRequestRequestBodyQueryOperator
  > = z.nativeEnum(PostV2LogsQueryFiltersRequestRequestBodyQueryOperator);

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyQueryOperator$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryFiltersRequestRequestBodyQueryOperator
  > = PostV2LogsQueryFiltersRequestRequestBodyQueryOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersRequestRequestBodyQueryOperator$ {
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQueryOperator$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyQueryOperator$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQueryOperator$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyQueryOperator$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyQueryType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestRequestBodyQueryType> = z
    .nativeEnum(PostV2LogsQueryFiltersRequestRequestBodyQueryType);

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyQueryType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestRequestBodyQueryType> =
    PostV2LogsQueryFiltersRequestRequestBodyQueryType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersRequestRequestBodyQueryType$ {
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQueryType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyQueryType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyQueryType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyQueryType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBody5$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequestRequestBody5> = z
    .nativeEnum(PostV2LogsQueryHideOperatorsRequestRequestBody5);

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBody5$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequestRequestBody5> =
    PostV2LogsQueryHideOperatorsRequestRequestBody5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequestRequestBody5$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBody5$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBody5$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBody5$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBody5$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBody4$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequestRequestBody4> = z
    .nativeEnum(PostV2LogsQueryHideOperatorsRequestRequestBody4);

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBody4$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequestRequestBody4> =
    PostV2LogsQueryHideOperatorsRequestRequestBody4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequestRequestBody4$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBody4$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBody4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBody4$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBody4$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQuery3$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQuery3> =
    z.nativeEnum(PostV2LogsQueryHideOperatorsRequestRequestBodyQuery3);

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQuery3$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQuery3> =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequestRequestBodyQuery3$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQuery3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQuery3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery3$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQuery2$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQuery2> =
    z.nativeEnum(PostV2LogsQueryHideOperatorsRequestRequestBodyQuery2);

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQuery2$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQuery2> =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequestRequestBodyQuery2$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQuery2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQuery2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery2$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQuery1$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQuery1> =
    z.nativeEnum(PostV2LogsQueryHideOperatorsRequestRequestBodyQuery1);

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBodyQuery1$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequestRequestBodyQuery1> =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequestRequestBodyQuery1$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQuery1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBodyQuery1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery1$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyHideOperators$inboundSchema:
  z.ZodType<
    PostV2LogsQueryFiltersRequestRequestBodyHideOperators,
    z.ZodTypeDef,
    unknown
  > = z.union([
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery1$inboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery2$inboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery3$inboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBody4$inboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBody5$inboundSchema,
  ]);

/** @internal */
export type PostV2LogsQueryFiltersRequestRequestBodyHideOperators$Outbound =
  | string
  | string
  | string
  | string
  | string;

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyHideOperators$outboundSchema:
  z.ZodType<
    PostV2LogsQueryFiltersRequestRequestBodyHideOperators$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryFiltersRequestRequestBodyHideOperators
  > = z.union([
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery1$outboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery2$outboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBodyQuery3$outboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBody4$outboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBody5$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersRequestRequestBodyHideOperators$ {
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyHideOperators$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyHideOperators$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyHideOperators$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyHideOperators$outboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyHideOperators$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryFiltersRequestRequestBodyHideOperators$Outbound;
}

export function postV2LogsQueryFiltersRequestRequestBodyHideOperatorsToJSON(
  postV2LogsQueryFiltersRequestRequestBodyHideOperators:
    PostV2LogsQueryFiltersRequestRequestBodyHideOperators,
): string {
  return JSON.stringify(
    PostV2LogsQueryFiltersRequestRequestBodyHideOperators$outboundSchema.parse(
      postV2LogsQueryFiltersRequestRequestBodyHideOperators,
    ),
  );
}

export function postV2LogsQueryFiltersRequestRequestBodyHideOperatorsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryFiltersRequestRequestBodyHideOperators,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryFiltersRequestRequestBodyHideOperators$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryFiltersRequestRequestBodyHideOperators' from JSON`,
  );
}

/** @internal */
export const Filters5$inboundSchema: z.ZodType<
  Filters5,
  z.ZodTypeDef,
  unknown
> = z.object({
  operator: PostV2LogsQueryFiltersRequestRequestBodyQueryOperator$inboundSchema,
  value: z.nullable(z.string()),
  type: PostV2LogsQueryFiltersRequestRequestBodyQueryType$inboundSchema,
  name: z.string(),
  path: z.string(),
  hideOperators: z.array(
    z.union([
      PostV2LogsQueryHideOperatorsRequestRequestBodyQuery1$inboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBodyQuery2$inboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBodyQuery3$inboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBody4$inboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBody5$inboundSchema,
    ]),
  ).optional(),
});

/** @internal */
export type Filters5$Outbound = {
  operator: string;
  value: string | null;
  type: string;
  name: string;
  path: string;
  hideOperators?: Array<string | string | string | string | string> | undefined;
};

/** @internal */
export const Filters5$outboundSchema: z.ZodType<
  Filters5$Outbound,
  z.ZodTypeDef,
  Filters5
> = z.object({
  operator:
    PostV2LogsQueryFiltersRequestRequestBodyQueryOperator$outboundSchema,
  value: z.nullable(z.string()),
  type: PostV2LogsQueryFiltersRequestRequestBodyQueryType$outboundSchema,
  name: z.string(),
  path: z.string(),
  hideOperators: z.array(
    z.union([
      PostV2LogsQueryHideOperatorsRequestRequestBodyQuery1$outboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBodyQuery2$outboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBodyQuery3$outboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBody4$outboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBody5$outboundSchema,
    ]),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Filters5$ {
  /** @deprecated use `Filters5$inboundSchema` instead. */
  export const inboundSchema = Filters5$inboundSchema;
  /** @deprecated use `Filters5$outboundSchema` instead. */
  export const outboundSchema = Filters5$outboundSchema;
  /** @deprecated use `Filters5$Outbound` instead. */
  export type Outbound = Filters5$Outbound;
}

export function filters5ToJSON(filters5: Filters5): string {
  return JSON.stringify(Filters5$outboundSchema.parse(filters5));
}

export function filters5FromJSON(
  jsonString: string,
): SafeParseResult<Filters5, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Filters5$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Filters5' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyOperator$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestRequestBodyOperator> = z
    .nativeEnum(PostV2LogsQueryFiltersRequestRequestBodyOperator);

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyOperator$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestRequestBodyOperator> =
    PostV2LogsQueryFiltersRequestRequestBodyOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersRequestRequestBodyOperator$ {
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyOperator$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyOperator$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyOperator$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyOperator$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryFiltersValue$inboundSchema: z.ZodType<
  PostV2LogsQueryFiltersValue,
  z.ZodTypeDef,
  unknown
> = z.union([z.number(), z.array(z.number())]);

/** @internal */
export type PostV2LogsQueryFiltersValue$Outbound = number | Array<number>;

/** @internal */
export const PostV2LogsQueryFiltersValue$outboundSchema: z.ZodType<
  PostV2LogsQueryFiltersValue$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryFiltersValue
> = z.union([z.number(), z.array(z.number())]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersValue$ {
  /** @deprecated use `PostV2LogsQueryFiltersValue$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryFiltersValue$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersValue$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryFiltersValue$outboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersValue$Outbound` instead. */
  export type Outbound = PostV2LogsQueryFiltersValue$Outbound;
}

export function postV2LogsQueryFiltersValueToJSON(
  postV2LogsQueryFiltersValue: PostV2LogsQueryFiltersValue,
): string {
  return JSON.stringify(
    PostV2LogsQueryFiltersValue$outboundSchema.parse(
      postV2LogsQueryFiltersValue,
    ),
  );
}

export function postV2LogsQueryFiltersValueFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryFiltersValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryFiltersValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryFiltersValue' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestRequestBodyType> = z
    .nativeEnum(PostV2LogsQueryFiltersRequestRequestBodyType);

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBodyType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestRequestBodyType> =
    PostV2LogsQueryFiltersRequestRequestBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersRequestRequestBodyType$ {
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBodyType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryFiltersRequestRequestBodyType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequest5$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequest5> = z.nativeEnum(
    PostV2LogsQueryHideOperatorsRequest5,
  );

/** @internal */
export const PostV2LogsQueryHideOperatorsRequest5$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequest5> =
    PostV2LogsQueryHideOperatorsRequest5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequest5$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequest5$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequest5$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequest5$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequest5$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequest4$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequest4> = z.nativeEnum(
    PostV2LogsQueryHideOperatorsRequest4,
  );

/** @internal */
export const PostV2LogsQueryHideOperatorsRequest4$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequest4> =
    PostV2LogsQueryHideOperatorsRequest4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequest4$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequest4$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequest4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequest4$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequest4$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBody3$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequestRequestBody3> = z
    .nativeEnum(PostV2LogsQueryHideOperatorsRequestRequestBody3);

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBody3$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequestRequestBody3> =
    PostV2LogsQueryHideOperatorsRequestRequestBody3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequestRequestBody3$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBody3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBody3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBody3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBody3$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBody2$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequestRequestBody2> = z
    .nativeEnum(PostV2LogsQueryHideOperatorsRequestRequestBody2);

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBody2$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequestRequestBody2> =
    PostV2LogsQueryHideOperatorsRequestRequestBody2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequestRequestBody2$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBody2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBody2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBody2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBody2$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBody1$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequestRequestBody1> = z
    .nativeEnum(PostV2LogsQueryHideOperatorsRequestRequestBody1);

/** @internal */
export const PostV2LogsQueryHideOperatorsRequestRequestBody1$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequestRequestBody1> =
    PostV2LogsQueryHideOperatorsRequestRequestBody1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequestRequestBody1$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBody1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBody1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequestRequestBody1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequestRequestBody1$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryFiltersRequestHideOperators$inboundSchema:
  z.ZodType<PostV2LogsQueryFiltersRequestHideOperators, z.ZodTypeDef, unknown> =
    z.union([
      PostV2LogsQueryHideOperatorsRequestRequestBody1$inboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBody2$inboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBody3$inboundSchema,
      PostV2LogsQueryHideOperatorsRequest4$inboundSchema,
      PostV2LogsQueryHideOperatorsRequest5$inboundSchema,
    ]);

/** @internal */
export type PostV2LogsQueryFiltersRequestHideOperators$Outbound =
  | string
  | string
  | string
  | string
  | string;

/** @internal */
export const PostV2LogsQueryFiltersRequestHideOperators$outboundSchema:
  z.ZodType<
    PostV2LogsQueryFiltersRequestHideOperators$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryFiltersRequestHideOperators
  > = z.union([
    PostV2LogsQueryHideOperatorsRequestRequestBody1$outboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBody2$outboundSchema,
    PostV2LogsQueryHideOperatorsRequestRequestBody3$outboundSchema,
    PostV2LogsQueryHideOperatorsRequest4$outboundSchema,
    PostV2LogsQueryHideOperatorsRequest5$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersRequestHideOperators$ {
  /** @deprecated use `PostV2LogsQueryFiltersRequestHideOperators$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryFiltersRequestHideOperators$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestHideOperators$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryFiltersRequestHideOperators$outboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestHideOperators$Outbound` instead. */
  export type Outbound = PostV2LogsQueryFiltersRequestHideOperators$Outbound;
}

export function postV2LogsQueryFiltersRequestHideOperatorsToJSON(
  postV2LogsQueryFiltersRequestHideOperators:
    PostV2LogsQueryFiltersRequestHideOperators,
): string {
  return JSON.stringify(
    PostV2LogsQueryFiltersRequestHideOperators$outboundSchema.parse(
      postV2LogsQueryFiltersRequestHideOperators,
    ),
  );
}

export function postV2LogsQueryFiltersRequestHideOperatorsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryFiltersRequestHideOperators,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryFiltersRequestHideOperators$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryFiltersRequestHideOperators' from JSON`,
  );
}

/** @internal */
export const Filters4$inboundSchema: z.ZodType<
  Filters4,
  z.ZodTypeDef,
  unknown
> = z.object({
  operator: PostV2LogsQueryFiltersRequestRequestBodyOperator$inboundSchema,
  value: z.nullable(z.union([z.number(), z.array(z.number())])),
  type: PostV2LogsQueryFiltersRequestRequestBodyType$inboundSchema,
  name: z.string(),
  path: z.string(),
  hideOperators: z.array(
    z.union([
      PostV2LogsQueryHideOperatorsRequestRequestBody1$inboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBody2$inboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBody3$inboundSchema,
      PostV2LogsQueryHideOperatorsRequest4$inboundSchema,
      PostV2LogsQueryHideOperatorsRequest5$inboundSchema,
    ]),
  ).optional(),
});

/** @internal */
export type Filters4$Outbound = {
  operator: string;
  value: number | Array<number> | null;
  type: string;
  name: string;
  path: string;
  hideOperators?: Array<string | string | string | string | string> | undefined;
};

/** @internal */
export const Filters4$outboundSchema: z.ZodType<
  Filters4$Outbound,
  z.ZodTypeDef,
  Filters4
> = z.object({
  operator: PostV2LogsQueryFiltersRequestRequestBodyOperator$outboundSchema,
  value: z.nullable(z.union([z.number(), z.array(z.number())])),
  type: PostV2LogsQueryFiltersRequestRequestBodyType$outboundSchema,
  name: z.string(),
  path: z.string(),
  hideOperators: z.array(
    z.union([
      PostV2LogsQueryHideOperatorsRequestRequestBody1$outboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBody2$outboundSchema,
      PostV2LogsQueryHideOperatorsRequestRequestBody3$outboundSchema,
      PostV2LogsQueryHideOperatorsRequest4$outboundSchema,
      PostV2LogsQueryHideOperatorsRequest5$outboundSchema,
    ]),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Filters4$ {
  /** @deprecated use `Filters4$inboundSchema` instead. */
  export const inboundSchema = Filters4$inboundSchema;
  /** @deprecated use `Filters4$outboundSchema` instead. */
  export const outboundSchema = Filters4$outboundSchema;
  /** @deprecated use `Filters4$Outbound` instead. */
  export type Outbound = Filters4$Outbound;
}

export function filters4ToJSON(filters4: Filters4): string {
  return JSON.stringify(Filters4$outboundSchema.parse(filters4));
}

export function filters4FromJSON(
  jsonString: string,
): SafeParseResult<Filters4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Filters4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Filters4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryFiltersRequestOperator$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestOperator> = z.nativeEnum(
    PostV2LogsQueryFiltersRequestOperator,
  );

/** @internal */
export const PostV2LogsQueryFiltersRequestOperator$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestOperator> =
    PostV2LogsQueryFiltersRequestOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersRequestOperator$ {
  /** @deprecated use `PostV2LogsQueryFiltersRequestOperator$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryFiltersRequestOperator$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestOperator$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryFiltersRequestOperator$outboundSchema;
}

/** @internal */
export const Unit2$inboundSchema: z.ZodNativeEnum<typeof Unit2> = z.nativeEnum(
  Unit2,
);

/** @internal */
export const Unit2$outboundSchema: z.ZodNativeEnum<typeof Unit2> =
  Unit2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Unit2$ {
  /** @deprecated use `Unit2$inboundSchema` instead. */
  export const inboundSchema = Unit2$inboundSchema;
  /** @deprecated use `Unit2$outboundSchema` instead. */
  export const outboundSchema = Unit2$outboundSchema;
}

/** @internal */
export const Unit1$inboundSchema: z.ZodNativeEnum<typeof Unit1> = z.nativeEnum(
  Unit1,
);

/** @internal */
export const Unit1$outboundSchema: z.ZodNativeEnum<typeof Unit1> =
  Unit1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Unit1$ {
  /** @deprecated use `Unit1$inboundSchema` instead. */
  export const inboundSchema = Unit1$inboundSchema;
  /** @deprecated use `Unit1$outboundSchema` instead. */
  export const outboundSchema = Unit1$outboundSchema;
}

/** @internal */
export const Unit$inboundSchema: z.ZodType<Unit, z.ZodTypeDef, unknown> = z
  .union([Unit1$inboundSchema, Unit2$inboundSchema]);

/** @internal */
export type Unit$Outbound = string | string;

/** @internal */
export const Unit$outboundSchema: z.ZodType<Unit$Outbound, z.ZodTypeDef, Unit> =
  z.union([Unit1$outboundSchema, Unit2$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Unit$ {
  /** @deprecated use `Unit$inboundSchema` instead. */
  export const inboundSchema = Unit$inboundSchema;
  /** @deprecated use `Unit$outboundSchema` instead. */
  export const outboundSchema = Unit$outboundSchema;
  /** @deprecated use `Unit$Outbound` instead. */
  export type Outbound = Unit$Outbound;
}

export function unitToJSON(unit: Unit): string {
  return JSON.stringify(Unit$outboundSchema.parse(unit));
}

export function unitFromJSON(
  jsonString: string,
): SafeParseResult<Unit, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Unit$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Unit' from JSON`,
  );
}

/** @internal */
export const RelativeTime$inboundSchema: z.ZodNativeEnum<typeof RelativeTime> =
  z.nativeEnum(RelativeTime);

/** @internal */
export const RelativeTime$outboundSchema: z.ZodNativeEnum<typeof RelativeTime> =
  RelativeTime$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RelativeTime$ {
  /** @deprecated use `RelativeTime$inboundSchema` instead. */
  export const inboundSchema = RelativeTime$inboundSchema;
  /** @deprecated use `RelativeTime$outboundSchema` instead. */
  export const outboundSchema = RelativeTime$outboundSchema;
}

/** @internal */
export const FiltersDirection$inboundSchema: z.ZodNativeEnum<
  typeof FiltersDirection
> = z.nativeEnum(FiltersDirection);

/** @internal */
export const FiltersDirection$outboundSchema: z.ZodNativeEnum<
  typeof FiltersDirection
> = FiltersDirection$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FiltersDirection$ {
  /** @deprecated use `FiltersDirection$inboundSchema` instead. */
  export const inboundSchema = FiltersDirection$inboundSchema;
  /** @deprecated use `FiltersDirection$outboundSchema` instead. */
  export const outboundSchema = FiltersDirection$outboundSchema;
}

/** @internal */
export const Criteria$inboundSchema: z.ZodType<
  Criteria,
  z.ZodTypeDef,
  unknown
> = z.object({
  unit: z.union([Unit1$inboundSchema, Unit2$inboundSchema]).optional(),
  count: z.nullable(z.number()).optional(),
  relativeTime: RelativeTime$inboundSchema.optional(),
  customDate: z.nullable(z.string()).optional(),
  direction: FiltersDirection$inboundSchema.optional(),
  startDate: z.nullable(z.string()).optional(),
  endDate: z.nullable(z.string()).optional(),
});

/** @internal */
export type Criteria$Outbound = {
  unit?: string | string | undefined;
  count?: number | null | undefined;
  relativeTime?: string | undefined;
  customDate?: string | null | undefined;
  direction?: string | undefined;
  startDate?: string | null | undefined;
  endDate?: string | null | undefined;
};

/** @internal */
export const Criteria$outboundSchema: z.ZodType<
  Criteria$Outbound,
  z.ZodTypeDef,
  Criteria
> = z.object({
  unit: z.union([Unit1$outboundSchema, Unit2$outboundSchema]).optional(),
  count: z.nullable(z.number()).optional(),
  relativeTime: RelativeTime$outboundSchema.optional(),
  customDate: z.nullable(z.string()).optional(),
  direction: FiltersDirection$outboundSchema.optional(),
  startDate: z.nullable(z.string()).optional(),
  endDate: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Criteria$ {
  /** @deprecated use `Criteria$inboundSchema` instead. */
  export const inboundSchema = Criteria$inboundSchema;
  /** @deprecated use `Criteria$outboundSchema` instead. */
  export const outboundSchema = Criteria$outboundSchema;
  /** @deprecated use `Criteria$Outbound` instead. */
  export type Outbound = Criteria$Outbound;
}

export function criteriaToJSON(criteria: Criteria): string {
  return JSON.stringify(Criteria$outboundSchema.parse(criteria));
}

export function criteriaFromJSON(
  jsonString: string,
): SafeParseResult<Criteria, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Criteria$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Criteria' from JSON`,
  );
}

/** @internal */
export const Mode$inboundSchema: z.ZodNativeEnum<typeof Mode> = z.nativeEnum(
  Mode,
);

/** @internal */
export const Mode$outboundSchema: z.ZodNativeEnum<typeof Mode> =
  Mode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Mode$ {
  /** @deprecated use `Mode$inboundSchema` instead. */
  export const inboundSchema = Mode$inboundSchema;
  /** @deprecated use `Mode$outboundSchema` instead. */
  export const outboundSchema = Mode$outboundSchema;
}

/** @internal */
export const FiltersValue$inboundSchema: z.ZodType<
  FiltersValue,
  z.ZodTypeDef,
  unknown
> = z.object({
  criteria: z.nullable(z.lazy(() => Criteria$inboundSchema)),
  mode: Mode$inboundSchema,
});

/** @internal */
export type FiltersValue$Outbound = {
  criteria: Criteria$Outbound | null;
  mode: string;
};

/** @internal */
export const FiltersValue$outboundSchema: z.ZodType<
  FiltersValue$Outbound,
  z.ZodTypeDef,
  FiltersValue
> = z.object({
  criteria: z.nullable(z.lazy(() => Criteria$outboundSchema)),
  mode: Mode$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FiltersValue$ {
  /** @deprecated use `FiltersValue$inboundSchema` instead. */
  export const inboundSchema = FiltersValue$inboundSchema;
  /** @deprecated use `FiltersValue$outboundSchema` instead. */
  export const outboundSchema = FiltersValue$outboundSchema;
  /** @deprecated use `FiltersValue$Outbound` instead. */
  export type Outbound = FiltersValue$Outbound;
}

export function filtersValueToJSON(filtersValue: FiltersValue): string {
  return JSON.stringify(FiltersValue$outboundSchema.parse(filtersValue));
}

export function filtersValueFromJSON(
  jsonString: string,
): SafeParseResult<FiltersValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FiltersValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FiltersValue' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryFiltersRequestType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryFiltersRequestType
> = z.nativeEnum(PostV2LogsQueryFiltersRequestType);

/** @internal */
export const PostV2LogsQueryFiltersRequestType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryFiltersRequestType
> = PostV2LogsQueryFiltersRequestType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersRequestType$ {
  /** @deprecated use `PostV2LogsQueryFiltersRequestType$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryFiltersRequestType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryFiltersRequestType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperators5$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryHideOperators5
> = z.nativeEnum(PostV2LogsQueryHideOperators5);

/** @internal */
export const PostV2LogsQueryHideOperators5$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryHideOperators5
> = PostV2LogsQueryHideOperators5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperators5$ {
  /** @deprecated use `PostV2LogsQueryHideOperators5$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryHideOperators5$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperators5$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryHideOperators5$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperators4$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryHideOperators4
> = z.nativeEnum(PostV2LogsQueryHideOperators4);

/** @internal */
export const PostV2LogsQueryHideOperators4$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryHideOperators4
> = PostV2LogsQueryHideOperators4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperators4$ {
  /** @deprecated use `PostV2LogsQueryHideOperators4$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryHideOperators4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperators4$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryHideOperators4$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequest3$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequest3> = z.nativeEnum(
    PostV2LogsQueryHideOperatorsRequest3,
  );

/** @internal */
export const PostV2LogsQueryHideOperatorsRequest3$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequest3> =
    PostV2LogsQueryHideOperatorsRequest3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequest3$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequest3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequest3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequest3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequest3$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequest2$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequest2> = z.nativeEnum(
    PostV2LogsQueryHideOperatorsRequest2,
  );

/** @internal */
export const PostV2LogsQueryHideOperatorsRequest2$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequest2> =
    PostV2LogsQueryHideOperatorsRequest2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequest2$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequest2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequest2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequest2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequest2$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperatorsRequest1$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequest1> = z.nativeEnum(
    PostV2LogsQueryHideOperatorsRequest1,
  );

/** @internal */
export const PostV2LogsQueryHideOperatorsRequest1$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryHideOperatorsRequest1> =
    PostV2LogsQueryHideOperatorsRequest1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperatorsRequest1$ {
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequest1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryHideOperatorsRequest1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperatorsRequest1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryHideOperatorsRequest1$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryFiltersHideOperators$inboundSchema: z.ZodType<
  PostV2LogsQueryFiltersHideOperators,
  z.ZodTypeDef,
  unknown
> = z.union([
  PostV2LogsQueryHideOperatorsRequest1$inboundSchema,
  PostV2LogsQueryHideOperatorsRequest2$inboundSchema,
  PostV2LogsQueryHideOperatorsRequest3$inboundSchema,
  PostV2LogsQueryHideOperators4$inboundSchema,
  PostV2LogsQueryHideOperators5$inboundSchema,
]);

/** @internal */
export type PostV2LogsQueryFiltersHideOperators$Outbound =
  | string
  | string
  | string
  | string
  | string;

/** @internal */
export const PostV2LogsQueryFiltersHideOperators$outboundSchema: z.ZodType<
  PostV2LogsQueryFiltersHideOperators$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryFiltersHideOperators
> = z.union([
  PostV2LogsQueryHideOperatorsRequest1$outboundSchema,
  PostV2LogsQueryHideOperatorsRequest2$outboundSchema,
  PostV2LogsQueryHideOperatorsRequest3$outboundSchema,
  PostV2LogsQueryHideOperators4$outboundSchema,
  PostV2LogsQueryHideOperators5$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersHideOperators$ {
  /** @deprecated use `PostV2LogsQueryFiltersHideOperators$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryFiltersHideOperators$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersHideOperators$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryFiltersHideOperators$outboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersHideOperators$Outbound` instead. */
  export type Outbound = PostV2LogsQueryFiltersHideOperators$Outbound;
}

export function postV2LogsQueryFiltersHideOperatorsToJSON(
  postV2LogsQueryFiltersHideOperators: PostV2LogsQueryFiltersHideOperators,
): string {
  return JSON.stringify(
    PostV2LogsQueryFiltersHideOperators$outboundSchema.parse(
      postV2LogsQueryFiltersHideOperators,
    ),
  );
}

export function postV2LogsQueryFiltersHideOperatorsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryFiltersHideOperators, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryFiltersHideOperators$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryFiltersHideOperators' from JSON`,
  );
}

/** @internal */
export const Filters3$inboundSchema: z.ZodType<
  Filters3,
  z.ZodTypeDef,
  unknown
> = z.object({
  operator: PostV2LogsQueryFiltersRequestOperator$inboundSchema,
  value: z.lazy(() => FiltersValue$inboundSchema),
  type: PostV2LogsQueryFiltersRequestType$inboundSchema,
  name: z.string(),
  path: z.string(),
  hideOperators: z.array(
    z.union([
      PostV2LogsQueryHideOperatorsRequest1$inboundSchema,
      PostV2LogsQueryHideOperatorsRequest2$inboundSchema,
      PostV2LogsQueryHideOperatorsRequest3$inboundSchema,
      PostV2LogsQueryHideOperators4$inboundSchema,
      PostV2LogsQueryHideOperators5$inboundSchema,
    ]),
  ).optional(),
});

/** @internal */
export type Filters3$Outbound = {
  operator: string;
  value: FiltersValue$Outbound;
  type: string;
  name: string;
  path: string;
  hideOperators?: Array<string | string | string | string | string> | undefined;
};

/** @internal */
export const Filters3$outboundSchema: z.ZodType<
  Filters3$Outbound,
  z.ZodTypeDef,
  Filters3
> = z.object({
  operator: PostV2LogsQueryFiltersRequestOperator$outboundSchema,
  value: z.lazy(() => FiltersValue$outboundSchema),
  type: PostV2LogsQueryFiltersRequestType$outboundSchema,
  name: z.string(),
  path: z.string(),
  hideOperators: z.array(
    z.union([
      PostV2LogsQueryHideOperatorsRequest1$outboundSchema,
      PostV2LogsQueryHideOperatorsRequest2$outboundSchema,
      PostV2LogsQueryHideOperatorsRequest3$outboundSchema,
      PostV2LogsQueryHideOperators4$outboundSchema,
      PostV2LogsQueryHideOperators5$outboundSchema,
    ]),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Filters3$ {
  /** @deprecated use `Filters3$inboundSchema` instead. */
  export const inboundSchema = Filters3$inboundSchema;
  /** @deprecated use `Filters3$outboundSchema` instead. */
  export const outboundSchema = Filters3$outboundSchema;
  /** @deprecated use `Filters3$Outbound` instead. */
  export type Outbound = Filters3$Outbound;
}

export function filters3ToJSON(filters3: Filters3): string {
  return JSON.stringify(Filters3$outboundSchema.parse(filters3));
}

export function filters3FromJSON(
  jsonString: string,
): SafeParseResult<Filters3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Filters3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Filters3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryFiltersOperator$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryFiltersOperator
> = z.nativeEnum(PostV2LogsQueryFiltersOperator);

/** @internal */
export const PostV2LogsQueryFiltersOperator$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryFiltersOperator
> = PostV2LogsQueryFiltersOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersOperator$ {
  /** @deprecated use `PostV2LogsQueryFiltersOperator$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryFiltersOperator$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersOperator$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryFiltersOperator$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryFiltersType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryFiltersType
> = z.nativeEnum(PostV2LogsQueryFiltersType);

/** @internal */
export const PostV2LogsQueryFiltersType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryFiltersType
> = PostV2LogsQueryFiltersType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersType$ {
  /** @deprecated use `PostV2LogsQueryFiltersType$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryFiltersType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersType$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryFiltersType$outboundSchema;
}

/** @internal */
export const FiltersOptions$inboundSchema: z.ZodType<
  FiltersOptions,
  z.ZodTypeDef,
  unknown
> = z.union([z.string(), z.number()]);

/** @internal */
export type FiltersOptions$Outbound = string | number;

/** @internal */
export const FiltersOptions$outboundSchema: z.ZodType<
  FiltersOptions$Outbound,
  z.ZodTypeDef,
  FiltersOptions
> = z.union([z.string(), z.number()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FiltersOptions$ {
  /** @deprecated use `FiltersOptions$inboundSchema` instead. */
  export const inboundSchema = FiltersOptions$inboundSchema;
  /** @deprecated use `FiltersOptions$outboundSchema` instead. */
  export const outboundSchema = FiltersOptions$outboundSchema;
  /** @deprecated use `FiltersOptions$Outbound` instead. */
  export type Outbound = FiltersOptions$Outbound;
}

export function filtersOptionsToJSON(filtersOptions: FiltersOptions): string {
  return JSON.stringify(FiltersOptions$outboundSchema.parse(filtersOptions));
}

export function filtersOptionsFromJSON(
  jsonString: string,
): SafeParseResult<FiltersOptions, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FiltersOptions$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FiltersOptions' from JSON`,
  );
}

/** @internal */
export const FiltersOptionsMap$inboundSchema: z.ZodType<
  FiltersOptionsMap,
  z.ZodTypeDef,
  unknown
> = z.union([z.string(), z.number()]);

/** @internal */
export type FiltersOptionsMap$Outbound = string | number;

/** @internal */
export const FiltersOptionsMap$outboundSchema: z.ZodType<
  FiltersOptionsMap$Outbound,
  z.ZodTypeDef,
  FiltersOptionsMap
> = z.union([z.string(), z.number()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FiltersOptionsMap$ {
  /** @deprecated use `FiltersOptionsMap$inboundSchema` instead. */
  export const inboundSchema = FiltersOptionsMap$inboundSchema;
  /** @deprecated use `FiltersOptionsMap$outboundSchema` instead. */
  export const outboundSchema = FiltersOptionsMap$outboundSchema;
  /** @deprecated use `FiltersOptionsMap$Outbound` instead. */
  export type Outbound = FiltersOptionsMap$Outbound;
}

export function filtersOptionsMapToJSON(
  filtersOptionsMap: FiltersOptionsMap,
): string {
  return JSON.stringify(
    FiltersOptionsMap$outboundSchema.parse(filtersOptionsMap),
  );
}

export function filtersOptionsMapFromJSON(
  jsonString: string,
): SafeParseResult<FiltersOptionsMap, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FiltersOptionsMap$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FiltersOptionsMap' from JSON`,
  );
}

/** @internal */
export const HideOperators5$inboundSchema: z.ZodNativeEnum<
  typeof HideOperators5
> = z.nativeEnum(HideOperators5);

/** @internal */
export const HideOperators5$outboundSchema: z.ZodNativeEnum<
  typeof HideOperators5
> = HideOperators5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HideOperators5$ {
  /** @deprecated use `HideOperators5$inboundSchema` instead. */
  export const inboundSchema = HideOperators5$inboundSchema;
  /** @deprecated use `HideOperators5$outboundSchema` instead. */
  export const outboundSchema = HideOperators5$outboundSchema;
}

/** @internal */
export const HideOperators4$inboundSchema: z.ZodNativeEnum<
  typeof HideOperators4
> = z.nativeEnum(HideOperators4);

/** @internal */
export const HideOperators4$outboundSchema: z.ZodNativeEnum<
  typeof HideOperators4
> = HideOperators4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HideOperators4$ {
  /** @deprecated use `HideOperators4$inboundSchema` instead. */
  export const inboundSchema = HideOperators4$inboundSchema;
  /** @deprecated use `HideOperators4$outboundSchema` instead. */
  export const outboundSchema = HideOperators4$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperators3$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryHideOperators3
> = z.nativeEnum(PostV2LogsQueryHideOperators3);

/** @internal */
export const PostV2LogsQueryHideOperators3$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryHideOperators3
> = PostV2LogsQueryHideOperators3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperators3$ {
  /** @deprecated use `PostV2LogsQueryHideOperators3$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryHideOperators3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperators3$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryHideOperators3$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperators2$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryHideOperators2
> = z.nativeEnum(PostV2LogsQueryHideOperators2);

/** @internal */
export const PostV2LogsQueryHideOperators2$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryHideOperators2
> = PostV2LogsQueryHideOperators2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperators2$ {
  /** @deprecated use `PostV2LogsQueryHideOperators2$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryHideOperators2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperators2$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryHideOperators2$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryHideOperators1$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryHideOperators1
> = z.nativeEnum(PostV2LogsQueryHideOperators1);

/** @internal */
export const PostV2LogsQueryHideOperators1$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryHideOperators1
> = PostV2LogsQueryHideOperators1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryHideOperators1$ {
  /** @deprecated use `PostV2LogsQueryHideOperators1$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryHideOperators1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryHideOperators1$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryHideOperators1$outboundSchema;
}

/** @internal */
export const FiltersHideOperators$inboundSchema: z.ZodType<
  FiltersHideOperators,
  z.ZodTypeDef,
  unknown
> = z.union([
  PostV2LogsQueryHideOperators1$inboundSchema,
  PostV2LogsQueryHideOperators2$inboundSchema,
  PostV2LogsQueryHideOperators3$inboundSchema,
  HideOperators4$inboundSchema,
  HideOperators5$inboundSchema,
]);

/** @internal */
export type FiltersHideOperators$Outbound =
  | string
  | string
  | string
  | string
  | string;

/** @internal */
export const FiltersHideOperators$outboundSchema: z.ZodType<
  FiltersHideOperators$Outbound,
  z.ZodTypeDef,
  FiltersHideOperators
> = z.union([
  PostV2LogsQueryHideOperators1$outboundSchema,
  PostV2LogsQueryHideOperators2$outboundSchema,
  PostV2LogsQueryHideOperators3$outboundSchema,
  HideOperators4$outboundSchema,
  HideOperators5$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FiltersHideOperators$ {
  /** @deprecated use `FiltersHideOperators$inboundSchema` instead. */
  export const inboundSchema = FiltersHideOperators$inboundSchema;
  /** @deprecated use `FiltersHideOperators$outboundSchema` instead. */
  export const outboundSchema = FiltersHideOperators$outboundSchema;
  /** @deprecated use `FiltersHideOperators$Outbound` instead. */
  export type Outbound = FiltersHideOperators$Outbound;
}

export function filtersHideOperatorsToJSON(
  filtersHideOperators: FiltersHideOperators,
): string {
  return JSON.stringify(
    FiltersHideOperators$outboundSchema.parse(filtersHideOperators),
  );
}

export function filtersHideOperatorsFromJSON(
  jsonString: string,
): SafeParseResult<FiltersHideOperators, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FiltersHideOperators$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FiltersHideOperators' from JSON`,
  );
}

/** @internal */
export const Filters2$inboundSchema: z.ZodType<
  Filters2,
  z.ZodTypeDef,
  unknown
> = z.object({
  operator: PostV2LogsQueryFiltersOperator$inboundSchema,
  value: z.nullable(z.array(z.any())),
  type: PostV2LogsQueryFiltersType$inboundSchema,
  options: z.array(z.union([z.string(), z.number()])),
  optionsMap: z.nullable(z.record(z.union([z.string(), z.number()])))
    .optional(),
  imageUrlMap: z.record(z.string()).optional(),
  name: z.string(),
  path: z.string(),
  hideOperators: z.array(
    z.union([
      PostV2LogsQueryHideOperators1$inboundSchema,
      PostV2LogsQueryHideOperators2$inboundSchema,
      PostV2LogsQueryHideOperators3$inboundSchema,
      HideOperators4$inboundSchema,
      HideOperators5$inboundSchema,
    ]),
  ).optional(),
});

/** @internal */
export type Filters2$Outbound = {
  operator: string;
  value: Array<any> | null;
  type: string;
  options: Array<string | number>;
  optionsMap?: { [k: string]: string | number } | null | undefined;
  imageUrlMap?: { [k: string]: string } | undefined;
  name: string;
  path: string;
  hideOperators?: Array<string | string | string | string | string> | undefined;
};

/** @internal */
export const Filters2$outboundSchema: z.ZodType<
  Filters2$Outbound,
  z.ZodTypeDef,
  Filters2
> = z.object({
  operator: PostV2LogsQueryFiltersOperator$outboundSchema,
  value: z.nullable(z.array(z.any())),
  type: PostV2LogsQueryFiltersType$outboundSchema,
  options: z.array(z.union([z.string(), z.number()])),
  optionsMap: z.nullable(z.record(z.union([z.string(), z.number()])))
    .optional(),
  imageUrlMap: z.record(z.string()).optional(),
  name: z.string(),
  path: z.string(),
  hideOperators: z.array(
    z.union([
      PostV2LogsQueryHideOperators1$outboundSchema,
      PostV2LogsQueryHideOperators2$outboundSchema,
      PostV2LogsQueryHideOperators3$outboundSchema,
      HideOperators4$outboundSchema,
      HideOperators5$outboundSchema,
    ]),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Filters2$ {
  /** @deprecated use `Filters2$inboundSchema` instead. */
  export const inboundSchema = Filters2$inboundSchema;
  /** @deprecated use `Filters2$outboundSchema` instead. */
  export const outboundSchema = Filters2$outboundSchema;
  /** @deprecated use `Filters2$Outbound` instead. */
  export type Outbound = Filters2$Outbound;
}

export function filters2ToJSON(filters2: Filters2): string {
  return JSON.stringify(Filters2$outboundSchema.parse(filters2));
}

export function filters2FromJSON(
  jsonString: string,
): SafeParseResult<Filters2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Filters2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Filters2' from JSON`,
  );
}

/** @internal */
export const FiltersOperator$inboundSchema: z.ZodNativeEnum<
  typeof FiltersOperator
> = z.nativeEnum(FiltersOperator);

/** @internal */
export const FiltersOperator$outboundSchema: z.ZodNativeEnum<
  typeof FiltersOperator
> = FiltersOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FiltersOperator$ {
  /** @deprecated use `FiltersOperator$inboundSchema` instead. */
  export const inboundSchema = FiltersOperator$inboundSchema;
  /** @deprecated use `FiltersOperator$outboundSchema` instead. */
  export const outboundSchema = FiltersOperator$outboundSchema;
}

/** @internal */
export const FiltersType$inboundSchema: z.ZodNativeEnum<typeof FiltersType> = z
  .nativeEnum(FiltersType);

/** @internal */
export const FiltersType$outboundSchema: z.ZodNativeEnum<typeof FiltersType> =
  FiltersType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FiltersType$ {
  /** @deprecated use `FiltersType$inboundSchema` instead. */
  export const inboundSchema = FiltersType$inboundSchema;
  /** @deprecated use `FiltersType$outboundSchema` instead. */
  export const outboundSchema = FiltersType$outboundSchema;
}

/** @internal */
export const Options$inboundSchema: z.ZodType<Options, z.ZodTypeDef, unknown> =
  z.union([z.string(), z.number()]);

/** @internal */
export type Options$Outbound = string | number;

/** @internal */
export const Options$outboundSchema: z.ZodType<
  Options$Outbound,
  z.ZodTypeDef,
  Options
> = z.union([z.string(), z.number()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Options$ {
  /** @deprecated use `Options$inboundSchema` instead. */
  export const inboundSchema = Options$inboundSchema;
  /** @deprecated use `Options$outboundSchema` instead. */
  export const outboundSchema = Options$outboundSchema;
  /** @deprecated use `Options$Outbound` instead. */
  export type Outbound = Options$Outbound;
}

export function optionsToJSON(options: Options): string {
  return JSON.stringify(Options$outboundSchema.parse(options));
}

export function optionsFromJSON(
  jsonString: string,
): SafeParseResult<Options, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Options$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Options' from JSON`,
  );
}

/** @internal */
export const OptionsMap$inboundSchema: z.ZodType<
  OptionsMap,
  z.ZodTypeDef,
  unknown
> = z.union([z.string(), z.number()]);

/** @internal */
export type OptionsMap$Outbound = string | number;

/** @internal */
export const OptionsMap$outboundSchema: z.ZodType<
  OptionsMap$Outbound,
  z.ZodTypeDef,
  OptionsMap
> = z.union([z.string(), z.number()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OptionsMap$ {
  /** @deprecated use `OptionsMap$inboundSchema` instead. */
  export const inboundSchema = OptionsMap$inboundSchema;
  /** @deprecated use `OptionsMap$outboundSchema` instead. */
  export const outboundSchema = OptionsMap$outboundSchema;
  /** @deprecated use `OptionsMap$Outbound` instead. */
  export type Outbound = OptionsMap$Outbound;
}

export function optionsMapToJSON(optionsMap: OptionsMap): string {
  return JSON.stringify(OptionsMap$outboundSchema.parse(optionsMap));
}

export function optionsMapFromJSON(
  jsonString: string,
): SafeParseResult<OptionsMap, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OptionsMap$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OptionsMap' from JSON`,
  );
}

/** @internal */
export const Five$inboundSchema: z.ZodNativeEnum<typeof Five> = z.nativeEnum(
  Five,
);

/** @internal */
export const Five$outboundSchema: z.ZodNativeEnum<typeof Five> =
  Five$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Five$ {
  /** @deprecated use `Five$inboundSchema` instead. */
  export const inboundSchema = Five$inboundSchema;
  /** @deprecated use `Five$outboundSchema` instead. */
  export const outboundSchema = Five$outboundSchema;
}

/** @internal */
export const Four$inboundSchema: z.ZodNativeEnum<typeof Four> = z.nativeEnum(
  Four,
);

/** @internal */
export const Four$outboundSchema: z.ZodNativeEnum<typeof Four> =
  Four$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Four$ {
  /** @deprecated use `Four$inboundSchema` instead. */
  export const inboundSchema = Four$inboundSchema;
  /** @deprecated use `Four$outboundSchema` instead. */
  export const outboundSchema = Four$outboundSchema;
}

/** @internal */
export const HideOperators3$inboundSchema: z.ZodNativeEnum<
  typeof HideOperators3
> = z.nativeEnum(HideOperators3);

/** @internal */
export const HideOperators3$outboundSchema: z.ZodNativeEnum<
  typeof HideOperators3
> = HideOperators3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HideOperators3$ {
  /** @deprecated use `HideOperators3$inboundSchema` instead. */
  export const inboundSchema = HideOperators3$inboundSchema;
  /** @deprecated use `HideOperators3$outboundSchema` instead. */
  export const outboundSchema = HideOperators3$outboundSchema;
}

/** @internal */
export const HideOperators2$inboundSchema: z.ZodNativeEnum<
  typeof HideOperators2
> = z.nativeEnum(HideOperators2);

/** @internal */
export const HideOperators2$outboundSchema: z.ZodNativeEnum<
  typeof HideOperators2
> = HideOperators2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HideOperators2$ {
  /** @deprecated use `HideOperators2$inboundSchema` instead. */
  export const inboundSchema = HideOperators2$inboundSchema;
  /** @deprecated use `HideOperators2$outboundSchema` instead. */
  export const outboundSchema = HideOperators2$outboundSchema;
}

/** @internal */
export const HideOperators1$inboundSchema: z.ZodNativeEnum<
  typeof HideOperators1
> = z.nativeEnum(HideOperators1);

/** @internal */
export const HideOperators1$outboundSchema: z.ZodNativeEnum<
  typeof HideOperators1
> = HideOperators1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HideOperators1$ {
  /** @deprecated use `HideOperators1$inboundSchema` instead. */
  export const inboundSchema = HideOperators1$inboundSchema;
  /** @deprecated use `HideOperators1$outboundSchema` instead. */
  export const outboundSchema = HideOperators1$outboundSchema;
}

/** @internal */
export const HideOperators$inboundSchema: z.ZodType<
  HideOperators,
  z.ZodTypeDef,
  unknown
> = z.union([
  HideOperators1$inboundSchema,
  HideOperators2$inboundSchema,
  HideOperators3$inboundSchema,
  Four$inboundSchema,
  Five$inboundSchema,
]);

/** @internal */
export type HideOperators$Outbound = string | string | string | string | string;

/** @internal */
export const HideOperators$outboundSchema: z.ZodType<
  HideOperators$Outbound,
  z.ZodTypeDef,
  HideOperators
> = z.union([
  HideOperators1$outboundSchema,
  HideOperators2$outboundSchema,
  HideOperators3$outboundSchema,
  Four$outboundSchema,
  Five$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HideOperators$ {
  /** @deprecated use `HideOperators$inboundSchema` instead. */
  export const inboundSchema = HideOperators$inboundSchema;
  /** @deprecated use `HideOperators$outboundSchema` instead. */
  export const outboundSchema = HideOperators$outboundSchema;
  /** @deprecated use `HideOperators$Outbound` instead. */
  export type Outbound = HideOperators$Outbound;
}

export function hideOperatorsToJSON(hideOperators: HideOperators): string {
  return JSON.stringify(HideOperators$outboundSchema.parse(hideOperators));
}

export function hideOperatorsFromJSON(
  jsonString: string,
): SafeParseResult<HideOperators, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HideOperators$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HideOperators' from JSON`,
  );
}

/** @internal */
export const Filters1$inboundSchema: z.ZodType<
  Filters1,
  z.ZodTypeDef,
  unknown
> = z.object({
  operator: FiltersOperator$inboundSchema,
  value: z.any().optional(),
  type: FiltersType$inboundSchema,
  options: z.array(z.union([z.string(), z.number()])),
  optionsMap: z.nullable(z.record(z.union([z.string(), z.number()])))
    .optional(),
  imageUrlMap: z.record(z.string()).optional(),
  name: z.string(),
  path: z.string(),
  hideOperators: z.array(
    z.union([
      HideOperators1$inboundSchema,
      HideOperators2$inboundSchema,
      HideOperators3$inboundSchema,
      Four$inboundSchema,
      Five$inboundSchema,
    ]),
  ).optional(),
});

/** @internal */
export type Filters1$Outbound = {
  operator: string;
  value?: any | undefined;
  type: string;
  options: Array<string | number>;
  optionsMap?: { [k: string]: string | number } | null | undefined;
  imageUrlMap?: { [k: string]: string } | undefined;
  name: string;
  path: string;
  hideOperators?: Array<string | string | string | string | string> | undefined;
};

/** @internal */
export const Filters1$outboundSchema: z.ZodType<
  Filters1$Outbound,
  z.ZodTypeDef,
  Filters1
> = z.object({
  operator: FiltersOperator$outboundSchema,
  value: z.any().optional(),
  type: FiltersType$outboundSchema,
  options: z.array(z.union([z.string(), z.number()])),
  optionsMap: z.nullable(z.record(z.union([z.string(), z.number()])))
    .optional(),
  imageUrlMap: z.record(z.string()).optional(),
  name: z.string(),
  path: z.string(),
  hideOperators: z.array(
    z.union([
      HideOperators1$outboundSchema,
      HideOperators2$outboundSchema,
      HideOperators3$outboundSchema,
      Four$outboundSchema,
      Five$outboundSchema,
    ]),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Filters1$ {
  /** @deprecated use `Filters1$inboundSchema` instead. */
  export const inboundSchema = Filters1$inboundSchema;
  /** @deprecated use `Filters1$outboundSchema` instead. */
  export const outboundSchema = Filters1$outboundSchema;
  /** @deprecated use `Filters1$Outbound` instead. */
  export type Outbound = Filters1$Outbound;
}

export function filters1ToJSON(filters1: Filters1): string {
  return JSON.stringify(Filters1$outboundSchema.parse(filters1));
}

export function filters1FromJSON(
  jsonString: string,
): SafeParseResult<Filters1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Filters1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Filters1' from JSON`,
  );
}

/** @internal */
export const Filters$inboundSchema: z.ZodType<Filters, z.ZodTypeDef, unknown> =
  z.union([
    z.lazy(() => Filters3$inboundSchema),
    z.lazy(() => Filters4$inboundSchema),
    z.lazy(() => Filters5$inboundSchema),
    z.lazy(() => Seven$inboundSchema),
    z.lazy(() => Six$inboundSchema),
    z.lazy(() => Filters1$inboundSchema),
    z.lazy(() => Filters2$inboundSchema),
  ]);

/** @internal */
export type Filters$Outbound =
  | Filters3$Outbound
  | Filters4$Outbound
  | Filters5$Outbound
  | Seven$Outbound
  | Six$Outbound
  | Filters1$Outbound
  | Filters2$Outbound;

/** @internal */
export const Filters$outboundSchema: z.ZodType<
  Filters$Outbound,
  z.ZodTypeDef,
  Filters
> = z.union([
  z.lazy(() => Filters3$outboundSchema),
  z.lazy(() => Filters4$outboundSchema),
  z.lazy(() => Filters5$outboundSchema),
  z.lazy(() => Seven$outboundSchema),
  z.lazy(() => Six$outboundSchema),
  z.lazy(() => Filters1$outboundSchema),
  z.lazy(() => Filters2$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Filters$ {
  /** @deprecated use `Filters$inboundSchema` instead. */
  export const inboundSchema = Filters$inboundSchema;
  /** @deprecated use `Filters$outboundSchema` instead. */
  export const outboundSchema = Filters$outboundSchema;
  /** @deprecated use `Filters$Outbound` instead. */
  export type Outbound = Filters$Outbound;
}

export function filtersToJSON(filters: Filters): string {
  return JSON.stringify(Filters$outboundSchema.parse(filters));
}

export function filtersFromJSON(
  jsonString: string,
): SafeParseResult<Filters, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Filters$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Filters' from JSON`,
  );
}

/** @internal */
export const Query$inboundSchema: z.ZodType<Query, z.ZodTypeDef, unknown> = z
  .object({
    operator: Operator$inboundSchema,
    filters: z.array(
      z.union([
        z.lazy(() => Filters3$inboundSchema),
        z.lazy(() => Filters4$inboundSchema),
        z.lazy(() => Filters5$inboundSchema),
        z.lazy(() => Seven$inboundSchema),
        z.lazy(() => Six$inboundSchema),
        z.lazy(() => Filters1$inboundSchema),
        z.lazy(() => Filters2$inboundSchema),
      ]),
    ).optional(),
  });

/** @internal */
export type Query$Outbound = {
  operator: string;
  filters?:
    | Array<
      | Filters3$Outbound
      | Filters4$Outbound
      | Filters5$Outbound
      | Seven$Outbound
      | Six$Outbound
      | Filters1$Outbound
      | Filters2$Outbound
    >
    | undefined;
};

/** @internal */
export const Query$outboundSchema: z.ZodType<
  Query$Outbound,
  z.ZodTypeDef,
  Query
> = z.object({
  operator: Operator$outboundSchema,
  filters: z.array(
    z.union([
      z.lazy(() => Filters3$outboundSchema),
      z.lazy(() => Filters4$outboundSchema),
      z.lazy(() => Filters5$outboundSchema),
      z.lazy(() => Seven$outboundSchema),
      z.lazy(() => Six$outboundSchema),
      z.lazy(() => Filters1$outboundSchema),
      z.lazy(() => Filters2$outboundSchema),
    ]),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Query$ {
  /** @deprecated use `Query$inboundSchema` instead. */
  export const inboundSchema = Query$inboundSchema;
  /** @deprecated use `Query$outboundSchema` instead. */
  export const outboundSchema = Query$outboundSchema;
  /** @deprecated use `Query$Outbound` instead. */
  export type Outbound = Query$Outbound;
}

export function queryToJSON(query: Query): string {
  return JSON.stringify(Query$outboundSchema.parse(query));
}

export function queryFromJSON(
  jsonString: string,
): SafeParseResult<Query, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Query$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Query' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBody4Type$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestRequestBody4Type> = z
    .nativeEnum(PostV2LogsQueryFiltersRequestRequestBody4Type);

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBody4Type$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestRequestBody4Type> =
    PostV2LogsQueryFiltersRequestRequestBody4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersRequestRequestBody4Type$ {
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBody4Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryFiltersRequestRequestBody4Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBody4Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryFiltersRequestRequestBody4Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBody4Operator$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestRequestBody4Operator> = z
    .nativeEnum(PostV2LogsQueryFiltersRequestRequestBody4Operator);

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBody4Operator$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestRequestBody4Operator> =
    PostV2LogsQueryFiltersRequestRequestBody4Operator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersRequestRequestBody4Operator$ {
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBody4Operator$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryFiltersRequestRequestBody4Operator$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBody4Operator$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryFiltersRequestRequestBody4Operator$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryFilters4$inboundSchema: z.ZodType<
  PostV2LogsQueryFilters4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PostV2LogsQueryFiltersRequestRequestBody4Type$inboundSchema,
  operator: PostV2LogsQueryFiltersRequestRequestBody4Operator$inboundSchema,
  values: z.array(z.string()),
  path: z.string(),
});

/** @internal */
export type PostV2LogsQueryFilters4$Outbound = {
  type: string;
  operator: string;
  values: Array<string>;
  path: string;
};

/** @internal */
export const PostV2LogsQueryFilters4$outboundSchema: z.ZodType<
  PostV2LogsQueryFilters4$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryFilters4
> = z.object({
  type: PostV2LogsQueryFiltersRequestRequestBody4Type$outboundSchema,
  operator: PostV2LogsQueryFiltersRequestRequestBody4Operator$outboundSchema,
  values: z.array(z.string()),
  path: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFilters4$ {
  /** @deprecated use `PostV2LogsQueryFilters4$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryFilters4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFilters4$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryFilters4$outboundSchema;
  /** @deprecated use `PostV2LogsQueryFilters4$Outbound` instead. */
  export type Outbound = PostV2LogsQueryFilters4$Outbound;
}

export function postV2LogsQueryFilters4ToJSON(
  postV2LogsQueryFilters4: PostV2LogsQueryFilters4,
): string {
  return JSON.stringify(
    PostV2LogsQueryFilters4$outboundSchema.parse(postV2LogsQueryFilters4),
  );
}

export function postV2LogsQueryFilters4FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryFilters4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryFilters4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryFilters4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBody3Type$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestRequestBody3Type> = z
    .nativeEnum(PostV2LogsQueryFiltersRequestRequestBody3Type);

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBody3Type$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestRequestBody3Type> =
    PostV2LogsQueryFiltersRequestRequestBody3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersRequestRequestBody3Type$ {
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBody3Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryFiltersRequestRequestBody3Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBody3Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryFiltersRequestRequestBody3Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBody3Operator$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestRequestBody3Operator> = z
    .nativeEnum(PostV2LogsQueryFiltersRequestRequestBody3Operator);

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBody3Operator$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestRequestBody3Operator> =
    PostV2LogsQueryFiltersRequestRequestBody3Operator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersRequestRequestBody3Operator$ {
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBody3Operator$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryFiltersRequestRequestBody3Operator$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBody3Operator$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryFiltersRequestRequestBody3Operator$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryFilters3$inboundSchema: z.ZodType<
  PostV2LogsQueryFilters3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PostV2LogsQueryFiltersRequestRequestBody3Type$inboundSchema,
  operator: PostV2LogsQueryFiltersRequestRequestBody3Operator$inboundSchema,
  value: z.string(),
  path: z.string(),
});

/** @internal */
export type PostV2LogsQueryFilters3$Outbound = {
  type: string;
  operator: string;
  value: string;
  path: string;
};

/** @internal */
export const PostV2LogsQueryFilters3$outboundSchema: z.ZodType<
  PostV2LogsQueryFilters3$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryFilters3
> = z.object({
  type: PostV2LogsQueryFiltersRequestRequestBody3Type$outboundSchema,
  operator: PostV2LogsQueryFiltersRequestRequestBody3Operator$outboundSchema,
  value: z.string(),
  path: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFilters3$ {
  /** @deprecated use `PostV2LogsQueryFilters3$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryFilters3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFilters3$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryFilters3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryFilters3$Outbound` instead. */
  export type Outbound = PostV2LogsQueryFilters3$Outbound;
}

export function postV2LogsQueryFilters3ToJSON(
  postV2LogsQueryFilters3: PostV2LogsQueryFilters3,
): string {
  return JSON.stringify(
    PostV2LogsQueryFilters3$outboundSchema.parse(postV2LogsQueryFilters3),
  );
}

export function postV2LogsQueryFilters3FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryFilters3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryFilters3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryFilters3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBody2Type$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestRequestBody2Type> = z
    .nativeEnum(PostV2LogsQueryFiltersRequestRequestBody2Type);

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBody2Type$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestRequestBody2Type> =
    PostV2LogsQueryFiltersRequestRequestBody2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersRequestRequestBody2Type$ {
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBody2Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryFiltersRequestRequestBody2Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBody2Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryFiltersRequestRequestBody2Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryFilters2$inboundSchema: z.ZodType<
  PostV2LogsQueryFilters2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PostV2LogsQueryFiltersRequestRequestBody2Type$inboundSchema,
  value: z.string(),
  searchPaths: z.array(z.string()),
});

/** @internal */
export type PostV2LogsQueryFilters2$Outbound = {
  type: string;
  value: string;
  searchPaths: Array<string>;
};

/** @internal */
export const PostV2LogsQueryFilters2$outboundSchema: z.ZodType<
  PostV2LogsQueryFilters2$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryFilters2
> = z.object({
  type: PostV2LogsQueryFiltersRequestRequestBody2Type$outboundSchema,
  value: z.string(),
  searchPaths: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFilters2$ {
  /** @deprecated use `PostV2LogsQueryFilters2$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryFilters2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFilters2$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryFilters2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryFilters2$Outbound` instead. */
  export type Outbound = PostV2LogsQueryFilters2$Outbound;
}

export function postV2LogsQueryFilters2ToJSON(
  postV2LogsQueryFilters2: PostV2LogsQueryFilters2,
): string {
  return JSON.stringify(
    PostV2LogsQueryFilters2$outboundSchema.parse(postV2LogsQueryFilters2),
  );
}

export function postV2LogsQueryFilters2FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryFilters2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryFilters2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryFilters2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBody1Type$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestRequestBody1Type> = z
    .nativeEnum(PostV2LogsQueryFiltersRequestRequestBody1Type);

/** @internal */
export const PostV2LogsQueryFiltersRequestRequestBody1Type$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryFiltersRequestRequestBody1Type> =
    PostV2LogsQueryFiltersRequestRequestBody1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFiltersRequestRequestBody1Type$ {
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBody1Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryFiltersRequestRequestBody1Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFiltersRequestRequestBody1Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryFiltersRequestRequestBody1Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryFilters1$inboundSchema: z.ZodType<
  PostV2LogsQueryFilters1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PostV2LogsQueryFiltersRequestRequestBody1Type$inboundSchema,
  id: z.string(),
  path: z.string(),
});

/** @internal */
export type PostV2LogsQueryFilters1$Outbound = {
  type: string;
  id: string;
  path: string;
};

/** @internal */
export const PostV2LogsQueryFilters1$outboundSchema: z.ZodType<
  PostV2LogsQueryFilters1$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryFilters1
> = z.object({
  type: PostV2LogsQueryFiltersRequestRequestBody1Type$outboundSchema,
  id: z.string(),
  path: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFilters1$ {
  /** @deprecated use `PostV2LogsQueryFilters1$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryFilters1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFilters1$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryFilters1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryFilters1$Outbound` instead. */
  export type Outbound = PostV2LogsQueryFilters1$Outbound;
}

export function postV2LogsQueryFilters1ToJSON(
  postV2LogsQueryFilters1: PostV2LogsQueryFilters1,
): string {
  return JSON.stringify(
    PostV2LogsQueryFilters1$outboundSchema.parse(postV2LogsQueryFilters1),
  );
}

export function postV2LogsQueryFilters1FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryFilters1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryFilters1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryFilters1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryFilters$inboundSchema: z.ZodType<
  PostV2LogsQueryFilters,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQueryFilters1$inboundSchema),
  z.lazy(() => PostV2LogsQueryFilters2$inboundSchema),
  z.lazy(() => PostV2LogsQueryFilters3$inboundSchema),
  z.lazy(() => PostV2LogsQueryFilters4$inboundSchema),
]);

/** @internal */
export type PostV2LogsQueryFilters$Outbound =
  | PostV2LogsQueryFilters1$Outbound
  | PostV2LogsQueryFilters2$Outbound
  | PostV2LogsQueryFilters3$Outbound
  | PostV2LogsQueryFilters4$Outbound;

/** @internal */
export const PostV2LogsQueryFilters$outboundSchema: z.ZodType<
  PostV2LogsQueryFilters$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryFilters
> = z.union([
  z.lazy(() => PostV2LogsQueryFilters1$outboundSchema),
  z.lazy(() => PostV2LogsQueryFilters2$outboundSchema),
  z.lazy(() => PostV2LogsQueryFilters3$outboundSchema),
  z.lazy(() => PostV2LogsQueryFilters4$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryFilters$ {
  /** @deprecated use `PostV2LogsQueryFilters$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryFilters$inboundSchema;
  /** @deprecated use `PostV2LogsQueryFilters$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryFilters$outboundSchema;
  /** @deprecated use `PostV2LogsQueryFilters$Outbound` instead. */
  export type Outbound = PostV2LogsQueryFilters$Outbound;
}

export function postV2LogsQueryFiltersToJSON(
  postV2LogsQueryFilters: PostV2LogsQueryFilters,
): string {
  return JSON.stringify(
    PostV2LogsQueryFilters$outboundSchema.parse(postV2LogsQueryFilters),
  );
}

export function postV2LogsQueryFiltersFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryFilters, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryFilters$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryFilters' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRequestBody$inboundSchema: z.ZodType<
  PostV2LogsQueryRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  pagination: z.lazy(() => Pagination$inboundSchema).optional(),
  sortingProps: z.array(z.lazy(() => SortingProps$inboundSchema)).optional(),
  query: z.lazy(() => Query$inboundSchema).optional(),
  filters: z.array(
    z.union([
      z.lazy(() => PostV2LogsQueryFilters1$inboundSchema),
      z.lazy(() => PostV2LogsQueryFilters2$inboundSchema),
      z.lazy(() => PostV2LogsQueryFilters3$inboundSchema),
      z.lazy(() => PostV2LogsQueryFilters4$inboundSchema),
    ]),
  ),
  includedFields: z.record(z.string()).optional(),
});

/** @internal */
export type PostV2LogsQueryRequestBody$Outbound = {
  pagination?: Pagination$Outbound | undefined;
  sortingProps?: Array<SortingProps$Outbound> | undefined;
  query?: Query$Outbound | undefined;
  filters: Array<
    | PostV2LogsQueryFilters1$Outbound
    | PostV2LogsQueryFilters2$Outbound
    | PostV2LogsQueryFilters3$Outbound
    | PostV2LogsQueryFilters4$Outbound
  >;
  includedFields?: { [k: string]: string } | undefined;
};

/** @internal */
export const PostV2LogsQueryRequestBody$outboundSchema: z.ZodType<
  PostV2LogsQueryRequestBody$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryRequestBody
> = z.object({
  pagination: z.lazy(() => Pagination$outboundSchema).optional(),
  sortingProps: z.array(z.lazy(() => SortingProps$outboundSchema)).optional(),
  query: z.lazy(() => Query$outboundSchema).optional(),
  filters: z.array(
    z.union([
      z.lazy(() => PostV2LogsQueryFilters1$outboundSchema),
      z.lazy(() => PostV2LogsQueryFilters2$outboundSchema),
      z.lazy(() => PostV2LogsQueryFilters3$outboundSchema),
      z.lazy(() => PostV2LogsQueryFilters4$outboundSchema),
    ]),
  ),
  includedFields: z.record(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRequestBody$ {
  /** @deprecated use `PostV2LogsQueryRequestBody$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryRequestBody$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRequestBody$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryRequestBody$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRequestBody$Outbound` instead. */
  export type Outbound = PostV2LogsQueryRequestBody$Outbound;
}

export function postV2LogsQueryRequestBodyToJSON(
  postV2LogsQueryRequestBody: PostV2LogsQueryRequestBody,
): string {
  return JSON.stringify(
    PostV2LogsQueryRequestBody$outboundSchema.parse(postV2LogsQueryRequestBody),
  );
}

export function postV2LogsQueryRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRequestBody' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseRequestProperties$inboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsResponseRequestProperties,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source: z.string().optional(),
    location: z.string().optional(),
    latitude: z.string().optional(),
    longitude: z.string().optional(),
    response_time: z.number().optional(),
    metadata: z.record(z.any()).optional(),
    status: z.number().optional(),
    context: z.record(z.any()).optional(),
    extra_params: z.record(z.any()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "response_time": "responseTime",
      "extra_params": "extraParams",
    });
  });

/** @internal */
export type PostV2LogsQueryItemsResponseRequestProperties$Outbound = {
  source?: string | undefined;
  location?: string | undefined;
  latitude?: string | undefined;
  longitude?: string | undefined;
  response_time?: number | undefined;
  metadata?: { [k: string]: any } | undefined;
  status?: number | undefined;
  context?: { [k: string]: any } | undefined;
  extra_params?: { [k: string]: any } | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsResponseRequestProperties$outboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsResponseRequestProperties$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryItemsResponseRequestProperties
  > = z.object({
    source: z.string().optional(),
    location: z.string().optional(),
    latitude: z.string().optional(),
    longitude: z.string().optional(),
    responseTime: z.number().optional(),
    metadata: z.record(z.any()).optional(),
    status: z.number().optional(),
    context: z.record(z.any()).optional(),
    extraParams: z.record(z.any()).optional(),
  }).transform((v) => {
    return remap$(v, {
      responseTime: "response_time",
      extraParams: "extra_params",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseRequestProperties$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseRequestProperties$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseRequestProperties$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseRequestProperties$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseRequestProperties$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseRequestProperties$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseRequestProperties$Outbound;
}

export function postV2LogsQueryItemsResponseRequestPropertiesToJSON(
  postV2LogsQueryItemsResponseRequestProperties:
    PostV2LogsQueryItemsResponseRequestProperties,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseRequestProperties$outboundSchema.parse(
      postV2LogsQueryItemsResponseRequestProperties,
    ),
  );
}

export function postV2LogsQueryItemsResponseRequestPropertiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryItemsResponseRequestProperties,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponseRequestProperties$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryItemsResponseRequestProperties' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200RequestProperties$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200RequestProperties,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source: z.string().optional(),
    location: z.string().optional(),
    latitude: z.string().optional(),
    longitude: z.string().optional(),
    response_time: z.number().optional(),
    metadata: z.record(z.any()).optional(),
    status: z.number().optional(),
    context: z.record(z.any()).optional(),
    extra_params: z.record(z.any()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "response_time": "responseTime",
      "extra_params": "extraParams",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200RequestProperties$Outbound = {
  source?: string | undefined;
  location?: string | undefined;
  latitude?: string | undefined;
  longitude?: string | undefined;
  response_time?: number | undefined;
  metadata?: { [k: string]: any } | undefined;
  status?: number | undefined;
  context?: { [k: string]: any } | undefined;
  extra_params?: { [k: string]: any } | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200RequestProperties$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200RequestProperties$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200RequestProperties
  > = z.object({
    source: z.string().optional(),
    location: z.string().optional(),
    latitude: z.string().optional(),
    longitude: z.string().optional(),
    responseTime: z.number().optional(),
    metadata: z.record(z.any()).optional(),
    status: z.number().optional(),
    context: z.record(z.any()).optional(),
    extraParams: z.record(z.any()).optional(),
  }).transform((v) => {
    return remap$(v, {
      responseTime: "response_time",
      extraParams: "extra_params",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200RequestProperties$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200RequestProperties$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200RequestProperties$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200RequestProperties$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200RequestProperties$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200RequestProperties$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200RequestProperties$Outbound;
}

export function postV2LogsQueryEvalsResponse200RequestPropertiesToJSON(
  postV2LogsQueryEvalsResponse200RequestProperties:
    PostV2LogsQueryEvalsResponse200RequestProperties,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200RequestProperties$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200RequestProperties,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200RequestPropertiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200RequestProperties,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200RequestProperties$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200RequestProperties' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ProductType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200ProductType> = z
    .nativeEnum(PostV2LogsQueryEvalsResponse200ProductType);

/** @internal */
export const PostV2LogsQueryEvalsResponse200ProductType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200ProductType> =
    PostV2LogsQueryEvalsResponse200ProductType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ProductType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ProductType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ProductType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ProductType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ProductType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunRelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunRelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.lazy(() =>
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1$inboundSchema
  );

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunRelatedEntities$Outbound =
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunRelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunRelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunRelatedEntities
  > = z.lazy(() =>
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1$outboundSchema
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunRelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunRelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunRelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunRelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunRelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunRelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunRelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunRelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunRelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunRelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunRelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunRelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunRelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunRelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunRelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunRelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Type$inboundSchema,
    values: z.array(z.string()),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Status$inboundSchema,
    timestamp: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44$inboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44$Outbound =
  {
    type: string;
    values: Array<string>;
    id: string;
    status: string;
    timestamp: string;
    related_entities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44$Outbound
    >;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Type$outboundSchema,
    values: z.array(z.string()),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4Status$outboundSchema,
    timestamp: z.date().transform(v => v.toISOString()),
    relatedEntities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals41$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals42$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals43$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals44$outboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunStatus
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunStatus,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunStatus
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunStatus$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunStatus$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunStatus$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals34Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals34Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals34Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals34Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals34Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals34Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals34Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals34Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals34Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals34Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals34Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals34Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals34Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals33Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals33Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals33Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals33Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals33Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals33Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals33Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals33Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals33Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals33Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals33Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals33Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals33Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals32Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals32Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals32Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals32Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals32Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals32Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals32Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals32Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals32Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals32Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals32Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals32Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals32Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType$inboundSchema,
    value: z.boolean(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunStatus$inboundSchema,
    timestamp: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4$inboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43$Outbound =
  {
    type: string;
    value: boolean;
    id: string;
    status: string;
    timestamp: string;
    related_entities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4$Outbound
    >;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunType$outboundSchema,
    value: z.boolean(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunStatus$outboundSchema,
    timestamp: z.date().transform(v => v.toISOString()),
    relatedEntities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals31$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals3$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals4$outboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals24Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals24Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals24Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals24Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals24Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals24Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals24Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals24Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals24Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals24Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals24Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals24Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals24Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals23Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals23Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals23Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals23Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals23Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals23Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals23Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals23Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals23Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals23Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals23Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals23Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals23Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals22Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals22Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals22Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals22Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals22Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals22Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals22Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals22Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals22Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals22Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals22Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals22Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals22Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals2Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Type$inboundSchema,
    value: z.number(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Status$inboundSchema,
    timestamp: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4$inboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42$Outbound =
  {
    type: string;
    value: number;
    id: string;
    status: string;
    timestamp: string;
    related_entities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4$Outbound
    >;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Type$outboundSchema,
    value: z.number(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Evals7Status$outboundSchema,
    timestamp: z.date().transform(v => v.toISOString()),
    relatedEntities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun2$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun3$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun4$outboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsType
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsType,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsType
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsStatus
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsStatus,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsStatus
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsStatus$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsStatus$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsStatus$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals1Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvalsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvalsType
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvalsType,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvalsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvalsType
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvalsType$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvalsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvalsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvalsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvalsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvalsType$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvalsType$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsRelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsRelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsRelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsRelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsRelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsRelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsRelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsRelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsRelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsRelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsRelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsRelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsRelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsRelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsRelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsRelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsRelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsRelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsRelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsRelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsRelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsRelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsType$inboundSchema,
    value: z.string(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsStatus$inboundSchema,
    timestamp: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14$inboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41$Outbound =
  {
    type: string;
    value: string;
    id: string;
    status: string;
    timestamp: string;
    related_entities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14$Outbound
    >;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsType$outboundSchema,
    value: z.string(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4EvalsStatus$outboundSchema,
    timestamp: z.date().transform(v => v.toISOString()),
    relatedEntities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals11$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals12$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals13$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunEvals14$outboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200Evals$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Evals,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41$inboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42$inboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43$inboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44$inboundSchema
  ),
]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200Evals$Outbound =
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41$Outbound
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42$Outbound
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43$Outbound
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200Evals$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Evals$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse200Evals
> = z.union([
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41$outboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42$outboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43$outboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44$outboundSchema
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200Evals$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Evals$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200Evals$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Evals$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200Evals$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Evals$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse200Evals$Outbound;
}

export function postV2LogsQueryEvalsResponse200EvalsToJSON(
  postV2LogsQueryEvalsResponse200Evals: PostV2LogsQueryEvalsResponse200Evals,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200Evals$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200Evals,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200EvalsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse200Evals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200Evals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200Evals' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7Role$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7Role
  > = z.nativeEnum(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7Role,
  );

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7Role$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7Role
  > =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7Role$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7Role$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7Role$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7Role$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7Role$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7Role$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3$inboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7Role$inboundSchema,
    url: z.string(),
  });

/** @internal */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3$Outbound =
  {
    role: string;
    url: string;
  };

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3$outboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7Role$outboundSchema,
    url: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3$Outbound;
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3ToJSON(
  postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3$outboundSchema
      .parse(
        postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3,
      ),
  );
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4EvalsRole$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4EvalsRole
  > = z.nativeEnum(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4EvalsRole,
  );

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4EvalsRole$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4EvalsRole
  > =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4EvalsRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4EvalsRole$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4EvalsRole$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4EvalsRole$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4EvalsRole$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4EvalsRole$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4EvalsRole$inboundSchema,
    content: z.nullable(z.string()),
  });

/** @internal */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2$Outbound =
  {
    role: string;
    content: string | null;
  };

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4EvalsRole$outboundSchema,
    content: z.nullable(z.string()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2$Outbound;
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2ToJSON(
  postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2$outboundSchema
      .parse(
        postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2,
      ),
  );
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRole$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRole
  > = z.nativeEnum(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRole,
  );

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRole$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRole
  > =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRole$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRole$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRole$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRole$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRole$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsType
  > = z.nativeEnum(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsType,
  );

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsType
  > =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsType$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction$inboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/** @internal */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction$Outbound =
  {
    name: string;
    arguments: string;
  };

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction$outboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction$Outbound;
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunctionToJSON(
  postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction$outboundSchema
      .parse(
        postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction,
      ),
  );
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunctionFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls$inboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    index: z.number().optional(),
    type:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsType$inboundSchema,
    function: z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction$inboundSchema
    ),
  });

/** @internal */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls$Outbound =
  {
    id?: string | undefined;
    index?: number | undefined;
    type: string;
    function:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction$Outbound;
  };

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls$outboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls
  > = z.object({
    id: z.string().optional(),
    index: z.number().optional(),
    type:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsType$outboundSchema,
    function: z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsFunction$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls$Outbound;
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCallsToJSON(
  postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls$outboundSchema
      .parse(
        postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls,
      ),
  );
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCallsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRole$inboundSchema,
    content: z.nullable(z.string()).optional(),
    tool_calls: z.array(
      z.lazy(() =>
        PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls$inboundSchema
      ),
    ),
  }).transform((v) => {
    return remap$(v, {
      "tool_calls": "toolCalls",
    });
  });

/** @internal */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1$Outbound =
  {
    role: string;
    content?: string | null | undefined;
    tool_calls: Array<
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls$Outbound
    >;
  };

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRunRole$outboundSchema,
    content: z.nullable(z.string()).optional(),
    toolCalls: z.array(
      z.lazy(() =>
        PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsToolCalls$outboundSchema
      ),
    ),
  }).transform((v) => {
    return remap$(v, {
      toolCalls: "tool_calls",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1$Outbound;
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToJSON(
  postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1$outboundSchema
      .parse(
        postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1,
      ),
  );
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200Message$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Message,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() =>
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2$inboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3$inboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1$inboundSchema
  ),
]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200Message$Outbound =
  | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2$Outbound
  | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3$Outbound
  | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200Message$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Message$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse200Message
> = z.union([
  z.lazy(() =>
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2$outboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3$outboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1$outboundSchema
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200Message$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Message$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200Message$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Message$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200Message$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Message$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse200Message$Outbound;
}

export function postV2LogsQueryEvalsResponse200MessageToJSON(
  postV2LogsQueryEvalsResponse200Message:
    PostV2LogsQueryEvalsResponse200Message,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200Message$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200Message,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200MessageFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse200Message, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200Message$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200Message' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200Choices$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Choices,
  z.ZodTypeDef,
  unknown
> = z.object({
  index: z.number(),
  message: z.union([
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1$inboundSchema
    ),
  ]).optional(),
  finish_reason: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "finish_reason": "finishReason",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponse200Choices$Outbound = {
  index: number;
  message?:
    | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2$Outbound
    | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3$Outbound
    | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1$Outbound
    | undefined;
  finish_reason?: string | null | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200Choices$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Choices$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse200Choices
> = z.object({
  index: z.number(),
  message: z.union([
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1$outboundSchema
    ),
  ]).optional(),
  finishReason: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    finishReason: "finish_reason",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200Choices$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Choices$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200Choices$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Choices$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200Choices$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Choices$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse200Choices$Outbound;
}

export function postV2LogsQueryEvalsResponse200ChoicesToJSON(
  postV2LogsQueryEvalsResponse200Choices:
    PostV2LogsQueryEvalsResponse200Choices,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200Choices$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200Choices,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ChoicesFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse200Choices, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200Choices$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200Choices' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200Action$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200Action> = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200Action,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200Action$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200Action> =
    PostV2LogsQueryEvalsResponse200Action$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200Action$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Action$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200Action$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Action$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200Action$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ModelType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200ModelType> = z
    .nativeEnum(PostV2LogsQueryEvalsResponse200ModelType);

/** @internal */
export const PostV2LogsQueryEvalsResponse200ModelType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200ModelType> =
    PostV2LogsQueryEvalsResponse200ModelType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ModelType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ModelType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ModelType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ModelType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ModelType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONFormat$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200ApplicationJSONFormat> =
    z.nativeEnum(PostV2LogsQueryEvalsResponse200ApplicationJSONFormat);

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONFormat$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200ApplicationJSONFormat> =
    PostV2LogsQueryEvalsResponse200ApplicationJSONFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONFormat$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONFormat$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONFormat$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200Quality$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200Quality> = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200Quality,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200Quality$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200Quality> =
    PostV2LogsQueryEvalsResponse200Quality$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200Quality$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Quality$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200Quality$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Quality$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200Quality$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4EvalsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4EvalsType
  > = z.nativeEnum(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4EvalsType,
  );

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4EvalsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4EvalsType
  > =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4EvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4EvalsType$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4EvalsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4EvalsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4EvalsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4EvalsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42$inboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4EvalsType$inboundSchema,
  });

/** @internal */
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42$Outbound =
  {
    type: string;
  };

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4EvalsType$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42$Outbound;
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42ToJSON(
  postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42$outboundSchema
      .parse(
        postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42,
      ),
  );
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4Type
  > = z.nativeEnum(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4Type,
  );

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4Type
  > =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4Type$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema$inboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/** @internal */
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema$Outbound =
  {
    name: string;
    strict: boolean;
    schema: { [k: string]: any };
  };

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema$Outbound;
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchemaToJSON(
  postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema$outboundSchema
      .parse(
        postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema,
      ),
  );
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchemaFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41$inboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4Type$inboundSchema,
    json_schema: z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "json_schema": "jsonSchema",
    });
  });

/** @internal */
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41$Outbound =
  {
    type: string;
    json_schema:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema$Outbound;
  };

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4Type$outboundSchema,
    jsonSchema: z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems4JSONSchema$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      jsonSchema: "json_schema",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41$Outbound;
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41ToJSON(
  postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41$outboundSchema
      .parse(
        postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41,
      ),
  );
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ResponseFormat$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ResponseFormat,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ResponseFormat$Outbound =
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42$Outbound
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ResponseFormat$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ResponseFormat$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ResponseFormat
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ResponseFormat$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ResponseFormat$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ResponseFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ResponseFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ResponseFormat$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ResponseFormat$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse200ResponseFormat$Outbound;
}

export function postV2LogsQueryEvalsResponse200ResponseFormatToJSON(
  postV2LogsQueryEvalsResponse200ResponseFormat:
    PostV2LogsQueryEvalsResponse200ResponseFormat,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ResponseFormat$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ResponseFormat,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ResponseFormatFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ResponseFormat,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ResponseFormat$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ResponseFormat' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200PhotoRealVersion$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200PhotoRealVersion> = z
    .nativeEnum(PostV2LogsQueryEvalsResponse200PhotoRealVersion);

/** @internal */
export const PostV2LogsQueryEvalsResponse200PhotoRealVersion$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200PhotoRealVersion> =
    PostV2LogsQueryEvalsResponse200PhotoRealVersion$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200PhotoRealVersion$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200PhotoRealVersion$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200PhotoRealVersion$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200PhotoRealVersion$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200PhotoRealVersion$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200EncodingFormat$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200EncodingFormat> = z
    .nativeEnum(PostV2LogsQueryEvalsResponse200EncodingFormat);

/** @internal */
export const PostV2LogsQueryEvalsResponse200EncodingFormat$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200EncodingFormat> =
    PostV2LogsQueryEvalsResponse200EncodingFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200EncodingFormat$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200EncodingFormat$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200EncodingFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200EncodingFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200EncodingFormat$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ModelParameters$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ModelParameters,
    z.ZodTypeDef,
    unknown
  > = z.object({
    temperature: z.number().optional(),
    maxTokens: z.number().optional(),
    topK: z.number().optional(),
    topP: z.number().optional(),
    frequencyPenalty: z.number().optional(),
    presencePenalty: z.number().optional(),
    numImages: z.number().optional(),
    seed: z.number().optional(),
    format: PostV2LogsQueryEvalsResponse200ApplicationJSONFormat$inboundSchema
      .optional(),
    dimensions: z.string().optional(),
    quality: PostV2LogsQueryEvalsResponse200Quality$inboundSchema.optional(),
    style: z.string().optional(),
    responseFormat: z.nullable(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41$inboundSchema
        ),
      ]),
    ).optional(),
    photoRealVersion:
      PostV2LogsQueryEvalsResponse200PhotoRealVersion$inboundSchema.optional(),
    encoding_format: PostV2LogsQueryEvalsResponse200EncodingFormat$inboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "encoding_format": "encodingFormat",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ModelParameters$Outbound = {
  temperature?: number | undefined;
  maxTokens?: number | undefined;
  topK?: number | undefined;
  topP?: number | undefined;
  frequencyPenalty?: number | undefined;
  presencePenalty?: number | undefined;
  numImages?: number | undefined;
  seed?: number | undefined;
  format?: string | undefined;
  dimensions?: string | undefined;
  quality?: string | undefined;
  style?: string | undefined;
  responseFormat?:
    | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42$Outbound
    | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41$Outbound
    | null
    | undefined;
  photoRealVersion?: string | undefined;
  encoding_format?: string | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200ModelParameters$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ModelParameters$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ModelParameters
  > = z.object({
    temperature: z.number().optional(),
    maxTokens: z.number().optional(),
    topK: z.number().optional(),
    topP: z.number().optional(),
    frequencyPenalty: z.number().optional(),
    presencePenalty: z.number().optional(),
    numImages: z.number().optional(),
    seed: z.number().optional(),
    format: PostV2LogsQueryEvalsResponse200ApplicationJSONFormat$outboundSchema
      .optional(),
    dimensions: z.string().optional(),
    quality: PostV2LogsQueryEvalsResponse200Quality$outboundSchema.optional(),
    style: z.string().optional(),
    responseFormat: z.nullable(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems42$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems41$outboundSchema
        ),
      ]),
    ).optional(),
    photoRealVersion:
      PostV2LogsQueryEvalsResponse200PhotoRealVersion$outboundSchema.optional(),
    encodingFormat: PostV2LogsQueryEvalsResponse200EncodingFormat$outboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      encodingFormat: "encoding_format",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ModelParameters$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ModelParameters$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ModelParameters$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ModelParameters$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ModelParameters$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ModelParameters$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ModelParameters$Outbound;
}

export function postV2LogsQueryEvalsResponse200ModelParametersToJSON(
  postV2LogsQueryEvalsResponse200ModelParameters:
    PostV2LogsQueryEvalsResponse200ModelParameters,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ModelParameters$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ModelParameters,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ModelParametersFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ModelParameters,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ModelParameters$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ModelParameters' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200Provider$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200Provider> = z
    .nativeEnum(PostV2LogsQueryEvalsResponse200Provider);

/** @internal */
export const PostV2LogsQueryEvalsResponse200Provider$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200Provider> =
    PostV2LogsQueryEvalsResponse200Provider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200Provider$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Provider$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200Provider$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Provider$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200Provider$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200Role$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsResponse200Role
> = z.nativeEnum(PostV2LogsQueryEvalsResponse200Role);

/** @internal */
export const PostV2LogsQueryEvalsResponse200Role$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200Role> =
    PostV2LogsQueryEvalsResponse200Role$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200Role$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Role$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200Role$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Role$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200Role$outboundSchema;
}

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4EvalsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4EvalsType
  > = z.nativeEnum(
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4EvalsType,
  );

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4EvalsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4EvalsType
  > =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4EvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4EvalsType$ {
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4EvalsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4EvalsType$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4EvalsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4EvalsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl$inboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    url: z.string(),
    detail: z.string().optional(),
  });

/** @internal */
export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl$Outbound =
  {
    id?: string | undefined;
    url: string;
    detail?: string | undefined;
  };

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl$outboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl$Outbound,
    z.ZodTypeDef,
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl
  > = z.object({
    id: z.string().optional(),
    url: z.string(),
    detail: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl$ {
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl$outboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl$Outbound` instead. */
  export type Outbound =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl$Outbound;
}

export function postV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrlToJSON(
  postV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl:
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl,
): string {
  return JSON.stringify(
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl$outboundSchema
      .parse(
        postV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl,
      ),
  );
}

export function postV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrlFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2$inboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4EvalsType$inboundSchema,
    image_url: z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "image_url": "imageUrl",
    });
  });

/** @internal */
export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2$Outbound =
  {
    type: string;
    image_url:
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl$Outbound;
  };

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2$outboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2
  > = z.object({
    type:
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4EvalsType$outboundSchema,
    imageUrl: z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsImageUrl$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      imageUrl: "image_url",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2$ {
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2$outboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2$Outbound;
}

export function postV2LogsQuery2Response200ApplicationJSONResponseBodyItems2ToJSON(
  postV2LogsQuery2Response200ApplicationJSONResponseBodyItems2:
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2,
): string {
  return JSON.stringify(
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2$outboundSchema
      .parse(postV2LogsQuery2Response200ApplicationJSONResponseBodyItems2),
  );
}

export function postV2LogsQuery2Response200ApplicationJSONResponseBodyItems2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4Type
  > = z.nativeEnum(
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4Type,
  );

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4Type
  > =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4Type$ {
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4Type$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1$inboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4Type$inboundSchema,
    text: z.string(),
  });

/** @internal */
export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1$Outbound =
  {
    type: string;
    text: string;
  };

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1$outboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1
  > = z.object({
    type:
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems4Type$outboundSchema,
    text: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1$ {
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1$outboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1$Outbound;
}

export function postV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ToJSON(
  postV2LogsQuery2Response200ApplicationJSONResponseBodyItems1:
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1,
): string {
  return JSON.stringify(
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1$outboundSchema
      .parse(postV2LogsQuery2Response200ApplicationJSONResponseBodyItems1),
  );
}

export function postV2LogsQuery2Response200ApplicationJSONResponseBodyItems1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems2,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems2$Outbound =
  | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1$Outbound
  | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2$Outbound;

/** @internal */
export const PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems2
  > = z.union([
    z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems2$ {
  /** @deprecated use `PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems2$Outbound;
}

export function postV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems2ToJSON(
  postV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems2:
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems2,
): string {
  return JSON.stringify(
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems2$outboundSchema
      .parse(
        postV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems2,
      ),
  );
}

export function postV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200Content$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Content,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2$inboundSchema
    ),
  ])),
]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200Content$Outbound =
  | string
  | Array<
    | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1$Outbound
    | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2$Outbound
  >;

/** @internal */
export const PostV2LogsQueryEvalsResponse200Content$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Content$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse200Content
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2$outboundSchema
    ),
  ])),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200Content$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Content$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200Content$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Content$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200Content$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Content$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse200Content$Outbound;
}

export function postV2LogsQueryEvalsResponse200ContentToJSON(
  postV2LogsQueryEvalsResponse200Content:
    PostV2LogsQueryEvalsResponse200Content,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200Content$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200Content,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ContentFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse200Content, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200Content$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200Content' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataType
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataType,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataType
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction$Outbound =
  {
    name: string;
    arguments: string;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunctionToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunctionFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ToolCalls$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200ToolCalls,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataType$inboundSchema,
  function: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction$inboundSchema
  ),
});

/** @internal */
export type PostV2LogsQueryEvalsResponse200ToolCalls$Outbound = {
  id?: string | undefined;
  index?: number | undefined;
  type: string;
  function:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction$Outbound;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200ToolCalls$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200ToolCalls$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse200ToolCalls
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataType$outboundSchema,
  function: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsFunction$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ToolCalls$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ToolCalls$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ToolCalls$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ToolCalls$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ToolCalls$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ToolCalls$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse200ToolCalls$Outbound;
}

export function postV2LogsQueryEvalsResponse200ToolCallsToJSON(
  postV2LogsQueryEvalsResponse200ToolCalls:
    PostV2LogsQueryEvalsResponse200ToolCalls,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ToolCalls$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ToolCalls,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ToolCallsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ToolCalls,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ToolCalls$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ToolCalls' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200Messages$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Messages,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: PostV2LogsQueryEvalsResponse200Role$inboundSchema,
  content: z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() =>
        PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2$inboundSchema
      ),
    ])),
  ]),
  tool_calls: z.array(
    z.lazy(() => PostV2LogsQueryEvalsResponse200ToolCalls$inboundSchema),
  ).optional(),
  id: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "tool_calls": "toolCalls",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponse200Messages$Outbound = {
  role: string;
  content:
    | string
    | Array<
      | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1$Outbound
      | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2$Outbound
    >;
  tool_calls?:
    | Array<PostV2LogsQueryEvalsResponse200ToolCalls$Outbound>
    | undefined;
  id?: string | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200Messages$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Messages$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse200Messages
> = z.object({
  role: PostV2LogsQueryEvalsResponse200Role$outboundSchema,
  content: z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() =>
        PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2$outboundSchema
      ),
    ])),
  ]),
  toolCalls: z.array(
    z.lazy(() => PostV2LogsQueryEvalsResponse200ToolCalls$outboundSchema),
  ).optional(),
  id: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    toolCalls: "tool_calls",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200Messages$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Messages$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200Messages$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Messages$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200Messages$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Messages$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse200Messages$Outbound;
}

export function postV2LogsQueryEvalsResponse200MessagesToJSON(
  postV2LogsQueryEvalsResponse200Messages:
    PostV2LogsQueryEvalsResponse200Messages,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200Messages$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200Messages,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200MessagesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200Messages,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200Messages$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200Messages' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200PromptConfig$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200PromptConfig,
    z.ZodTypeDef,
    unknown
  > = z.object({
    stream: z.boolean(),
    model: z.string(),
    model_db_id: z.string(),
    model_type: PostV2LogsQueryEvalsResponse200ModelType$inboundSchema,
    model_parameters: z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ModelParameters$inboundSchema
    ),
    provider: PostV2LogsQueryEvalsResponse200Provider$inboundSchema,
    messages: z.array(
      z.lazy(() => PostV2LogsQueryEvalsResponse200Messages$inboundSchema),
    ),
    integration_id: z.nullable(z.string()).optional(),
    version: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      "model_db_id": "modelDbId",
      "model_type": "modelType",
      "model_parameters": "modelParameters",
      "integration_id": "integrationId",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200PromptConfig$Outbound = {
  stream: boolean;
  model: string;
  model_db_id: string;
  model_type: string;
  model_parameters: PostV2LogsQueryEvalsResponse200ModelParameters$Outbound;
  provider: string;
  messages: Array<PostV2LogsQueryEvalsResponse200Messages$Outbound>;
  integration_id?: string | null | undefined;
  version?: string | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200PromptConfig$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200PromptConfig$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200PromptConfig
  > = z.object({
    stream: z.boolean(),
    model: z.string(),
    modelDbId: z.string(),
    modelType: PostV2LogsQueryEvalsResponse200ModelType$outboundSchema,
    modelParameters: z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ModelParameters$outboundSchema
    ),
    provider: PostV2LogsQueryEvalsResponse200Provider$outboundSchema,
    messages: z.array(
      z.lazy(() => PostV2LogsQueryEvalsResponse200Messages$outboundSchema),
    ),
    integrationId: z.nullable(z.string()).optional(),
    version: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      modelDbId: "model_db_id",
      modelType: "model_type",
      modelParameters: "model_parameters",
      integrationId: "integration_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200PromptConfig$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200PromptConfig$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200PromptConfig$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200PromptConfig$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200PromptConfig$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200PromptConfig$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse200PromptConfig$Outbound;
}

export function postV2LogsQueryEvalsResponse200PromptConfigToJSON(
  postV2LogsQueryEvalsResponse200PromptConfig:
    PostV2LogsQueryEvalsResponse200PromptConfig,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200PromptConfig$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200PromptConfig,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200PromptConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200PromptConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200PromptConfig$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200PromptConfig' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200Variables$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Variables,
  z.ZodTypeDef,
  unknown
> = z.object({
  key: z.string(),
  value: z.any().optional(),
  is_pii: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    "is_pii": "isPii",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponse200Variables$Outbound = {
  key: string;
  value?: any | undefined;
  is_pii: boolean;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200Variables$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Variables$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse200Variables
> = z.object({
  key: z.string(),
  value: z.any().optional(),
  isPii: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    isPii: "is_pii",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200Variables$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Variables$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200Variables$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Variables$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200Variables$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Variables$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse200Variables$Outbound;
}

export function postV2LogsQueryEvalsResponse200VariablesToJSON(
  postV2LogsQueryEvalsResponse200Variables:
    PostV2LogsQueryEvalsResponse200Variables,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200Variables$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200Variables,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200VariablesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200Variables,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200Variables$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200Variables' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200Performance$inboundSchema:
  z.ZodType<PostV2LogsQueryEvalsResponse200Performance, z.ZodTypeDef, unknown> =
    z.object({
      latency: z.number(),
      first_time_to_token: z.nullable(z.number()).optional(),
      tokens_per_second: z.nullable(z.number()).optional(),
    }).transform((v) => {
      return remap$(v, {
        "first_time_to_token": "firstTimeToToken",
        "tokens_per_second": "tokensPerSecond",
      });
    });

/** @internal */
export type PostV2LogsQueryEvalsResponse200Performance$Outbound = {
  latency: number;
  first_time_to_token?: number | null | undefined;
  tokens_per_second?: number | null | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200Performance$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200Performance$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200Performance
  > = z.object({
    latency: z.number(),
    firstTimeToToken: z.nullable(z.number()).optional(),
    tokensPerSecond: z.nullable(z.number()).optional(),
  }).transform((v) => {
    return remap$(v, {
      firstTimeToToken: "first_time_to_token",
      tokensPerSecond: "tokens_per_second",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200Performance$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Performance$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200Performance$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Performance$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200Performance$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Performance$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse200Performance$Outbound;
}

export function postV2LogsQueryEvalsResponse200PerformanceToJSON(
  postV2LogsQueryEvalsResponse200Performance:
    PostV2LogsQueryEvalsResponse200Performance,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200Performance$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200Performance,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200PerformanceFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200Performance,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200Performance$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200Performance' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200PromptTokensDetails$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200PromptTokensDetails,
    z.ZodTypeDef,
    unknown
  > = z.object({
    cached_tokens: z.number().optional(),
  }).transform((v) => {
    return remap$(v, {
      "cached_tokens": "cachedTokens",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200PromptTokensDetails$Outbound = {
  cached_tokens?: number | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200PromptTokensDetails$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200PromptTokensDetails$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200PromptTokensDetails
  > = z.object({
    cachedTokens: z.number().optional(),
  }).transform((v) => {
    return remap$(v, {
      cachedTokens: "cached_tokens",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200PromptTokensDetails$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200PromptTokensDetails$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200PromptTokensDetails$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200PromptTokensDetails$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200PromptTokensDetails$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200PromptTokensDetails$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200PromptTokensDetails$Outbound;
}

export function postV2LogsQueryEvalsResponse200PromptTokensDetailsToJSON(
  postV2LogsQueryEvalsResponse200PromptTokensDetails:
    PostV2LogsQueryEvalsResponse200PromptTokensDetails,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200PromptTokensDetails$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200PromptTokensDetails,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200PromptTokensDetailsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200PromptTokensDetails,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200PromptTokensDetails$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200PromptTokensDetails' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200CompletionTokensDetails$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200CompletionTokensDetails,
    z.ZodTypeDef,
    unknown
  > = z.object({
    reasoning_tokens: z.number().optional(),
  }).transform((v) => {
    return remap$(v, {
      "reasoning_tokens": "reasoningTokens",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200CompletionTokensDetails$Outbound = {
  reasoning_tokens?: number | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200CompletionTokensDetails$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200CompletionTokensDetails$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200CompletionTokensDetails
  > = z.object({
    reasoningTokens: z.number().optional(),
  }).transform((v) => {
    return remap$(v, {
      reasoningTokens: "reasoning_tokens",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200CompletionTokensDetails$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200CompletionTokensDetails$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200CompletionTokensDetails$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200CompletionTokensDetails$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200CompletionTokensDetails$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200CompletionTokensDetails$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200CompletionTokensDetails$Outbound;
}

export function postV2LogsQueryEvalsResponse200CompletionTokensDetailsToJSON(
  postV2LogsQueryEvalsResponse200CompletionTokensDetails:
    PostV2LogsQueryEvalsResponse200CompletionTokensDetails,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200CompletionTokensDetails$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200CompletionTokensDetails,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200CompletionTokensDetailsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200CompletionTokensDetails,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200CompletionTokensDetails$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200CompletionTokensDetails' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200Usage$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Usage,
  z.ZodTypeDef,
  unknown
> = z.object({
  total_tokens: z.number().optional(),
  prompt_tokens: z.number().optional(),
  completion_tokens: z.number().optional(),
  prompt_tokens_details: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200PromptTokensDetails$inboundSchema
  ).optional(),
  completion_tokens_details: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200CompletionTokensDetails$inboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "total_tokens": "totalTokens",
    "prompt_tokens": "promptTokens",
    "completion_tokens": "completionTokens",
    "prompt_tokens_details": "promptTokensDetails",
    "completion_tokens_details": "completionTokensDetails",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponse200Usage$Outbound = {
  total_tokens?: number | undefined;
  prompt_tokens?: number | undefined;
  completion_tokens?: number | undefined;
  prompt_tokens_details?:
    | PostV2LogsQueryEvalsResponse200PromptTokensDetails$Outbound
    | undefined;
  completion_tokens_details?:
    | PostV2LogsQueryEvalsResponse200CompletionTokensDetails$Outbound
    | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200Usage$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Usage$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse200Usage
> = z.object({
  totalTokens: z.number().optional(),
  promptTokens: z.number().optional(),
  completionTokens: z.number().optional(),
  promptTokensDetails: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200PromptTokensDetails$outboundSchema
  ).optional(),
  completionTokensDetails: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200CompletionTokensDetails$outboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    totalTokens: "total_tokens",
    promptTokens: "prompt_tokens",
    completionTokens: "completion_tokens",
    promptTokensDetails: "prompt_tokens_details",
    completionTokensDetails: "completion_tokens_details",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200Usage$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Usage$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200Usage$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Usage$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200Usage$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Usage$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse200Usage$Outbound;
}

export function postV2LogsQueryEvalsResponse200UsageToJSON(
  postV2LogsQueryEvalsResponse200Usage: PostV2LogsQueryEvalsResponse200Usage,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200Usage$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200Usage,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200UsageFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse200Usage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200Usage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200Usage' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200Billing$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Billing,
  z.ZodTypeDef,
  unknown
> = z.object({
  total_cost: z.nullable(z.number()).optional(),
  input_cost: z.nullable(z.number()).optional(),
  output_cost: z.nullable(z.number()).optional(),
  billable: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    "total_cost": "totalCost",
    "input_cost": "inputCost",
    "output_cost": "outputCost",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponse200Billing$Outbound = {
  total_cost?: number | null | undefined;
  input_cost?: number | null | undefined;
  output_cost?: number | null | undefined;
  billable: boolean;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200Billing$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Billing$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse200Billing
> = z.object({
  totalCost: z.nullable(z.number()).optional(),
  inputCost: z.nullable(z.number()).optional(),
  outputCost: z.nullable(z.number()).optional(),
  billable: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    totalCost: "total_cost",
    inputCost: "input_cost",
    outputCost: "output_cost",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200Billing$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Billing$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200Billing$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Billing$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200Billing$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Billing$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse200Billing$Outbound;
}

export function postV2LogsQueryEvalsResponse200BillingToJSON(
  postV2LogsQueryEvalsResponse200Billing:
    PostV2LogsQueryEvalsResponse200Billing,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200Billing$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200Billing,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200BillingFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse200Billing, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200Billing$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200Billing' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunType
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunType,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunType
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataToolsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataToolsType
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataToolsType,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataToolsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataToolsType
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataToolsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataToolsType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataToolsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataToolsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataToolsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataToolsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200Parameters$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Parameters,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataToolsType$inboundSchema,
  properties: z.record(z.any()),
  required: z.array(z.string()).optional(),
  additionalProperties: z.boolean().optional(),
});

/** @internal */
export type PostV2LogsQueryEvalsResponse200Parameters$Outbound = {
  type: string;
  properties: { [k: string]: any };
  required?: Array<string> | undefined;
  additionalProperties?: boolean | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200Parameters$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200Parameters$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200Parameters
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunDataToolsType$outboundSchema,
    properties: z.record(z.any()),
    required: z.array(z.string()).optional(),
    additionalProperties: z.boolean().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200Parameters$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Parameters$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200Parameters$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Parameters$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200Parameters$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Parameters$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse200Parameters$Outbound;
}

export function postV2LogsQueryEvalsResponse200ParametersToJSON(
  postV2LogsQueryEvalsResponse200Parameters:
    PostV2LogsQueryEvalsResponse200Parameters,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200Parameters$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200Parameters,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ParametersFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200Parameters,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200Parameters$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200Parameters' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200Function$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Function,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  description: z.string().optional(),
  strict: z.boolean().optional(),
  parameters: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200Parameters$inboundSchema
  ),
});

/** @internal */
export type PostV2LogsQueryEvalsResponse200Function$Outbound = {
  name: string;
  description?: string | undefined;
  strict?: boolean | undefined;
  parameters: PostV2LogsQueryEvalsResponse200Parameters$Outbound;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200Function$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Function$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse200Function
> = z.object({
  name: z.string(),
  description: z.string().optional(),
  strict: z.boolean().optional(),
  parameters: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200Parameters$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200Function$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Function$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200Function$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Function$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200Function$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Function$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse200Function$Outbound;
}

export function postV2LogsQueryEvalsResponse200FunctionToJSON(
  postV2LogsQueryEvalsResponse200Function:
    PostV2LogsQueryEvalsResponse200Function,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200Function$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200Function,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200FunctionFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200Function,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200Function$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200Function' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200Tools$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Tools,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunType$inboundSchema,
  function: z.lazy(() => PostV2LogsQueryEvalsResponse200Function$inboundSchema),
});

/** @internal */
export type PostV2LogsQueryEvalsResponse200Tools$Outbound = {
  type: string;
  function: PostV2LogsQueryEvalsResponse200Function$Outbound;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200Tools$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Tools$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse200Tools
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47WorkflowRunType$outboundSchema,
  function: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200Function$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200Tools$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Tools$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200Tools$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Tools$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200Tools$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Tools$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse200Tools$Outbound;
}

export function postV2LogsQueryEvalsResponse200ToolsToJSON(
  postV2LogsQueryEvalsResponse200Tools: PostV2LogsQueryEvalsResponse200Tools,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200Tools$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200Tools,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ToolsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse200Tools, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200Tools$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200Tools' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200PromptSnippets$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200PromptSnippets,
    z.ZodTypeDef,
    unknown
  > = z.object({
    _id: z.string(),
    key: z.string(),
    value: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "_id": "id",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200PromptSnippets$Outbound = {
  _id: string;
  key: string;
  value: string;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200PromptSnippets$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200PromptSnippets$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200PromptSnippets
  > = z.object({
    id: z.string(),
    key: z.string(),
    value: z.string(),
  }).transform((v) => {
    return remap$(v, {
      id: "_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200PromptSnippets$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200PromptSnippets$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200PromptSnippets$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200PromptSnippets$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200PromptSnippets$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200PromptSnippets$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse200PromptSnippets$Outbound;
}

export function postV2LogsQueryEvalsResponse200PromptSnippetsToJSON(
  postV2LogsQueryEvalsResponse200PromptSnippets:
    PostV2LogsQueryEvalsResponse200PromptSnippets,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200PromptSnippets$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200PromptSnippets,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200PromptSnippetsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200PromptSnippets,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200PromptSnippets$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200PromptSnippets' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200Data$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Data,
  z.ZodTypeDef,
  unknown
> = z.object({
  choices: z.array(
    z.lazy(() => PostV2LogsQueryEvalsResponse200Choices$inboundSchema),
  ).optional(),
  action: PostV2LogsQueryEvalsResponse200Action$inboundSchema,
  prompt_config: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200PromptConfig$inboundSchema
  ),
  variables: z.array(
    z.lazy(() => PostV2LogsQueryEvalsResponse200Variables$inboundSchema),
  ),
  performance: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200Performance$inboundSchema
  ).optional(),
  usage: z.lazy(() => PostV2LogsQueryEvalsResponse200Usage$inboundSchema)
    .optional(),
  billing: z.lazy(() => PostV2LogsQueryEvalsResponse200Billing$inboundSchema)
    .optional(),
  tools: z.array(
    z.lazy(() => PostV2LogsQueryEvalsResponse200Tools$inboundSchema),
  ).optional(),
  prompt_snippets: z.array(
    z.lazy(() => PostV2LogsQueryEvalsResponse200PromptSnippets$inboundSchema),
  ),
}).transform((v) => {
  return remap$(v, {
    "prompt_config": "promptConfig",
    "prompt_snippets": "promptSnippets",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponse200Data$Outbound = {
  choices?: Array<PostV2LogsQueryEvalsResponse200Choices$Outbound> | undefined;
  action: string;
  prompt_config: PostV2LogsQueryEvalsResponse200PromptConfig$Outbound;
  variables: Array<PostV2LogsQueryEvalsResponse200Variables$Outbound>;
  performance?: PostV2LogsQueryEvalsResponse200Performance$Outbound | undefined;
  usage?: PostV2LogsQueryEvalsResponse200Usage$Outbound | undefined;
  billing?: PostV2LogsQueryEvalsResponse200Billing$Outbound | undefined;
  tools?: Array<PostV2LogsQueryEvalsResponse200Tools$Outbound> | undefined;
  prompt_snippets: Array<
    PostV2LogsQueryEvalsResponse200PromptSnippets$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200Data$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Data$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse200Data
> = z.object({
  choices: z.array(
    z.lazy(() => PostV2LogsQueryEvalsResponse200Choices$outboundSchema),
  ).optional(),
  action: PostV2LogsQueryEvalsResponse200Action$outboundSchema,
  promptConfig: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200PromptConfig$outboundSchema
  ),
  variables: z.array(
    z.lazy(() => PostV2LogsQueryEvalsResponse200Variables$outboundSchema),
  ),
  performance: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200Performance$outboundSchema
  ).optional(),
  usage: z.lazy(() => PostV2LogsQueryEvalsResponse200Usage$outboundSchema)
    .optional(),
  billing: z.lazy(() => PostV2LogsQueryEvalsResponse200Billing$outboundSchema)
    .optional(),
  tools: z.array(
    z.lazy(() => PostV2LogsQueryEvalsResponse200Tools$outboundSchema),
  ).optional(),
  promptSnippets: z.array(
    z.lazy(() => PostV2LogsQueryEvalsResponse200PromptSnippets$outboundSchema),
  ),
}).transform((v) => {
  return remap$(v, {
    promptConfig: "prompt_config",
    promptSnippets: "prompt_snippets",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200Data$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Data$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200Data$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Data$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200Data$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Data$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse200Data$Outbound;
}

export function postV2LogsQueryEvalsResponse200DataToJSON(
  postV2LogsQueryEvalsResponse200Data: PostV2LogsQueryEvalsResponse200Data,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200Data$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200Data,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200DataFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse200Data, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200Data$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200Data' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseWorkflowRun$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseWorkflowRun,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  workflow_metadata: z.record(z.any()).optional(),
  workflow_input: z.record(z.any()).optional(),
  workflow_output: z.record(z.any()).optional(),
  request_properties: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200RequestProperties$inboundSchema
  ).optional(),
  started_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  finished_at: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  product_type: PostV2LogsQueryEvalsResponse200ProductType$inboundSchema,
  related_entities: z.array(
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1$inboundSchema
    ),
  ),
  evals: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44$inboundSchema
      ),
    ]),
  ),
  data: z.lazy(() => PostV2LogsQueryEvalsResponse200Data$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "workflow_metadata": "workflowMetadata",
    "workflow_input": "workflowInput",
    "workflow_output": "workflowOutput",
    "request_properties": "requestProperties",
    "started_at": "startedAt",
    "finished_at": "finishedAt",
    "product_type": "productType",
    "related_entities": "relatedEntities",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponseWorkflowRun$Outbound = {
  id: string;
  workflow_metadata?: { [k: string]: any } | undefined;
  workflow_input?: { [k: string]: any } | undefined;
  workflow_output?: { [k: string]: any } | undefined;
  request_properties?:
    | PostV2LogsQueryEvalsResponse200RequestProperties$Outbound
    | undefined;
  started_at: string;
  finished_at?: string | undefined;
  product_type: string;
  related_entities: Array<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1$Outbound
  >;
  evals: Array<
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41$Outbound
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42$Outbound
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43$Outbound
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44$Outbound
  >;
  data: PostV2LogsQueryEvalsResponse200Data$Outbound;
};

/** @internal */
export const PostV2LogsQueryEvalsResponseWorkflowRun$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseWorkflowRun$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponseWorkflowRun
> = z.object({
  id: z.string(),
  workflowMetadata: z.record(z.any()).optional(),
  workflowInput: z.record(z.any()).optional(),
  workflowOutput: z.record(z.any()).optional(),
  requestProperties: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200RequestProperties$outboundSchema
  ).optional(),
  startedAt: z.date().transform(v => v.toISOString()),
  finishedAt: z.date().transform(v => v.toISOString()).optional(),
  productType: PostV2LogsQueryEvalsResponse200ProductType$outboundSchema,
  relatedEntities: z.array(
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7WorkflowRun1$outboundSchema
    ),
  ),
  evals: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems41$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44$outboundSchema
      ),
    ]),
  ),
  data: z.lazy(() => PostV2LogsQueryEvalsResponse200Data$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    workflowMetadata: "workflow_metadata",
    workflowInput: "workflow_input",
    workflowOutput: "workflow_output",
    requestProperties: "request_properties",
    startedAt: "started_at",
    finishedAt: "finished_at",
    productType: "product_type",
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseWorkflowRun$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseWorkflowRun$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponseWorkflowRun$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseWorkflowRun$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseWorkflowRun$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseWorkflowRun$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponseWorkflowRun$Outbound;
}

export function postV2LogsQueryEvalsResponseWorkflowRunToJSON(
  postV2LogsQueryEvalsResponseWorkflowRun:
    PostV2LogsQueryEvalsResponseWorkflowRun,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseWorkflowRun$outboundSchema.parse(
      postV2LogsQueryEvalsResponseWorkflowRun,
    ),
  );
}

export function postV2LogsQueryEvalsResponseWorkflowRunFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponseWorkflowRun,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponseWorkflowRun$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponseWorkflowRun' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals7Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse2007$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse2007,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Type$inboundSchema,
  workflow_run: z.lazy(() =>
    PostV2LogsQueryEvalsResponseWorkflowRun$inboundSchema
  ),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Status$inboundSchema,
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  related_entities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74$inboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    "workflow_run": "workflowRun",
    "related_entities": "relatedEntities",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponse2007$Outbound = {
  type: string;
  workflow_run: PostV2LogsQueryEvalsResponseWorkflowRun$Outbound;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse2007$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse2007$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse2007
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Type$outboundSchema,
  workflowRun: z.lazy(() =>
    PostV2LogsQueryEvalsResponseWorkflowRun$outboundSchema
  ),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems47Status$outboundSchema,
  timestamp: z.date().transform(v => v.toISOString()),
  relatedEntities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals71$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals72$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals73$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals74$outboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    workflowRun: "workflow_run",
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse2007$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse2007$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponse2007$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse2007$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsResponse2007$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse2007$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse2007$Outbound;
}

export function postV2LogsQueryEvalsResponse2007ToJSON(
  postV2LogsQueryEvalsResponse2007: PostV2LogsQueryEvalsResponse2007,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse2007$outboundSchema.parse(
      postV2LogsQueryEvalsResponse2007,
    ),
  );
}

export function postV2LogsQueryEvalsResponse2007FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse2007, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsResponse2007$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse2007' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value,
    z.ZodTypeDef,
    unknown
  > = z.object({
    f1: z.number(),
    precision: z.number(),
    recall: z.number(),
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value$Outbound =
  {
    f1: number;
    precision: number;
    recall: number;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value
  > = z.object({
    f1: z.number(),
    precision: z.number(),
    recall: z.number(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4ValueToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4ValueFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals6Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals6Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals6Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals6Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals6Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals6Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals6Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals6Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals6Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals6Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals6Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals6Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals6Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse2006$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse2006,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Type$inboundSchema,
  value: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value$inboundSchema
  ),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Status$inboundSchema,
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  related_entities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64$inboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    "related_entities": "relatedEntities",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponse2006$Outbound = {
  type: string;
  value:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value$Outbound;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse2006$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse2006$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse2006
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Type$outboundSchema,
  value: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Value$outboundSchema
  ),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems46Status$outboundSchema,
  timestamp: z.date().transform(v => v.toISOString()),
  relatedEntities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals61$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals62$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals63$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals64$outboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse2006$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse2006$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponse2006$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse2006$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsResponse2006$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse2006$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse2006$Outbound;
}

export function postV2LogsQueryEvalsResponse2006ToJSON(
  postV2LogsQueryEvalsResponse2006: PostV2LogsQueryEvalsResponse2006,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse2006$outboundSchema.parse(
      postV2LogsQueryEvalsResponse2006,
    ),
  );
}

export function postV2LogsQueryEvalsResponse2006FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse2006, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsResponse2006$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse2006' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponseRouge1$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseRouge1,
  z.ZodTypeDef,
  unknown
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/** @internal */
export type PostV2LogsQueryEvalsResponseRouge1$Outbound = {
  f1: number;
  precision: number;
  recall: number;
};

/** @internal */
export const PostV2LogsQueryEvalsResponseRouge1$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseRouge1$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponseRouge1
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseRouge1$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseRouge1$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponseRouge1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseRouge1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseRouge1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseRouge1$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponseRouge1$Outbound;
}

export function postV2LogsQueryEvalsResponseRouge1ToJSON(
  postV2LogsQueryEvalsResponseRouge1: PostV2LogsQueryEvalsResponseRouge1,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseRouge1$outboundSchema.parse(
      postV2LogsQueryEvalsResponseRouge1,
    ),
  );
}

export function postV2LogsQueryEvalsResponseRouge1FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponseRouge1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponseRouge1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponseRouge1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseRouge2$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseRouge2,
  z.ZodTypeDef,
  unknown
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/** @internal */
export type PostV2LogsQueryEvalsResponseRouge2$Outbound = {
  f1: number;
  precision: number;
  recall: number;
};

/** @internal */
export const PostV2LogsQueryEvalsResponseRouge2$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseRouge2$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponseRouge2
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseRouge2$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseRouge2$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponseRouge2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseRouge2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseRouge2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseRouge2$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponseRouge2$Outbound;
}

export function postV2LogsQueryEvalsResponseRouge2ToJSON(
  postV2LogsQueryEvalsResponseRouge2: PostV2LogsQueryEvalsResponseRouge2,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseRouge2$outboundSchema.parse(
      postV2LogsQueryEvalsResponseRouge2,
    ),
  );
}

export function postV2LogsQueryEvalsResponseRouge2FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponseRouge2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponseRouge2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponseRouge2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseRougeL$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseRougeL,
  z.ZodTypeDef,
  unknown
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/** @internal */
export type PostV2LogsQueryEvalsResponseRougeL$Outbound = {
  f1: number;
  precision: number;
  recall: number;
};

/** @internal */
export const PostV2LogsQueryEvalsResponseRougeL$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseRougeL$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponseRougeL
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseRougeL$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseRougeL$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponseRougeL$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseRougeL$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseRougeL$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseRougeL$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponseRougeL$Outbound;
}

export function postV2LogsQueryEvalsResponseRougeLToJSON(
  postV2LogsQueryEvalsResponseRougeL: PostV2LogsQueryEvalsResponseRougeL,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseRougeL$outboundSchema.parse(
      postV2LogsQueryEvalsResponseRougeL,
    ),
  );
}

export function postV2LogsQueryEvalsResponseRougeLFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponseRougeL, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponseRougeL$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponseRougeL' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue,
    z.ZodTypeDef,
    unknown
  > = z.object({
    rouge_1: z.lazy(() => PostV2LogsQueryEvalsResponseRouge1$inboundSchema),
    rouge_2: z.lazy(() => PostV2LogsQueryEvalsResponseRouge2$inboundSchema),
    rouge_l: z.lazy(() => PostV2LogsQueryEvalsResponseRougeL$inboundSchema),
  }).transform((v) => {
    return remap$(v, {
      "rouge_1": "rouge1",
      "rouge_2": "rouge2",
      "rouge_l": "rougeL",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue$Outbound =
  {
    rouge_1: PostV2LogsQueryEvalsResponseRouge1$Outbound;
    rouge_2: PostV2LogsQueryEvalsResponseRouge2$Outbound;
    rouge_l: PostV2LogsQueryEvalsResponseRougeL$Outbound;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue
  > = z.object({
    rouge1: z.lazy(() => PostV2LogsQueryEvalsResponseRouge1$outboundSchema),
    rouge2: z.lazy(() => PostV2LogsQueryEvalsResponseRouge2$outboundSchema),
    rougeL: z.lazy(() => PostV2LogsQueryEvalsResponseRougeL$outboundSchema),
  }).transform((v) => {
    return remap$(v, {
      rouge1: "rouge_1",
      rouge2: "rouge_2",
      rougeL: "rouge_l",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValueToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValueFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals5Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals5Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals5Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals5Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals5Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals5Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals5Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals5Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals5Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals5Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals5Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals5Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals5Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse2005$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse2005,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Type$inboundSchema,
  value: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue$inboundSchema
  ),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Status$inboundSchema,
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  related_entities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54$inboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    "related_entities": "relatedEntities",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponse2005$Outbound = {
  type: string;
  value:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue$Outbound;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse2005$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse2005$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse2005
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Type$outboundSchema,
  value: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsValue$outboundSchema
  ),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems45Status$outboundSchema,
  timestamp: z.date().transform(v => v.toISOString()),
  relatedEntities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals51$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals52$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals53$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals54$outboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse2005$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse2005$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponse2005$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse2005$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsResponse2005$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse2005$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse2005$Outbound;
}

export function postV2LogsQueryEvalsResponse2005ToJSON(
  postV2LogsQueryEvalsResponse2005: PostV2LogsQueryEvalsResponse2005,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse2005$outboundSchema.parse(
      postV2LogsQueryEvalsResponse2005,
    ),
  );
}

export function postV2LogsQueryEvalsResponse2005FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse2005, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsResponse2005$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse2005' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse2004$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse2004,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Type$inboundSchema,
  values: z.array(z.string()),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Status$inboundSchema,
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  related_entities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44$inboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    "related_entities": "relatedEntities",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponse2004$Outbound = {
  type: string;
  values: Array<string>;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse2004$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse2004$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse2004
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Type$outboundSchema,
  values: z.array(z.string()),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems44Status$outboundSchema,
  timestamp: z.date().transform(v => v.toISOString()),
  relatedEntities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals41$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals42$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals43$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals44$outboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse2004$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse2004$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponse2004$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse2004$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsResponse2004$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse2004$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse2004$Outbound;
}

export function postV2LogsQueryEvalsResponse2004ToJSON(
  postV2LogsQueryEvalsResponse2004: PostV2LogsQueryEvalsResponse2004,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse2004$outboundSchema.parse(
      postV2LogsQueryEvalsResponse2004,
    ),
  );
}

export function postV2LogsQueryEvalsResponse2004FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse2004, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsResponse2004$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse2004' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse2003$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse2003,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Type$inboundSchema,
  value: z.boolean(),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Status$inboundSchema,
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  related_entities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34$inboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    "related_entities": "relatedEntities",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponse2003$Outbound = {
  type: string;
  value: boolean;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse2003$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse2003$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse2003
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Type$outboundSchema,
  value: z.boolean(),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems43Status$outboundSchema,
  timestamp: z.date().transform(v => v.toISOString()),
  relatedEntities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals31$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals32$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals33$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals34$outboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse2003$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse2003$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponse2003$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse2003$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsResponse2003$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse2003$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse2003$Outbound;
}

export function postV2LogsQueryEvalsResponse2003ToJSON(
  postV2LogsQueryEvalsResponse2003: PostV2LogsQueryEvalsResponse2003,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse2003$outboundSchema.parse(
      postV2LogsQueryEvalsResponse2003,
    ),
  );
}

export function postV2LogsQueryEvalsResponse2003FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse2003, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsResponse2003$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse2003' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals24Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals24Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals24Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals24Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals24Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals24Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals24Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals24Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals24Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals24Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals24Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals24Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals24Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals23Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals23Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals23Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals23Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals23Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals23Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals23Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals23Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals23Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals23Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals23Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals23Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals23Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals22Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals22Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals22Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals22Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals22Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals22Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals22Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals22Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals22Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals22Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals22Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals22Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals22Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse2002$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse2002,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Type$inboundSchema,
  value: z.number(),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Status$inboundSchema,
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  related_entities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4$inboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    "related_entities": "relatedEntities",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponse2002$Outbound = {
  type: string;
  value: number;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse2002$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse2002$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse2002
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Type$outboundSchema,
  value: z.number(),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems42Status$outboundSchema,
  timestamp: z.date().transform(v => v.toISOString()),
  relatedEntities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals2$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals3$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals4$outboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse2002$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse2002$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponse2002$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse2002$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsResponse2002$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse2002$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse2002$Outbound;
}

export function postV2LogsQueryEvalsResponse2002ToJSON(
  postV2LogsQueryEvalsResponse2002: PostV2LogsQueryEvalsResponse2002,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse2002$outboundSchema.parse(
      postV2LogsQueryEvalsResponse2002,
    ),
  );
}

export function postV2LogsQueryEvalsResponse2002FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse2002, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsResponse2002$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse2002' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals14Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals14Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals14Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals14Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals14Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals14Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals14Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals14Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals14Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals14Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals14Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals14Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals14Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals1Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4EvalsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4EvalsType
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4EvalsType,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4EvalsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4EvalsType
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4EvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4EvalsType$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4EvalsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4EvalsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4EvalsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4EvalsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4EvalsType$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4EvalsType$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals11Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals11Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals11Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals11Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals11Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals11Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals11Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals11Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals11Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals11Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals11Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals11Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Evals11Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse2001$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse2001,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Type$inboundSchema,
  value: z.string(),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Status$inboundSchema,
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  related_entities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44$inboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    "related_entities": "relatedEntities",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponse2001$Outbound = {
  type: string;
  value: string;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse2001$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse2001$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse2001
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Type$outboundSchema,
  value: z.string(),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4Status$outboundSchema,
  timestamp: z.date().transform(v => v.toISOString()),
  relatedEntities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems41$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44$outboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse2001$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse2001$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponse2001$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse2001$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsResponse2001$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse2001$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse2001$Outbound;
}

export function postV2LogsQueryEvalsResponse2001ToJSON(
  postV2LogsQueryEvalsResponse2001: PostV2LogsQueryEvalsResponse2001,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse2001$outboundSchema.parse(
      postV2LogsQueryEvalsResponse2001,
    ),
  );
}

export function postV2LogsQueryEvalsResponse2001FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse2001, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsResponse2001$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse2001' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseEvals$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseEvals,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQueryEvalsResponse2001$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse2002$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse2003$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse2004$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse2005$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse2006$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse2007$inboundSchema),
]);

/** @internal */
export type PostV2LogsQueryItemsResponseEvals$Outbound =
  | PostV2LogsQueryEvalsResponse2001$Outbound
  | PostV2LogsQueryEvalsResponse2002$Outbound
  | PostV2LogsQueryEvalsResponse2003$Outbound
  | PostV2LogsQueryEvalsResponse2004$Outbound
  | PostV2LogsQueryEvalsResponse2005$Outbound
  | PostV2LogsQueryEvalsResponse2006$Outbound
  | PostV2LogsQueryEvalsResponse2007$Outbound;

/** @internal */
export const PostV2LogsQueryItemsResponseEvals$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseEvals$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponseEvals
> = z.union([
  z.lazy(() => PostV2LogsQueryEvalsResponse2001$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse2002$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse2003$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse2004$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse2005$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse2006$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse2007$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseEvals$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseEvals$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsResponseEvals$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseEvals$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseEvals$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseEvals$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseEvals$Outbound;
}

export function postV2LogsQueryItemsResponseEvalsToJSON(
  postV2LogsQueryItemsResponseEvals: PostV2LogsQueryItemsResponseEvals,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseEvals$outboundSchema.parse(
      postV2LogsQueryItemsResponseEvals,
    ),
  );
}

export function postV2LogsQueryItemsResponseEvalsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsResponseEvals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsResponseEvals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsResponseEvals' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseProductType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsResponseProductType> = z
    .nativeEnum(PostV2LogsQueryItemsResponseProductType);

/** @internal */
export const PostV2LogsQueryItemsResponseProductType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsResponseProductType> =
    PostV2LogsQueryItemsResponseProductType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseProductType$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseProductType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseProductType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseProductType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseProductType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems45Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems45Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems45Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems45Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems45Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems45Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems45Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems45Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems45Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems45Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems45Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntities5$inboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntities5,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems45Type$inboundSchema,
  account_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "account_id": "accountId",
  });
});

/** @internal */
export type PostV2LogsQueryRelatedEntities5$Outbound = {
  type: string;
  account_id: string;
};

/** @internal */
export const PostV2LogsQueryRelatedEntities5$outboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntities5$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryRelatedEntities5
> = z.object({
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems45Type$outboundSchema,
  accountId: z.string(),
}).transform((v) => {
  return remap$(v, {
    accountId: "account_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntities5$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntities5$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryRelatedEntities5$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntities5$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryRelatedEntities5$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntities5$Outbound` instead. */
  export type Outbound = PostV2LogsQueryRelatedEntities5$Outbound;
}

export function postV2LogsQueryRelatedEntities5ToJSON(
  postV2LogsQueryRelatedEntities5: PostV2LogsQueryRelatedEntities5,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntities5$outboundSchema.parse(
      postV2LogsQueryRelatedEntities5,
    ),
  );
}

export function postV2LogsQueryRelatedEntities5FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryRelatedEntities5, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryRelatedEntities5$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntities5' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse4$inboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntitiesResponse4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44Type$inboundSchema,
  test_case_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "test_case_id": "testCaseId",
  });
});

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse4$Outbound = {
  type: string;
  test_case_id: string;
};

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse4$outboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntitiesResponse4$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryRelatedEntitiesResponse4
> = z.object({
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems44Type$outboundSchema,
  testCaseId: z.string(),
}).transform((v) => {
  return remap$(v, {
    testCaseId: "test_case_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse4$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse4$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse4$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse4$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse4$Outbound` instead. */
  export type Outbound = PostV2LogsQueryRelatedEntitiesResponse4$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse4ToJSON(
  postV2LogsQueryRelatedEntitiesResponse4:
    PostV2LogsQueryRelatedEntitiesResponse4,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse4$outboundSchema.parse(
      postV2LogsQueryRelatedEntitiesResponse4,
    ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse4FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse2003$inboundSchema:
  z.ZodType<PostV2LogsQueryRelatedEntitiesResponse2003, z.ZodTypeDef, unknown> =
    z.object({
      type:
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43Type$inboundSchema,
      test_case_run_id: z.string(),
    }).transform((v) => {
      return remap$(v, {
        "test_case_run_id": "testCaseRunId",
      });
    });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse2003$Outbound = {
  type: string;
  test_case_run_id: string;
};

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse2003$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse2003$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse2003
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems43Type$outboundSchema,
    testCaseRunId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      testCaseRunId: "test_case_run_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse2003$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse2003$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse2003$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse2003$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse2003$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse2003$Outbound` instead. */
  export type Outbound = PostV2LogsQueryRelatedEntitiesResponse2003$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse2003ToJSON(
  postV2LogsQueryRelatedEntitiesResponse2003:
    PostV2LogsQueryRelatedEntitiesResponse2003,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse2003$outboundSchema.parse(
      postV2LogsQueryRelatedEntitiesResponse2003,
    ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse2003FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse2003,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse2003$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse2003' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse2002$inboundSchema:
  z.ZodType<PostV2LogsQueryRelatedEntitiesResponse2002, z.ZodTypeDef, unknown> =
    z.object({
      type:
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42Type$inboundSchema,
      experiment_run_id: z.string(),
    }).transform((v) => {
      return remap$(v, {
        "experiment_run_id": "experimentRunId",
      });
    });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse2002$Outbound = {
  type: string;
  experiment_run_id: string;
};

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse2002$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse2002$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse2002
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems42Type$outboundSchema,
    experimentRunId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      experimentRunId: "experiment_run_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse2002$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse2002$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse2002$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse2002$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse2002$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse2002$Outbound` instead. */
  export type Outbound = PostV2LogsQueryRelatedEntitiesResponse2002$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse2002ToJSON(
  postV2LogsQueryRelatedEntitiesResponse2002:
    PostV2LogsQueryRelatedEntitiesResponse2002,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse2002$outboundSchema.parse(
      postV2LogsQueryRelatedEntitiesResponse2002,
    ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse2002FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse2002,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse2002$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse2002' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse2001$inboundSchema:
  z.ZodType<PostV2LogsQueryRelatedEntitiesResponse2001, z.ZodTypeDef, unknown> =
    z.object({
      type:
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Type$inboundSchema,
      experiment_id: z.string(),
    }).transform((v) => {
      return remap$(v, {
        "experiment_id": "experimentId",
      });
    });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse2001$Outbound = {
  type: string;
  experiment_id: string;
};

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse2001$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse2001$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse2001
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4Type$outboundSchema,
    experimentId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      experimentId: "experiment_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse2001$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse2001$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse2001$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse2001$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse2001$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse2001$Outbound` instead. */
  export type Outbound = PostV2LogsQueryRelatedEntitiesResponse2001$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse2001ToJSON(
  postV2LogsQueryRelatedEntitiesResponse2001:
    PostV2LogsQueryRelatedEntitiesResponse2001,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse2001$outboundSchema.parse(
      postV2LogsQueryRelatedEntitiesResponse2001,
    ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse2001FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse2001,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse2001$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse2001' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseRelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsResponseRelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse2001$inboundSchema),
    z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse2002$inboundSchema),
    z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse2003$inboundSchema),
    z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse4$inboundSchema),
    z.lazy(() => PostV2LogsQueryRelatedEntities5$inboundSchema),
  ]);

/** @internal */
export type PostV2LogsQueryItemsResponseRelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse2001$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse2002$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse2003$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse4$Outbound
  | PostV2LogsQueryRelatedEntities5$Outbound;

/** @internal */
export const PostV2LogsQueryItemsResponseRelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsResponseRelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryItemsResponseRelatedEntities
  > = z.union([
    z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse2001$outboundSchema),
    z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse2002$outboundSchema),
    z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse2003$outboundSchema),
    z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse4$outboundSchema),
    z.lazy(() => PostV2LogsQueryRelatedEntities5$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseRelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseRelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseRelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseRelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseRelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseRelatedEntities$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseRelatedEntities$Outbound;
}

export function postV2LogsQueryItemsResponseRelatedEntitiesToJSON(
  postV2LogsQueryItemsResponseRelatedEntities:
    PostV2LogsQueryItemsResponseRelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseRelatedEntities$outboundSchema.parse(
      postV2LogsQueryItemsResponseRelatedEntities,
    ),
  );
}

export function postV2LogsQueryItemsResponseRelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryItemsResponseRelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponseRelatedEntities$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryItemsResponseRelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataChoicesRole$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataChoicesRole
  > = z.nativeEnum(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataChoicesRole,
  );

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataChoicesRole$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataChoicesRole
  > =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataChoicesRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataChoicesRole$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataChoicesRole$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataChoicesRole$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataChoicesRole$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataChoicesRole$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponse2003$inboundSchema: z.ZodType<
  PostV2LogsQueryMessageResponse2003,
  z.ZodTypeDef,
  unknown
> = z.object({
  role:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataChoicesRole$inboundSchema,
  url: z.string(),
});

/** @internal */
export type PostV2LogsQueryMessageResponse2003$Outbound = {
  role: string;
  url: string;
};

/** @internal */
export const PostV2LogsQueryMessageResponse2003$outboundSchema: z.ZodType<
  PostV2LogsQueryMessageResponse2003$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryMessageResponse2003
> = z.object({
  role:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataChoicesRole$outboundSchema,
  url: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse2003$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse2003$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryMessageResponse2003$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse2003$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse2003$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse2003$Outbound` instead. */
  export type Outbound = PostV2LogsQueryMessageResponse2003$Outbound;
}

export function postV2LogsQueryMessageResponse2003ToJSON(
  postV2LogsQueryMessageResponse2003: PostV2LogsQueryMessageResponse2003,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse2003$outboundSchema.parse(
      postV2LogsQueryMessageResponse2003,
    ),
  );
}

export function postV2LogsQueryMessageResponse2003FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryMessageResponse2003, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse2003$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponse2003' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataRole$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataRole
  > = z.nativeEnum(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataRole,
  );

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataRole$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataRole
  > =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataRole$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataRole$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataRole$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataRole$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataRole$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponse2002$inboundSchema: z.ZodType<
  PostV2LogsQueryMessageResponse2002,
  z.ZodTypeDef,
  unknown
> = z.object({
  role:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataRole$inboundSchema,
  content: z.nullable(z.string()),
});

/** @internal */
export type PostV2LogsQueryMessageResponse2002$Outbound = {
  role: string;
  content: string | null;
};

/** @internal */
export const PostV2LogsQueryMessageResponse2002$outboundSchema: z.ZodType<
  PostV2LogsQueryMessageResponse2002$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryMessageResponse2002
> = z.object({
  role:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4DataRole$outboundSchema,
  content: z.nullable(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse2002$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse2002$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryMessageResponse2002$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse2002$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse2002$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse2002$Outbound` instead. */
  export type Outbound = PostV2LogsQueryMessageResponse2002$Outbound;
}

export function postV2LogsQueryMessageResponse2002ToJSON(
  postV2LogsQueryMessageResponse2002: PostV2LogsQueryMessageResponse2002,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse2002$outboundSchema.parse(
      postV2LogsQueryMessageResponse2002,
    ),
  );
}

export function postV2LogsQueryMessageResponse2002FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryMessageResponse2002, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse2002$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponse2002' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Role$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Role
  > = z.nativeEnum(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Role,
  );

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Role$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Role
  > =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Role$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Role$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Role$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Role$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Role$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Role$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponse200Type$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryMessageResponse200Type> = z.nativeEnum(
    PostV2LogsQueryMessageResponse200Type,
  );

/** @internal */
export const PostV2LogsQueryMessageResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryMessageResponse200Type> =
    PostV2LogsQueryMessageResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200Type$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponse200Function$inboundSchema: z.ZodType<
  PostV2LogsQueryMessageResponse200Function,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/** @internal */
export type PostV2LogsQueryMessageResponse200Function$Outbound = {
  name: string;
  arguments: string;
};

/** @internal */
export const PostV2LogsQueryMessageResponse200Function$outboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200Function$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryMessageResponse200Function
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200Function$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200Function$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200Function$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200Function$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200Function$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200Function$Outbound` instead. */
  export type Outbound = PostV2LogsQueryMessageResponse200Function$Outbound;
}

export function postV2LogsQueryMessageResponse200FunctionToJSON(
  postV2LogsQueryMessageResponse200Function:
    PostV2LogsQueryMessageResponse200Function,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse200Function$outboundSchema.parse(
      postV2LogsQueryMessageResponse200Function,
    ),
  );
}

export function postV2LogsQueryMessageResponse200FunctionFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryMessageResponse200Function,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse200Function$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryMessageResponse200Function' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ToolCalls$inboundSchema:
  z.ZodType<PostV2LogsQueryMessageResponse200ToolCalls, z.ZodTypeDef, unknown> =
    z.object({
      id: z.string().optional(),
      index: z.number().optional(),
      type: PostV2LogsQueryMessageResponse200Type$inboundSchema,
      function: z.lazy(() =>
        PostV2LogsQueryMessageResponse200Function$inboundSchema
      ),
    });

/** @internal */
export type PostV2LogsQueryMessageResponse200ToolCalls$Outbound = {
  id?: string | undefined;
  index?: number | undefined;
  type: string;
  function: PostV2LogsQueryMessageResponse200Function$Outbound;
};

/** @internal */
export const PostV2LogsQueryMessageResponse200ToolCalls$outboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ToolCalls$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryMessageResponse200ToolCalls
  > = z.object({
    id: z.string().optional(),
    index: z.number().optional(),
    type: PostV2LogsQueryMessageResponse200Type$outboundSchema,
    function: z.lazy(() =>
      PostV2LogsQueryMessageResponse200Function$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ToolCalls$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ToolCalls$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ToolCalls$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ToolCalls$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ToolCalls$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ToolCalls$Outbound` instead. */
  export type Outbound = PostV2LogsQueryMessageResponse200ToolCalls$Outbound;
}

export function postV2LogsQueryMessageResponse200ToolCallsToJSON(
  postV2LogsQueryMessageResponse200ToolCalls:
    PostV2LogsQueryMessageResponse200ToolCalls,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse200ToolCalls$outboundSchema.parse(
      postV2LogsQueryMessageResponse200ToolCalls,
    ),
  );
}

export function postV2LogsQueryMessageResponse200ToolCallsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryMessageResponse200ToolCalls,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse200ToolCalls$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryMessageResponse200ToolCalls' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse2001$inboundSchema: z.ZodType<
  PostV2LogsQueryMessageResponse2001,
  z.ZodTypeDef,
  unknown
> = z.object({
  role:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Role$inboundSchema,
  content: z.nullable(z.string()).optional(),
  tool_calls: z.array(
    z.lazy(() => PostV2LogsQueryMessageResponse200ToolCalls$inboundSchema),
  ),
}).transform((v) => {
  return remap$(v, {
    "tool_calls": "toolCalls",
  });
});

/** @internal */
export type PostV2LogsQueryMessageResponse2001$Outbound = {
  role: string;
  content?: string | null | undefined;
  tool_calls: Array<PostV2LogsQueryMessageResponse200ToolCalls$Outbound>;
};

/** @internal */
export const PostV2LogsQueryMessageResponse2001$outboundSchema: z.ZodType<
  PostV2LogsQueryMessageResponse2001$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryMessageResponse2001
> = z.object({
  role:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems4Role$outboundSchema,
  content: z.nullable(z.string()).optional(),
  toolCalls: z.array(
    z.lazy(() => PostV2LogsQueryMessageResponse200ToolCalls$outboundSchema),
  ),
}).transform((v) => {
  return remap$(v, {
    toolCalls: "tool_calls",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse2001$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse2001$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryMessageResponse2001$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse2001$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse2001$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse2001$Outbound` instead. */
  export type Outbound = PostV2LogsQueryMessageResponse2001$Outbound;
}

export function postV2LogsQueryMessageResponse2001ToJSON(
  postV2LogsQueryMessageResponse2001: PostV2LogsQueryMessageResponse2001,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse2001$outboundSchema.parse(
      postV2LogsQueryMessageResponse2001,
    ),
  );
}

export function postV2LogsQueryMessageResponse2001FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryMessageResponse2001, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse2001$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponse2001' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseMessage$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseMessage,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQueryMessageResponse2002$inboundSchema),
  z.lazy(() => PostV2LogsQueryMessageResponse2003$inboundSchema),
  z.lazy(() => PostV2LogsQueryMessageResponse2001$inboundSchema),
]);

/** @internal */
export type PostV2LogsQueryItemsResponseMessage$Outbound =
  | PostV2LogsQueryMessageResponse2002$Outbound
  | PostV2LogsQueryMessageResponse2003$Outbound
  | PostV2LogsQueryMessageResponse2001$Outbound;

/** @internal */
export const PostV2LogsQueryItemsResponseMessage$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseMessage$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponseMessage
> = z.union([
  z.lazy(() => PostV2LogsQueryMessageResponse2002$outboundSchema),
  z.lazy(() => PostV2LogsQueryMessageResponse2003$outboundSchema),
  z.lazy(() => PostV2LogsQueryMessageResponse2001$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseMessage$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseMessage$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseMessage$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseMessage$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseMessage$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseMessage$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseMessage$Outbound;
}

export function postV2LogsQueryItemsResponseMessageToJSON(
  postV2LogsQueryItemsResponseMessage: PostV2LogsQueryItemsResponseMessage,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseMessage$outboundSchema.parse(
      postV2LogsQueryItemsResponseMessage,
    ),
  );
}

export function postV2LogsQueryItemsResponseMessageFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsResponseMessage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponseMessage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsResponseMessage' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseChoices$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseChoices,
  z.ZodTypeDef,
  unknown
> = z.object({
  index: z.number(),
  message: z.union([
    z.lazy(() => PostV2LogsQueryMessageResponse2002$inboundSchema),
    z.lazy(() => PostV2LogsQueryMessageResponse2003$inboundSchema),
    z.lazy(() => PostV2LogsQueryMessageResponse2001$inboundSchema),
  ]).optional(),
  finish_reason: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "finish_reason": "finishReason",
  });
});

/** @internal */
export type PostV2LogsQueryItemsResponseChoices$Outbound = {
  index: number;
  message?:
    | PostV2LogsQueryMessageResponse2002$Outbound
    | PostV2LogsQueryMessageResponse2003$Outbound
    | PostV2LogsQueryMessageResponse2001$Outbound
    | undefined;
  finish_reason?: string | null | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsResponseChoices$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseChoices$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponseChoices
> = z.object({
  index: z.number(),
  message: z.union([
    z.lazy(() => PostV2LogsQueryMessageResponse2002$outboundSchema),
    z.lazy(() => PostV2LogsQueryMessageResponse2003$outboundSchema),
    z.lazy(() => PostV2LogsQueryMessageResponse2001$outboundSchema),
  ]).optional(),
  finishReason: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    finishReason: "finish_reason",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseChoices$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseChoices$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseChoices$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseChoices$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseChoices$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseChoices$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseChoices$Outbound;
}

export function postV2LogsQueryItemsResponseChoicesToJSON(
  postV2LogsQueryItemsResponseChoices: PostV2LogsQueryItemsResponseChoices,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseChoices$outboundSchema.parse(
      postV2LogsQueryItemsResponseChoices,
    ),
  );
}

export function postV2LogsQueryItemsResponseChoicesFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsResponseChoices, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponseChoices$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsResponseChoices' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseAction$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsResponseAction
> = z.nativeEnum(PostV2LogsQueryItemsResponseAction);

/** @internal */
export const PostV2LogsQueryItemsResponseAction$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsResponseAction
> = PostV2LogsQueryItemsResponseAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseAction$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseAction$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsResponseAction$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseAction$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseAction$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryItemsResponseModelType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsResponseModelType> = z.nativeEnum(
    PostV2LogsQueryItemsResponseModelType,
  );

/** @internal */
export const PostV2LogsQueryItemsResponseModelType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsResponseModelType> =
    PostV2LogsQueryItemsResponseModelType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseModelType$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseModelType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseModelType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseModelType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseModelType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryItemsResponse200Format$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsResponse200Format> = z.nativeEnum(
    PostV2LogsQueryItemsResponse200Format,
  );

/** @internal */
export const PostV2LogsQueryItemsResponse200Format$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsResponse200Format> =
    PostV2LogsQueryItemsResponse200Format$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponse200Format$ {
  /** @deprecated use `PostV2LogsQueryItemsResponse200Format$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponse200Format$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200Format$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponse200Format$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryItemsResponseQuality$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsResponseQuality
> = z.nativeEnum(PostV2LogsQueryItemsResponseQuality);

/** @internal */
export const PostV2LogsQueryItemsResponseQuality$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsResponseQuality> =
    PostV2LogsQueryItemsResponseQuality$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseQuality$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseQuality$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseQuality$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseQuality$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseQuality$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsType
  > = z.nativeEnum(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsType,
  );

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsType
  > =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsType$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse2002$inboundSchema: z.ZodType<
  PostV2LogsQueryResponseFormatResponse2002,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsType$inboundSchema,
});

/** @internal */
export type PostV2LogsQueryResponseFormatResponse2002$Outbound = {
  type: string;
};

/** @internal */
export const PostV2LogsQueryResponseFormatResponse2002$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse2002$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse2002
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsType$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse2002$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse2002$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse2002$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse2002$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse2002$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse2002$Outbound` instead. */
  export type Outbound = PostV2LogsQueryResponseFormatResponse2002$Outbound;
}

export function postV2LogsQueryResponseFormatResponse2002ToJSON(
  postV2LogsQueryResponseFormatResponse2002:
    PostV2LogsQueryResponseFormatResponse2002,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse2002$outboundSchema.parse(
      postV2LogsQueryResponseFormatResponse2002,
    ),
  );
}

export function postV2LogsQueryResponseFormatResponse2002FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse2002,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse2002$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse2002' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyType
  > =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200JsonSchema$inboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200JsonSchema,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/** @internal */
export type PostV2LogsQueryResponseFormatResponse200JsonSchema$Outbound = {
  name: string;
  strict: boolean;
  schema: { [k: string]: any };
};

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200JsonSchema$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200JsonSchema$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse200JsonSchema
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200JsonSchema$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200JsonSchema$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200JsonSchema$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200JsonSchema$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200JsonSchema$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200JsonSchema$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryResponseFormatResponse200JsonSchema$Outbound;
}

export function postV2LogsQueryResponseFormatResponse200JsonSchemaToJSON(
  postV2LogsQueryResponseFormatResponse200JsonSchema:
    PostV2LogsQueryResponseFormatResponse200JsonSchema,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse200JsonSchema$outboundSchema.parse(
      postV2LogsQueryResponseFormatResponse200JsonSchema,
    ),
  );
}

export function postV2LogsQueryResponseFormatResponse200JsonSchemaFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse200JsonSchema,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse200JsonSchema$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse200JsonSchema' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse2001$inboundSchema: z.ZodType<
  PostV2LogsQueryResponseFormatResponse2001,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyType$inboundSchema,
  json_schema: z.lazy(() =>
    PostV2LogsQueryResponseFormatResponse200JsonSchema$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "json_schema": "jsonSchema",
  });
});

/** @internal */
export type PostV2LogsQueryResponseFormatResponse2001$Outbound = {
  type: string;
  json_schema: PostV2LogsQueryResponseFormatResponse200JsonSchema$Outbound;
};

/** @internal */
export const PostV2LogsQueryResponseFormatResponse2001$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse2001$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse2001
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyType$outboundSchema,
    jsonSchema: z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200JsonSchema$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      jsonSchema: "json_schema",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse2001$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse2001$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse2001$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse2001$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse2001$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse2001$Outbound` instead. */
  export type Outbound = PostV2LogsQueryResponseFormatResponse2001$Outbound;
}

export function postV2LogsQueryResponseFormatResponse2001ToJSON(
  postV2LogsQueryResponseFormatResponse2001:
    PostV2LogsQueryResponseFormatResponse2001,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse2001$outboundSchema.parse(
      postV2LogsQueryResponseFormatResponse2001,
    ),
  );
}

export function postV2LogsQueryResponseFormatResponse2001FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse2001,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse2001$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse2001' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseResponseFormat$inboundSchema:
  z.ZodType<PostV2LogsQueryItemsResponseResponseFormat, z.ZodTypeDef, unknown> =
    z.union([
      z.lazy(() => PostV2LogsQueryResponseFormatResponse2002$inboundSchema),
      z.lazy(() => PostV2LogsQueryResponseFormatResponse2001$inboundSchema),
    ]);

/** @internal */
export type PostV2LogsQueryItemsResponseResponseFormat$Outbound =
  | PostV2LogsQueryResponseFormatResponse2002$Outbound
  | PostV2LogsQueryResponseFormatResponse2001$Outbound;

/** @internal */
export const PostV2LogsQueryItemsResponseResponseFormat$outboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsResponseResponseFormat$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryItemsResponseResponseFormat
  > = z.union([
    z.lazy(() => PostV2LogsQueryResponseFormatResponse2002$outboundSchema),
    z.lazy(() => PostV2LogsQueryResponseFormatResponse2001$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseResponseFormat$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseResponseFormat$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseResponseFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseResponseFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseResponseFormat$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseResponseFormat$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseResponseFormat$Outbound;
}

export function postV2LogsQueryItemsResponseResponseFormatToJSON(
  postV2LogsQueryItemsResponseResponseFormat:
    PostV2LogsQueryItemsResponseResponseFormat,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseResponseFormat$outboundSchema.parse(
      postV2LogsQueryItemsResponseResponseFormat,
    ),
  );
}

export function postV2LogsQueryItemsResponseResponseFormatFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryItemsResponseResponseFormat,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponseResponseFormat$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryItemsResponseResponseFormat' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponsePhotoRealVersion$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsResponsePhotoRealVersion> = z
    .nativeEnum(PostV2LogsQueryItemsResponsePhotoRealVersion);

/** @internal */
export const PostV2LogsQueryItemsResponsePhotoRealVersion$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsResponsePhotoRealVersion> =
    PostV2LogsQueryItemsResponsePhotoRealVersion$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponsePhotoRealVersion$ {
  /** @deprecated use `PostV2LogsQueryItemsResponsePhotoRealVersion$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponsePhotoRealVersion$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponsePhotoRealVersion$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponsePhotoRealVersion$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryItemsResponseEncodingFormat$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsResponseEncodingFormat> = z
    .nativeEnum(PostV2LogsQueryItemsResponseEncodingFormat);

/** @internal */
export const PostV2LogsQueryItemsResponseEncodingFormat$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsResponseEncodingFormat> =
    PostV2LogsQueryItemsResponseEncodingFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseEncodingFormat$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseEncodingFormat$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseEncodingFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseEncodingFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseEncodingFormat$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryItemsResponseModelParameters$inboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsResponseModelParameters,
    z.ZodTypeDef,
    unknown
  > = z.object({
    temperature: z.number().optional(),
    maxTokens: z.number().optional(),
    topK: z.number().optional(),
    topP: z.number().optional(),
    frequencyPenalty: z.number().optional(),
    presencePenalty: z.number().optional(),
    numImages: z.number().optional(),
    seed: z.number().optional(),
    format: PostV2LogsQueryItemsResponse200Format$inboundSchema.optional(),
    dimensions: z.string().optional(),
    quality: PostV2LogsQueryItemsResponseQuality$inboundSchema.optional(),
    style: z.string().optional(),
    responseFormat: z.nullable(
      z.union([
        z.lazy(() => PostV2LogsQueryResponseFormatResponse2002$inboundSchema),
        z.lazy(() => PostV2LogsQueryResponseFormatResponse2001$inboundSchema),
      ]),
    ).optional(),
    photoRealVersion: PostV2LogsQueryItemsResponsePhotoRealVersion$inboundSchema
      .optional(),
    encoding_format: PostV2LogsQueryItemsResponseEncodingFormat$inboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "encoding_format": "encodingFormat",
    });
  });

/** @internal */
export type PostV2LogsQueryItemsResponseModelParameters$Outbound = {
  temperature?: number | undefined;
  maxTokens?: number | undefined;
  topK?: number | undefined;
  topP?: number | undefined;
  frequencyPenalty?: number | undefined;
  presencePenalty?: number | undefined;
  numImages?: number | undefined;
  seed?: number | undefined;
  format?: string | undefined;
  dimensions?: string | undefined;
  quality?: string | undefined;
  style?: string | undefined;
  responseFormat?:
    | PostV2LogsQueryResponseFormatResponse2002$Outbound
    | PostV2LogsQueryResponseFormatResponse2001$Outbound
    | null
    | undefined;
  photoRealVersion?: string | undefined;
  encoding_format?: string | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsResponseModelParameters$outboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsResponseModelParameters$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryItemsResponseModelParameters
  > = z.object({
    temperature: z.number().optional(),
    maxTokens: z.number().optional(),
    topK: z.number().optional(),
    topP: z.number().optional(),
    frequencyPenalty: z.number().optional(),
    presencePenalty: z.number().optional(),
    numImages: z.number().optional(),
    seed: z.number().optional(),
    format: PostV2LogsQueryItemsResponse200Format$outboundSchema.optional(),
    dimensions: z.string().optional(),
    quality: PostV2LogsQueryItemsResponseQuality$outboundSchema.optional(),
    style: z.string().optional(),
    responseFormat: z.nullable(
      z.union([
        z.lazy(() => PostV2LogsQueryResponseFormatResponse2002$outboundSchema),
        z.lazy(() => PostV2LogsQueryResponseFormatResponse2001$outboundSchema),
      ]),
    ).optional(),
    photoRealVersion:
      PostV2LogsQueryItemsResponsePhotoRealVersion$outboundSchema.optional(),
    encodingFormat: PostV2LogsQueryItemsResponseEncodingFormat$outboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      encodingFormat: "encoding_format",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseModelParameters$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseModelParameters$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseModelParameters$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseModelParameters$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseModelParameters$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseModelParameters$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseModelParameters$Outbound;
}

export function postV2LogsQueryItemsResponseModelParametersToJSON(
  postV2LogsQueryItemsResponseModelParameters:
    PostV2LogsQueryItemsResponseModelParameters,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseModelParameters$outboundSchema.parse(
      postV2LogsQueryItemsResponseModelParameters,
    ),
  );
}

export function postV2LogsQueryItemsResponseModelParametersFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryItemsResponseModelParameters,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponseModelParameters$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryItemsResponseModelParameters' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseProvider$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsResponseProvider> = z.nativeEnum(
    PostV2LogsQueryItemsResponseProvider,
  );

/** @internal */
export const PostV2LogsQueryItemsResponseProvider$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsResponseProvider> =
    PostV2LogsQueryItemsResponseProvider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseProvider$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseProvider$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseProvider$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseProvider$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseProvider$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryItemsResponseRole$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsResponseRole
> = z.nativeEnum(PostV2LogsQueryItemsResponseRole);

/** @internal */
export const PostV2LogsQueryItemsResponseRole$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsResponseRole
> = PostV2LogsQueryItemsResponseRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseRole$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseRole$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsResponseRole$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseRole$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsResponseRole$outboundSchema;
}

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsType
  > = z.nativeEnum(
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsType,
  );

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsType
  > =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsType$ {
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsType$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQuery2Response200ImageUrl$inboundSchema: z.ZodType<
  PostV2LogsQuery2Response200ImageUrl,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  url: z.string(),
  detail: z.string().optional(),
});

/** @internal */
export type PostV2LogsQuery2Response200ImageUrl$Outbound = {
  id?: string | undefined;
  url: string;
  detail?: string | undefined;
};

/** @internal */
export const PostV2LogsQuery2Response200ImageUrl$outboundSchema: z.ZodType<
  PostV2LogsQuery2Response200ImageUrl$Outbound,
  z.ZodTypeDef,
  PostV2LogsQuery2Response200ImageUrl
> = z.object({
  id: z.string().optional(),
  url: z.string(),
  detail: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ImageUrl$ {
  /** @deprecated use `PostV2LogsQuery2Response200ImageUrl$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ImageUrl$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ImageUrl$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ImageUrl$outboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ImageUrl$Outbound` instead. */
  export type Outbound = PostV2LogsQuery2Response200ImageUrl$Outbound;
}

export function postV2LogsQuery2Response200ImageUrlToJSON(
  postV2LogsQuery2Response200ImageUrl: PostV2LogsQuery2Response200ImageUrl,
): string {
  return JSON.stringify(
    PostV2LogsQuery2Response200ImageUrl$outboundSchema.parse(
      postV2LogsQuery2Response200ImageUrl,
    ),
  );
}

export function postV2LogsQuery2Response200ImageUrlFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQuery2Response200ImageUrl, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQuery2Response200ImageUrl$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQuery2Response200ImageUrl' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQuery2Response2002$inboundSchema: z.ZodType<
  PostV2LogsQuery2Response2002,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsType$inboundSchema,
  image_url: z.lazy(() => PostV2LogsQuery2Response200ImageUrl$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "image_url": "imageUrl",
  });
});

/** @internal */
export type PostV2LogsQuery2Response2002$Outbound = {
  type: string;
  image_url: PostV2LogsQuery2Response200ImageUrl$Outbound;
};

/** @internal */
export const PostV2LogsQuery2Response2002$outboundSchema: z.ZodType<
  PostV2LogsQuery2Response2002$Outbound,
  z.ZodTypeDef,
  PostV2LogsQuery2Response2002
> = z.object({
  type:
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItemsType$outboundSchema,
  imageUrl: z.lazy(() => PostV2LogsQuery2Response200ImageUrl$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    imageUrl: "image_url",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response2002$ {
  /** @deprecated use `PostV2LogsQuery2Response2002$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQuery2Response2002$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response2002$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQuery2Response2002$outboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response2002$Outbound` instead. */
  export type Outbound = PostV2LogsQuery2Response2002$Outbound;
}

export function postV2LogsQuery2Response2002ToJSON(
  postV2LogsQuery2Response2002: PostV2LogsQuery2Response2002,
): string {
  return JSON.stringify(
    PostV2LogsQuery2Response2002$outboundSchema.parse(
      postV2LogsQuery2Response2002,
    ),
  );
}

export function postV2LogsQuery2Response2002FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQuery2Response2002, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQuery2Response2002$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQuery2Response2002' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyType
  > = z.nativeEnum(PostV2LogsQuery2Response200ApplicationJSONResponseBodyType);

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyType
  > = PostV2LogsQuery2Response200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const PostV2LogsQuery2Response2001$inboundSchema: z.ZodType<
  PostV2LogsQuery2Response2001,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyType$inboundSchema,
  text: z.string(),
});

/** @internal */
export type PostV2LogsQuery2Response2001$Outbound = {
  type: string;
  text: string;
};

/** @internal */
export const PostV2LogsQuery2Response2001$outboundSchema: z.ZodType<
  PostV2LogsQuery2Response2001$Outbound,
  z.ZodTypeDef,
  PostV2LogsQuery2Response2001
> = z.object({
  type:
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyType$outboundSchema,
  text: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response2001$ {
  /** @deprecated use `PostV2LogsQuery2Response2001$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQuery2Response2001$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response2001$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQuery2Response2001$outboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response2001$Outbound` instead. */
  export type Outbound = PostV2LogsQuery2Response2001$Outbound;
}

export function postV2LogsQuery2Response2001ToJSON(
  postV2LogsQuery2Response2001: PostV2LogsQuery2Response2001,
): string {
  return JSON.stringify(
    PostV2LogsQuery2Response2001$outboundSchema.parse(
      postV2LogsQuery2Response2001,
    ),
  );
}

export function postV2LogsQuery2Response2001FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQuery2Response2001, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQuery2Response2001$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQuery2Response2001' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryContentResponse2002$inboundSchema: z.ZodType<
  PostV2LogsQueryContentResponse2002,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQuery2Response2001$inboundSchema),
  z.lazy(() => PostV2LogsQuery2Response2002$inboundSchema),
]);

/** @internal */
export type PostV2LogsQueryContentResponse2002$Outbound =
  | PostV2LogsQuery2Response2001$Outbound
  | PostV2LogsQuery2Response2002$Outbound;

/** @internal */
export const PostV2LogsQueryContentResponse2002$outboundSchema: z.ZodType<
  PostV2LogsQueryContentResponse2002$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryContentResponse2002
> = z.union([
  z.lazy(() => PostV2LogsQuery2Response2001$outboundSchema),
  z.lazy(() => PostV2LogsQuery2Response2002$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryContentResponse2002$ {
  /** @deprecated use `PostV2LogsQueryContentResponse2002$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryContentResponse2002$inboundSchema;
  /** @deprecated use `PostV2LogsQueryContentResponse2002$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryContentResponse2002$outboundSchema;
  /** @deprecated use `PostV2LogsQueryContentResponse2002$Outbound` instead. */
  export type Outbound = PostV2LogsQueryContentResponse2002$Outbound;
}

export function postV2LogsQueryContentResponse2002ToJSON(
  postV2LogsQueryContentResponse2002: PostV2LogsQueryContentResponse2002,
): string {
  return JSON.stringify(
    PostV2LogsQueryContentResponse2002$outboundSchema.parse(
      postV2LogsQueryContentResponse2002,
    ),
  );
}

export function postV2LogsQueryContentResponse2002FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryContentResponse2002, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryContentResponse2002$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryContentResponse2002' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseContent$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseContent,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() => PostV2LogsQuery2Response2001$inboundSchema),
    z.lazy(() => PostV2LogsQuery2Response2002$inboundSchema),
  ])),
]);

/** @internal */
export type PostV2LogsQueryItemsResponseContent$Outbound =
  | string
  | Array<
    | PostV2LogsQuery2Response2001$Outbound
    | PostV2LogsQuery2Response2002$Outbound
  >;

/** @internal */
export const PostV2LogsQueryItemsResponseContent$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseContent$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponseContent
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() => PostV2LogsQuery2Response2001$outboundSchema),
    z.lazy(() => PostV2LogsQuery2Response2002$outboundSchema),
  ])),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseContent$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseContent$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseContent$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseContent$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseContent$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseContent$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseContent$Outbound;
}

export function postV2LogsQueryItemsResponseContentToJSON(
  postV2LogsQueryItemsResponseContent: PostV2LogsQueryItemsResponseContent,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseContent$outboundSchema.parse(
      postV2LogsQueryItemsResponseContent,
    ),
  );
}

export function postV2LogsQueryItemsResponseContentFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsResponseContent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponseContent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsResponseContent' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4Type
  > = z.nativeEnum(
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4Type,
  );

/** @internal */
export const PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4Type
  > =
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4Type$ {
  /** @deprecated use `PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryItemsResponse200ApplicationJSONFunction$inboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsResponse200ApplicationJSONFunction,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/** @internal */
export type PostV2LogsQueryItemsResponse200ApplicationJSONFunction$Outbound = {
  name: string;
  arguments: string;
};

/** @internal */
export const PostV2LogsQueryItemsResponse200ApplicationJSONFunction$outboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsResponse200ApplicationJSONFunction$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryItemsResponse200ApplicationJSONFunction
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponse200ApplicationJSONFunction$ {
  /** @deprecated use `PostV2LogsQueryItemsResponse200ApplicationJSONFunction$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponse200ApplicationJSONFunction$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200ApplicationJSONFunction$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponse200ApplicationJSONFunction$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200ApplicationJSONFunction$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryItemsResponse200ApplicationJSONFunction$Outbound;
}

export function postV2LogsQueryItemsResponse200ApplicationJSONFunctionToJSON(
  postV2LogsQueryItemsResponse200ApplicationJSONFunction:
    PostV2LogsQueryItemsResponse200ApplicationJSONFunction,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponse200ApplicationJSONFunction$outboundSchema.parse(
      postV2LogsQueryItemsResponse200ApplicationJSONFunction,
    ),
  );
}

export function postV2LogsQueryItemsResponse200ApplicationJSONFunctionFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryItemsResponse200ApplicationJSONFunction,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponse200ApplicationJSONFunction$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsResponse200ApplicationJSONFunction' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseToolCalls$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseToolCalls,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type:
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4Type$inboundSchema,
  function: z.lazy(() =>
    PostV2LogsQueryItemsResponse200ApplicationJSONFunction$inboundSchema
  ),
});

/** @internal */
export type PostV2LogsQueryItemsResponseToolCalls$Outbound = {
  id?: string | undefined;
  index?: number | undefined;
  type: string;
  function: PostV2LogsQueryItemsResponse200ApplicationJSONFunction$Outbound;
};

/** @internal */
export const PostV2LogsQueryItemsResponseToolCalls$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseToolCalls$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponseToolCalls
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type:
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4Type$outboundSchema,
  function: z.lazy(() =>
    PostV2LogsQueryItemsResponse200ApplicationJSONFunction$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseToolCalls$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseToolCalls$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseToolCalls$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseToolCalls$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseToolCalls$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseToolCalls$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseToolCalls$Outbound;
}

export function postV2LogsQueryItemsResponseToolCallsToJSON(
  postV2LogsQueryItemsResponseToolCalls: PostV2LogsQueryItemsResponseToolCalls,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseToolCalls$outboundSchema.parse(
      postV2LogsQueryItemsResponseToolCalls,
    ),
  );
}

export function postV2LogsQueryItemsResponseToolCallsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsResponseToolCalls, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponseToolCalls$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsResponseToolCalls' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseMessages$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseMessages,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: PostV2LogsQueryItemsResponseRole$inboundSchema,
  content: z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => PostV2LogsQuery2Response2001$inboundSchema),
      z.lazy(() => PostV2LogsQuery2Response2002$inboundSchema),
    ])),
  ]),
  tool_calls: z.array(
    z.lazy(() => PostV2LogsQueryItemsResponseToolCalls$inboundSchema),
  ).optional(),
  id: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "tool_calls": "toolCalls",
  });
});

/** @internal */
export type PostV2LogsQueryItemsResponseMessages$Outbound = {
  role: string;
  content:
    | string
    | Array<
      | PostV2LogsQuery2Response2001$Outbound
      | PostV2LogsQuery2Response2002$Outbound
    >;
  tool_calls?:
    | Array<PostV2LogsQueryItemsResponseToolCalls$Outbound>
    | undefined;
  id?: string | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsResponseMessages$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseMessages$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponseMessages
> = z.object({
  role: PostV2LogsQueryItemsResponseRole$outboundSchema,
  content: z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => PostV2LogsQuery2Response2001$outboundSchema),
      z.lazy(() => PostV2LogsQuery2Response2002$outboundSchema),
    ])),
  ]),
  toolCalls: z.array(
    z.lazy(() => PostV2LogsQueryItemsResponseToolCalls$outboundSchema),
  ).optional(),
  id: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    toolCalls: "tool_calls",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseMessages$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseMessages$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseMessages$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseMessages$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseMessages$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseMessages$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseMessages$Outbound;
}

export function postV2LogsQueryItemsResponseMessagesToJSON(
  postV2LogsQueryItemsResponseMessages: PostV2LogsQueryItemsResponseMessages,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseMessages$outboundSchema.parse(
      postV2LogsQueryItemsResponseMessages,
    ),
  );
}

export function postV2LogsQueryItemsResponseMessagesFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsResponseMessages, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponseMessages$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsResponseMessages' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponsePromptConfig$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponsePromptConfig,
  z.ZodTypeDef,
  unknown
> = z.object({
  stream: z.boolean(),
  model: z.string(),
  model_db_id: z.string(),
  model_type: PostV2LogsQueryItemsResponseModelType$inboundSchema,
  model_parameters: z.lazy(() =>
    PostV2LogsQueryItemsResponseModelParameters$inboundSchema
  ),
  provider: PostV2LogsQueryItemsResponseProvider$inboundSchema,
  messages: z.array(
    z.lazy(() => PostV2LogsQueryItemsResponseMessages$inboundSchema),
  ),
  integration_id: z.nullable(z.string()).optional(),
  version: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "model_db_id": "modelDbId",
    "model_type": "modelType",
    "model_parameters": "modelParameters",
    "integration_id": "integrationId",
  });
});

/** @internal */
export type PostV2LogsQueryItemsResponsePromptConfig$Outbound = {
  stream: boolean;
  model: string;
  model_db_id: string;
  model_type: string;
  model_parameters: PostV2LogsQueryItemsResponseModelParameters$Outbound;
  provider: string;
  messages: Array<PostV2LogsQueryItemsResponseMessages$Outbound>;
  integration_id?: string | null | undefined;
  version?: string | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsResponsePromptConfig$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponsePromptConfig$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponsePromptConfig
> = z.object({
  stream: z.boolean(),
  model: z.string(),
  modelDbId: z.string(),
  modelType: PostV2LogsQueryItemsResponseModelType$outboundSchema,
  modelParameters: z.lazy(() =>
    PostV2LogsQueryItemsResponseModelParameters$outboundSchema
  ),
  provider: PostV2LogsQueryItemsResponseProvider$outboundSchema,
  messages: z.array(
    z.lazy(() => PostV2LogsQueryItemsResponseMessages$outboundSchema),
  ),
  integrationId: z.nullable(z.string()).optional(),
  version: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    modelDbId: "model_db_id",
    modelType: "model_type",
    modelParameters: "model_parameters",
    integrationId: "integration_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponsePromptConfig$ {
  /** @deprecated use `PostV2LogsQueryItemsResponsePromptConfig$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponsePromptConfig$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponsePromptConfig$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponsePromptConfig$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponsePromptConfig$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponsePromptConfig$Outbound;
}

export function postV2LogsQueryItemsResponsePromptConfigToJSON(
  postV2LogsQueryItemsResponsePromptConfig:
    PostV2LogsQueryItemsResponsePromptConfig,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponsePromptConfig$outboundSchema.parse(
      postV2LogsQueryItemsResponsePromptConfig,
    ),
  );
}

export function postV2LogsQueryItemsResponsePromptConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryItemsResponsePromptConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponsePromptConfig$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryItemsResponsePromptConfig' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsVariables$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsVariables,
  z.ZodTypeDef,
  unknown
> = z.object({
  key: z.string(),
  value: z.any().optional(),
  is_pii: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    "is_pii": "isPii",
  });
});

/** @internal */
export type PostV2LogsQueryItemsVariables$Outbound = {
  key: string;
  value?: any | undefined;
  is_pii: boolean;
};

/** @internal */
export const PostV2LogsQueryItemsVariables$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsVariables$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsVariables
> = z.object({
  key: z.string(),
  value: z.any().optional(),
  isPii: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    isPii: "is_pii",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsVariables$ {
  /** @deprecated use `PostV2LogsQueryItemsVariables$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsVariables$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsVariables$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsVariables$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsVariables$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsVariables$Outbound;
}

export function postV2LogsQueryItemsVariablesToJSON(
  postV2LogsQueryItemsVariables: PostV2LogsQueryItemsVariables,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsVariables$outboundSchema.parse(
      postV2LogsQueryItemsVariables,
    ),
  );
}

export function postV2LogsQueryItemsVariablesFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsVariables, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsVariables$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsVariables' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponsePerformance$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponsePerformance,
  z.ZodTypeDef,
  unknown
> = z.object({
  latency: z.number(),
  first_time_to_token: z.nullable(z.number()).optional(),
  tokens_per_second: z.nullable(z.number()).optional(),
}).transform((v) => {
  return remap$(v, {
    "first_time_to_token": "firstTimeToToken",
    "tokens_per_second": "tokensPerSecond",
  });
});

/** @internal */
export type PostV2LogsQueryItemsResponsePerformance$Outbound = {
  latency: number;
  first_time_to_token?: number | null | undefined;
  tokens_per_second?: number | null | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsResponsePerformance$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponsePerformance$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponsePerformance
> = z.object({
  latency: z.number(),
  firstTimeToToken: z.nullable(z.number()).optional(),
  tokensPerSecond: z.nullable(z.number()).optional(),
}).transform((v) => {
  return remap$(v, {
    firstTimeToToken: "first_time_to_token",
    tokensPerSecond: "tokens_per_second",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponsePerformance$ {
  /** @deprecated use `PostV2LogsQueryItemsResponsePerformance$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponsePerformance$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponsePerformance$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponsePerformance$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponsePerformance$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponsePerformance$Outbound;
}

export function postV2LogsQueryItemsResponsePerformanceToJSON(
  postV2LogsQueryItemsResponsePerformance:
    PostV2LogsQueryItemsResponsePerformance,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponsePerformance$outboundSchema.parse(
      postV2LogsQueryItemsResponsePerformance,
    ),
  );
}

export function postV2LogsQueryItemsResponsePerformanceFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryItemsResponsePerformance,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponsePerformance$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryItemsResponsePerformance' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsPromptTokensDetails$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsPromptTokensDetails,
  z.ZodTypeDef,
  unknown
> = z.object({
  cached_tokens: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    "cached_tokens": "cachedTokens",
  });
});

/** @internal */
export type PostV2LogsQueryItemsPromptTokensDetails$Outbound = {
  cached_tokens?: number | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsPromptTokensDetails$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsPromptTokensDetails$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsPromptTokensDetails
> = z.object({
  cachedTokens: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    cachedTokens: "cached_tokens",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsPromptTokensDetails$ {
  /** @deprecated use `PostV2LogsQueryItemsPromptTokensDetails$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsPromptTokensDetails$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsPromptTokensDetails$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsPromptTokensDetails$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsPromptTokensDetails$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsPromptTokensDetails$Outbound;
}

export function postV2LogsQueryItemsPromptTokensDetailsToJSON(
  postV2LogsQueryItemsPromptTokensDetails:
    PostV2LogsQueryItemsPromptTokensDetails,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsPromptTokensDetails$outboundSchema.parse(
      postV2LogsQueryItemsPromptTokensDetails,
    ),
  );
}

export function postV2LogsQueryItemsPromptTokensDetailsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryItemsPromptTokensDetails,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsPromptTokensDetails$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryItemsPromptTokensDetails' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsCompletionTokensDetails$inboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsCompletionTokensDetails,
    z.ZodTypeDef,
    unknown
  > = z.object({
    reasoning_tokens: z.number().optional(),
  }).transform((v) => {
    return remap$(v, {
      "reasoning_tokens": "reasoningTokens",
    });
  });

/** @internal */
export type PostV2LogsQueryItemsCompletionTokensDetails$Outbound = {
  reasoning_tokens?: number | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsCompletionTokensDetails$outboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsCompletionTokensDetails$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryItemsCompletionTokensDetails
  > = z.object({
    reasoningTokens: z.number().optional(),
  }).transform((v) => {
    return remap$(v, {
      reasoningTokens: "reasoning_tokens",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsCompletionTokensDetails$ {
  /** @deprecated use `PostV2LogsQueryItemsCompletionTokensDetails$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsCompletionTokensDetails$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsCompletionTokensDetails$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsCompletionTokensDetails$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsCompletionTokensDetails$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsCompletionTokensDetails$Outbound;
}

export function postV2LogsQueryItemsCompletionTokensDetailsToJSON(
  postV2LogsQueryItemsCompletionTokensDetails:
    PostV2LogsQueryItemsCompletionTokensDetails,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsCompletionTokensDetails$outboundSchema.parse(
      postV2LogsQueryItemsCompletionTokensDetails,
    ),
  );
}

export function postV2LogsQueryItemsCompletionTokensDetailsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryItemsCompletionTokensDetails,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsCompletionTokensDetails$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryItemsCompletionTokensDetails' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseUsage$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseUsage,
  z.ZodTypeDef,
  unknown
> = z.object({
  total_tokens: z.number().optional(),
  prompt_tokens: z.number().optional(),
  completion_tokens: z.number().optional(),
  prompt_tokens_details: z.lazy(() =>
    PostV2LogsQueryItemsPromptTokensDetails$inboundSchema
  ).optional(),
  completion_tokens_details: z.lazy(() =>
    PostV2LogsQueryItemsCompletionTokensDetails$inboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "total_tokens": "totalTokens",
    "prompt_tokens": "promptTokens",
    "completion_tokens": "completionTokens",
    "prompt_tokens_details": "promptTokensDetails",
    "completion_tokens_details": "completionTokensDetails",
  });
});

/** @internal */
export type PostV2LogsQueryItemsResponseUsage$Outbound = {
  total_tokens?: number | undefined;
  prompt_tokens?: number | undefined;
  completion_tokens?: number | undefined;
  prompt_tokens_details?:
    | PostV2LogsQueryItemsPromptTokensDetails$Outbound
    | undefined;
  completion_tokens_details?:
    | PostV2LogsQueryItemsCompletionTokensDetails$Outbound
    | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsResponseUsage$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseUsage$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponseUsage
> = z.object({
  totalTokens: z.number().optional(),
  promptTokens: z.number().optional(),
  completionTokens: z.number().optional(),
  promptTokensDetails: z.lazy(() =>
    PostV2LogsQueryItemsPromptTokensDetails$outboundSchema
  ).optional(),
  completionTokensDetails: z.lazy(() =>
    PostV2LogsQueryItemsCompletionTokensDetails$outboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    totalTokens: "total_tokens",
    promptTokens: "prompt_tokens",
    completionTokens: "completion_tokens",
    promptTokensDetails: "prompt_tokens_details",
    completionTokensDetails: "completion_tokens_details",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseUsage$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseUsage$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsResponseUsage$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseUsage$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseUsage$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseUsage$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseUsage$Outbound;
}

export function postV2LogsQueryItemsResponseUsageToJSON(
  postV2LogsQueryItemsResponseUsage: PostV2LogsQueryItemsResponseUsage,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseUsage$outboundSchema.parse(
      postV2LogsQueryItemsResponseUsage,
    ),
  );
}

export function postV2LogsQueryItemsResponseUsageFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsResponseUsage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsResponseUsage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsResponseUsage' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsBilling$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsBilling,
  z.ZodTypeDef,
  unknown
> = z.object({
  total_cost: z.nullable(z.number()).optional(),
  input_cost: z.nullable(z.number()).optional(),
  output_cost: z.nullable(z.number()).optional(),
  billable: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    "total_cost": "totalCost",
    "input_cost": "inputCost",
    "output_cost": "outputCost",
  });
});

/** @internal */
export type PostV2LogsQueryItemsBilling$Outbound = {
  total_cost?: number | null | undefined;
  input_cost?: number | null | undefined;
  output_cost?: number | null | undefined;
  billable: boolean;
};

/** @internal */
export const PostV2LogsQueryItemsBilling$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsBilling$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsBilling
> = z.object({
  totalCost: z.nullable(z.number()).optional(),
  inputCost: z.nullable(z.number()).optional(),
  outputCost: z.nullable(z.number()).optional(),
  billable: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    totalCost: "total_cost",
    inputCost: "input_cost",
    outputCost: "output_cost",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsBilling$ {
  /** @deprecated use `PostV2LogsQueryItemsBilling$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsBilling$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsBilling$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsBilling$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsBilling$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsBilling$Outbound;
}

export function postV2LogsQueryItemsBillingToJSON(
  postV2LogsQueryItemsBilling: PostV2LogsQueryItemsBilling,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsBilling$outboundSchema.parse(
      postV2LogsQueryItemsBilling,
    ),
  );
}

export function postV2LogsQueryItemsBillingFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsBilling, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsBilling$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsBilling' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponse200Metadata$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponse200Metadata,
  z.ZodTypeDef,
  unknown
> = z.object({
  datasource_id: z.string(),
  chunk_id: z.string(),
  file_name: z.string(),
  page_number: z.nullable(z.number()).optional(),
  file_type: z.string(),
}).transform((v) => {
  return remap$(v, {
    "datasource_id": "datasourceId",
    "chunk_id": "chunkId",
    "file_name": "fileName",
    "page_number": "pageNumber",
    "file_type": "fileType",
  });
});

/** @internal */
export type PostV2LogsQueryItemsResponse200Metadata$Outbound = {
  datasource_id: string;
  chunk_id: string;
  file_name: string;
  page_number?: number | null | undefined;
  file_type: string;
};

/** @internal */
export const PostV2LogsQueryItemsResponse200Metadata$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponse200Metadata$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponse200Metadata
> = z.object({
  datasourceId: z.string(),
  chunkId: z.string(),
  fileName: z.string(),
  pageNumber: z.nullable(z.number()).optional(),
  fileType: z.string(),
}).transform((v) => {
  return remap$(v, {
    datasourceId: "datasource_id",
    chunkId: "chunk_id",
    fileName: "file_name",
    pageNumber: "page_number",
    fileType: "file_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponse200Metadata$ {
  /** @deprecated use `PostV2LogsQueryItemsResponse200Metadata$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponse200Metadata$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200Metadata$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponse200Metadata$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200Metadata$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponse200Metadata$Outbound;
}

export function postV2LogsQueryItemsResponse200MetadataToJSON(
  postV2LogsQueryItemsResponse200Metadata:
    PostV2LogsQueryItemsResponse200Metadata,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponse200Metadata$outboundSchema.parse(
      postV2LogsQueryItemsResponse200Metadata,
    ),
  );
}

export function postV2LogsQueryItemsResponse200MetadataFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryItemsResponse200Metadata,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponse200Metadata$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryItemsResponse200Metadata' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsDocuments$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsDocuments,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  text: z.string(),
  metadata: z.lazy(() => PostV2LogsQueryItemsResponse200Metadata$inboundSchema),
  score: z.number(),
  rerank_score: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    "rerank_score": "rerankScore",
  });
});

/** @internal */
export type PostV2LogsQueryItemsDocuments$Outbound = {
  id: string;
  text: string;
  metadata: PostV2LogsQueryItemsResponse200Metadata$Outbound;
  score: number;
  rerank_score?: number | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsDocuments$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsDocuments$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsDocuments
> = z.object({
  id: z.string(),
  text: z.string(),
  metadata: z.lazy(() =>
    PostV2LogsQueryItemsResponse200Metadata$outboundSchema
  ),
  score: z.number(),
  rerankScore: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    rerankScore: "rerank_score",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsDocuments$ {
  /** @deprecated use `PostV2LogsQueryItemsDocuments$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsDocuments$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsDocuments$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsDocuments$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsDocuments$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsDocuments$Outbound;
}

export function postV2LogsQueryItemsDocumentsToJSON(
  postV2LogsQueryItemsDocuments: PostV2LogsQueryItemsDocuments,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsDocuments$outboundSchema.parse(
      postV2LogsQueryItemsDocuments,
    ),
  );
}

export function postV2LogsQueryItemsDocumentsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsDocuments, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsDocuments$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsDocuments' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseRetrievals$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseRetrievals,
  z.ZodTypeDef,
  unknown
> = z.object({
  knowledge_id: z.string(),
  documents: z.array(z.lazy(() => PostV2LogsQueryItemsDocuments$inboundSchema)),
  knowledge_key: z.string(),
  query: z.string(),
}).transform((v) => {
  return remap$(v, {
    "knowledge_id": "knowledgeId",
    "knowledge_key": "knowledgeKey",
  });
});

/** @internal */
export type PostV2LogsQueryItemsResponseRetrievals$Outbound = {
  knowledge_id: string;
  documents: Array<PostV2LogsQueryItemsDocuments$Outbound>;
  knowledge_key: string;
  query: string;
};

/** @internal */
export const PostV2LogsQueryItemsResponseRetrievals$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseRetrievals$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponseRetrievals
> = z.object({
  knowledgeId: z.string(),
  documents: z.array(
    z.lazy(() => PostV2LogsQueryItemsDocuments$outboundSchema),
  ),
  knowledgeKey: z.string(),
  query: z.string(),
}).transform((v) => {
  return remap$(v, {
    knowledgeId: "knowledge_id",
    knowledgeKey: "knowledge_key",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseRetrievals$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseRetrievals$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseRetrievals$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseRetrievals$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseRetrievals$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseRetrievals$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseRetrievals$Outbound;
}

export function postV2LogsQueryItemsResponseRetrievalsToJSON(
  postV2LogsQueryItemsResponseRetrievals:
    PostV2LogsQueryItemsResponseRetrievals,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseRetrievals$outboundSchema.parse(
      postV2LogsQueryItemsResponseRetrievals,
    ),
  );
}

export function postV2LogsQueryItemsResponseRetrievalsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsResponseRetrievals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponseRetrievals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsResponseRetrievals' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyType
  > =
    PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryConfigurationResponse2$inboundSchema: z.ZodType<
  PostV2LogsQueryConfigurationResponse2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyType$inboundSchema,
  query: z.string(),
});

/** @internal */
export type PostV2LogsQueryConfigurationResponse2$Outbound = {
  type: string;
  query: string;
};

/** @internal */
export const PostV2LogsQueryConfigurationResponse2$outboundSchema: z.ZodType<
  PostV2LogsQueryConfigurationResponse2$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryConfigurationResponse2
> = z.object({
  type:
    PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyType$outboundSchema,
  query: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryConfigurationResponse2$ {
  /** @deprecated use `PostV2LogsQueryConfigurationResponse2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryConfigurationResponse2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryConfigurationResponse2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryConfigurationResponse2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryConfigurationResponse2$Outbound` instead. */
  export type Outbound = PostV2LogsQueryConfigurationResponse2$Outbound;
}

export function postV2LogsQueryConfigurationResponse2ToJSON(
  postV2LogsQueryConfigurationResponse2: PostV2LogsQueryConfigurationResponse2,
): string {
  return JSON.stringify(
    PostV2LogsQueryConfigurationResponse2$outboundSchema.parse(
      postV2LogsQueryConfigurationResponse2,
    ),
  );
}

export function postV2LogsQueryConfigurationResponse2FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryConfigurationResponse2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryConfigurationResponse2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryConfigurationResponse2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryConfigurationResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryConfigurationResponse200ApplicationJSONType
  > = z.nativeEnum(PostV2LogsQueryConfigurationResponse200ApplicationJSONType);

/** @internal */
export const PostV2LogsQueryConfigurationResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryConfigurationResponse200ApplicationJSONType
  > = PostV2LogsQueryConfigurationResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryConfigurationResponse200ApplicationJSONType$ {
  /** @deprecated use `PostV2LogsQueryConfigurationResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryConfigurationResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryConfigurationResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryConfigurationResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryConfigurationResponse1$inboundSchema: z.ZodType<
  PostV2LogsQueryConfigurationResponse1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryConfigurationResponse200ApplicationJSONType$inboundSchema,
});

/** @internal */
export type PostV2LogsQueryConfigurationResponse1$Outbound = {
  type: string;
};

/** @internal */
export const PostV2LogsQueryConfigurationResponse1$outboundSchema: z.ZodType<
  PostV2LogsQueryConfigurationResponse1$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryConfigurationResponse1
> = z.object({
  type:
    PostV2LogsQueryConfigurationResponse200ApplicationJSONType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryConfigurationResponse1$ {
  /** @deprecated use `PostV2LogsQueryConfigurationResponse1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryConfigurationResponse1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryConfigurationResponse1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryConfigurationResponse1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryConfigurationResponse1$Outbound` instead. */
  export type Outbound = PostV2LogsQueryConfigurationResponse1$Outbound;
}

export function postV2LogsQueryConfigurationResponse1ToJSON(
  postV2LogsQueryConfigurationResponse1: PostV2LogsQueryConfigurationResponse1,
): string {
  return JSON.stringify(
    PostV2LogsQueryConfigurationResponse1$outboundSchema.parse(
      postV2LogsQueryConfigurationResponse1,
    ),
  );
}

export function postV2LogsQueryConfigurationResponse1FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryConfigurationResponse1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryConfigurationResponse1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryConfigurationResponse1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsConfiguration$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsConfiguration,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQueryConfigurationResponse1$inboundSchema),
  z.lazy(() => PostV2LogsQueryConfigurationResponse2$inboundSchema),
]);

/** @internal */
export type PostV2LogsQueryItemsConfiguration$Outbound =
  | PostV2LogsQueryConfigurationResponse1$Outbound
  | PostV2LogsQueryConfigurationResponse2$Outbound;

/** @internal */
export const PostV2LogsQueryItemsConfiguration$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsConfiguration$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsConfiguration
> = z.union([
  z.lazy(() => PostV2LogsQueryConfigurationResponse1$outboundSchema),
  z.lazy(() => PostV2LogsQueryConfigurationResponse2$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsConfiguration$ {
  /** @deprecated use `PostV2LogsQueryItemsConfiguration$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsConfiguration$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsConfiguration$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsConfiguration$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsConfiguration$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsConfiguration$Outbound;
}

export function postV2LogsQueryItemsConfigurationToJSON(
  postV2LogsQueryItemsConfiguration: PostV2LogsQueryItemsConfiguration,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsConfiguration$outboundSchema.parse(
      postV2LogsQueryItemsConfiguration,
    ),
  );
}

export function postV2LogsQueryItemsConfigurationFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsConfiguration, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsConfiguration$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsConfiguration' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsKnowledgeBases$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsKnowledgeBases,
  z.ZodTypeDef,
  unknown
> = z.object({
  knowledge_id: z.string(),
  configuration: z.union([
    z.lazy(() => PostV2LogsQueryConfigurationResponse1$inboundSchema),
    z.lazy(() => PostV2LogsQueryConfigurationResponse2$inboundSchema),
  ]),
}).transform((v) => {
  return remap$(v, {
    "knowledge_id": "knowledgeId",
  });
});

/** @internal */
export type PostV2LogsQueryItemsKnowledgeBases$Outbound = {
  knowledge_id: string;
  configuration:
    | PostV2LogsQueryConfigurationResponse1$Outbound
    | PostV2LogsQueryConfigurationResponse2$Outbound;
};

/** @internal */
export const PostV2LogsQueryItemsKnowledgeBases$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsKnowledgeBases$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsKnowledgeBases
> = z.object({
  knowledgeId: z.string(),
  configuration: z.union([
    z.lazy(() => PostV2LogsQueryConfigurationResponse1$outboundSchema),
    z.lazy(() => PostV2LogsQueryConfigurationResponse2$outboundSchema),
  ]),
}).transform((v) => {
  return remap$(v, {
    knowledgeId: "knowledge_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsKnowledgeBases$ {
  /** @deprecated use `PostV2LogsQueryItemsKnowledgeBases$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsKnowledgeBases$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsKnowledgeBases$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsKnowledgeBases$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsKnowledgeBases$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsKnowledgeBases$Outbound;
}

export function postV2LogsQueryItemsKnowledgeBasesToJSON(
  postV2LogsQueryItemsKnowledgeBases: PostV2LogsQueryItemsKnowledgeBases,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsKnowledgeBases$outboundSchema.parse(
      postV2LogsQueryItemsKnowledgeBases,
    ),
  );
}

export function postV2LogsQueryItemsKnowledgeBasesFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsKnowledgeBases, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsKnowledgeBases$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsKnowledgeBases' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsResponseType
> = z.nativeEnum(PostV2LogsQueryItemsResponseType);

/** @internal */
export const PostV2LogsQueryItemsResponseType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsResponseType
> = PostV2LogsQueryItemsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseType$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseType$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsResponseType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseType$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsResponseType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4DataType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4DataType
  > = z.nativeEnum(
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4DataType,
  );

/** @internal */
export const PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4DataType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4DataType
  > =
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4DataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4DataType$ {
  /** @deprecated use `PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4DataType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4DataType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4DataType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4DataType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryItemsResponseParameters$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseParameters,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4DataType$inboundSchema,
  properties: z.record(z.any()),
  required: z.array(z.string()).optional(),
  additionalProperties: z.boolean().optional(),
});

/** @internal */
export type PostV2LogsQueryItemsResponseParameters$Outbound = {
  type: string;
  properties: { [k: string]: any };
  required?: Array<string> | undefined;
  additionalProperties?: boolean | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsResponseParameters$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseParameters$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponseParameters
> = z.object({
  type:
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody4DataType$outboundSchema,
  properties: z.record(z.any()),
  required: z.array(z.string()).optional(),
  additionalProperties: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseParameters$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseParameters$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseParameters$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseParameters$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseParameters$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseParameters$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseParameters$Outbound;
}

export function postV2LogsQueryItemsResponseParametersToJSON(
  postV2LogsQueryItemsResponseParameters:
    PostV2LogsQueryItemsResponseParameters,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseParameters$outboundSchema.parse(
      postV2LogsQueryItemsResponseParameters,
    ),
  );
}

export function postV2LogsQueryItemsResponseParametersFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsResponseParameters, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponseParameters$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsResponseParameters' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseFunction$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseFunction,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  description: z.string().optional(),
  strict: z.boolean().optional(),
  parameters: z.lazy(() =>
    PostV2LogsQueryItemsResponseParameters$inboundSchema
  ),
});

/** @internal */
export type PostV2LogsQueryItemsResponseFunction$Outbound = {
  name: string;
  description?: string | undefined;
  strict?: boolean | undefined;
  parameters: PostV2LogsQueryItemsResponseParameters$Outbound;
};

/** @internal */
export const PostV2LogsQueryItemsResponseFunction$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseFunction$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponseFunction
> = z.object({
  name: z.string(),
  description: z.string().optional(),
  strict: z.boolean().optional(),
  parameters: z.lazy(() =>
    PostV2LogsQueryItemsResponseParameters$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseFunction$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseFunction$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseFunction$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseFunction$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseFunction$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseFunction$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseFunction$Outbound;
}

export function postV2LogsQueryItemsResponseFunctionToJSON(
  postV2LogsQueryItemsResponseFunction: PostV2LogsQueryItemsResponseFunction,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseFunction$outboundSchema.parse(
      postV2LogsQueryItemsResponseFunction,
    ),
  );
}

export function postV2LogsQueryItemsResponseFunctionFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsResponseFunction, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponseFunction$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsResponseFunction' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseTools$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseTools,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PostV2LogsQueryItemsResponseType$inboundSchema,
  function: z.lazy(() => PostV2LogsQueryItemsResponseFunction$inboundSchema),
});

/** @internal */
export type PostV2LogsQueryItemsResponseTools$Outbound = {
  type: string;
  function: PostV2LogsQueryItemsResponseFunction$Outbound;
};

/** @internal */
export const PostV2LogsQueryItemsResponseTools$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseTools$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponseTools
> = z.object({
  type: PostV2LogsQueryItemsResponseType$outboundSchema,
  function: z.lazy(() => PostV2LogsQueryItemsResponseFunction$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseTools$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseTools$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsResponseTools$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseTools$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseTools$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseTools$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseTools$Outbound;
}

export function postV2LogsQueryItemsResponseToolsToJSON(
  postV2LogsQueryItemsResponseTools: PostV2LogsQueryItemsResponseTools,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseTools$outboundSchema.parse(
      postV2LogsQueryItemsResponseTools,
    ),
  );
}

export function postV2LogsQueryItemsResponseToolsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsResponseTools, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsResponseTools$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsResponseTools' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsPromptSnippets$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsPromptSnippets,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  key: z.string(),
  value: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
  });
});

/** @internal */
export type PostV2LogsQueryItemsPromptSnippets$Outbound = {
  _id: string;
  key: string;
  value: string;
};

/** @internal */
export const PostV2LogsQueryItemsPromptSnippets$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsPromptSnippets$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsPromptSnippets
> = z.object({
  id: z.string(),
  key: z.string(),
  value: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsPromptSnippets$ {
  /** @deprecated use `PostV2LogsQueryItemsPromptSnippets$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsPromptSnippets$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsPromptSnippets$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsPromptSnippets$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsPromptSnippets$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsPromptSnippets$Outbound;
}

export function postV2LogsQueryItemsPromptSnippetsToJSON(
  postV2LogsQueryItemsPromptSnippets: PostV2LogsQueryItemsPromptSnippets,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsPromptSnippets$outboundSchema.parse(
      postV2LogsQueryItemsPromptSnippets,
    ),
  );
}

export function postV2LogsQueryItemsPromptSnippetsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsPromptSnippets, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsPromptSnippets$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsPromptSnippets' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponse200Data$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponse200Data,
  z.ZodTypeDef,
  unknown
> = z.object({
  choices: z.array(
    z.lazy(() => PostV2LogsQueryItemsResponseChoices$inboundSchema),
  ).optional(),
  action: PostV2LogsQueryItemsResponseAction$inboundSchema.default("invoke"),
  integration_ids: z.array(z.string()).optional(),
  prompt_config: z.lazy(() =>
    PostV2LogsQueryItemsResponsePromptConfig$inboundSchema
  ),
  variables: z.array(z.lazy(() => PostV2LogsQueryItemsVariables$inboundSchema)),
  performance: z.lazy(() =>
    PostV2LogsQueryItemsResponsePerformance$inboundSchema
  ).optional(),
  usage: z.lazy(() => PostV2LogsQueryItemsResponseUsage$inboundSchema)
    .optional(),
  billing: z.lazy(() => PostV2LogsQueryItemsBilling$inboundSchema).optional(),
  provider_response: z.any().optional(),
  retrievals: z.array(
    z.lazy(() => PostV2LogsQueryItemsResponseRetrievals$inboundSchema),
  ).optional(),
  knowledge_bases: z.array(
    z.lazy(() => PostV2LogsQueryItemsKnowledgeBases$inboundSchema),
  ).optional(),
  tools: z.array(z.lazy(() => PostV2LogsQueryItemsResponseTools$inboundSchema))
    .optional(),
  prompt_snippets: z.array(
    z.lazy(() => PostV2LogsQueryItemsPromptSnippets$inboundSchema),
  ),
}).transform((v) => {
  return remap$(v, {
    "integration_ids": "integrationIds",
    "prompt_config": "promptConfig",
    "provider_response": "providerResponse",
    "knowledge_bases": "knowledgeBases",
    "prompt_snippets": "promptSnippets",
  });
});

/** @internal */
export type PostV2LogsQueryItemsResponse200Data$Outbound = {
  choices?: Array<PostV2LogsQueryItemsResponseChoices$Outbound> | undefined;
  action: string;
  integration_ids?: Array<string> | undefined;
  prompt_config: PostV2LogsQueryItemsResponsePromptConfig$Outbound;
  variables: Array<PostV2LogsQueryItemsVariables$Outbound>;
  performance?: PostV2LogsQueryItemsResponsePerformance$Outbound | undefined;
  usage?: PostV2LogsQueryItemsResponseUsage$Outbound | undefined;
  billing?: PostV2LogsQueryItemsBilling$Outbound | undefined;
  provider_response?: any | undefined;
  retrievals?:
    | Array<PostV2LogsQueryItemsResponseRetrievals$Outbound>
    | undefined;
  knowledge_bases?:
    | Array<PostV2LogsQueryItemsKnowledgeBases$Outbound>
    | undefined;
  tools?: Array<PostV2LogsQueryItemsResponseTools$Outbound> | undefined;
  prompt_snippets: Array<PostV2LogsQueryItemsPromptSnippets$Outbound>;
};

/** @internal */
export const PostV2LogsQueryItemsResponse200Data$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponse200Data$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponse200Data
> = z.object({
  choices: z.array(
    z.lazy(() => PostV2LogsQueryItemsResponseChoices$outboundSchema),
  ).optional(),
  action: PostV2LogsQueryItemsResponseAction$outboundSchema.default("invoke"),
  integrationIds: z.array(z.string()).optional(),
  promptConfig: z.lazy(() =>
    PostV2LogsQueryItemsResponsePromptConfig$outboundSchema
  ),
  variables: z.array(
    z.lazy(() => PostV2LogsQueryItemsVariables$outboundSchema),
  ),
  performance: z.lazy(() =>
    PostV2LogsQueryItemsResponsePerformance$outboundSchema
  ).optional(),
  usage: z.lazy(() => PostV2LogsQueryItemsResponseUsage$outboundSchema)
    .optional(),
  billing: z.lazy(() => PostV2LogsQueryItemsBilling$outboundSchema).optional(),
  providerResponse: z.any().optional(),
  retrievals: z.array(
    z.lazy(() => PostV2LogsQueryItemsResponseRetrievals$outboundSchema),
  ).optional(),
  knowledgeBases: z.array(
    z.lazy(() => PostV2LogsQueryItemsKnowledgeBases$outboundSchema),
  ).optional(),
  tools: z.array(z.lazy(() => PostV2LogsQueryItemsResponseTools$outboundSchema))
    .optional(),
  promptSnippets: z.array(
    z.lazy(() => PostV2LogsQueryItemsPromptSnippets$outboundSchema),
  ),
}).transform((v) => {
  return remap$(v, {
    integrationIds: "integration_ids",
    promptConfig: "prompt_config",
    providerResponse: "provider_response",
    knowledgeBases: "knowledge_bases",
    promptSnippets: "prompt_snippets",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponse200Data$ {
  /** @deprecated use `PostV2LogsQueryItemsResponse200Data$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponse200Data$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200Data$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponse200Data$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200Data$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponse200Data$Outbound;
}

export function postV2LogsQueryItemsResponse200DataToJSON(
  postV2LogsQueryItemsResponse200Data: PostV2LogsQueryItemsResponse200Data,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponse200Data$outboundSchema.parse(
      postV2LogsQueryItemsResponse200Data,
    ),
  );
}

export function postV2LogsQueryItemsResponse200DataFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsResponse200Data, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponse200Data$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsResponse200Data' from JSON`,
  );
}

/** @internal */
export const Items4$inboundSchema: z.ZodType<Items4, z.ZodTypeDef, unknown> = z
  .object({
    _id: z.string(),
    workspace_id: z.string(),
    workflow_metadata: z.record(z.any()).optional(),
    workflow_input: z.record(z.any()).optional(),
    workflow_output: z.record(z.any()).optional(),
    project_id: z.string().optional(),
    request_properties: z.lazy(() =>
      PostV2LogsQueryItemsResponseRequestProperties$inboundSchema
    ).optional(),
    started_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    finished_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    evals: z.array(
      z.union([
        z.lazy(() => PostV2LogsQueryEvalsResponse2001$inboundSchema),
        z.lazy(() => PostV2LogsQueryEvalsResponse2002$inboundSchema),
        z.lazy(() => PostV2LogsQueryEvalsResponse2003$inboundSchema),
        z.lazy(() => PostV2LogsQueryEvalsResponse2004$inboundSchema),
        z.lazy(() => PostV2LogsQueryEvalsResponse2005$inboundSchema),
        z.lazy(() => PostV2LogsQueryEvalsResponse2006$inboundSchema),
        z.lazy(() => PostV2LogsQueryEvalsResponse2007$inboundSchema),
      ]),
    ),
    product_type: PostV2LogsQueryItemsResponseProductType$inboundSchema,
    related_entities: z.array(
      z.union([
        z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse2001$inboundSchema),
        z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse2002$inboundSchema),
        z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse2003$inboundSchema),
        z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse4$inboundSchema),
        z.lazy(() => PostV2LogsQueryRelatedEntities5$inboundSchema),
      ]),
    ),
    data: z.lazy(() => PostV2LogsQueryItemsResponse200Data$inboundSchema),
  }).transform((v) => {
    return remap$(v, {
      "_id": "id",
      "workspace_id": "workspaceId",
      "workflow_metadata": "workflowMetadata",
      "workflow_input": "workflowInput",
      "workflow_output": "workflowOutput",
      "project_id": "projectId",
      "request_properties": "requestProperties",
      "started_at": "startedAt",
      "finished_at": "finishedAt",
      "product_type": "productType",
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type Items4$Outbound = {
  _id: string;
  workspace_id: string;
  workflow_metadata?: { [k: string]: any } | undefined;
  workflow_input?: { [k: string]: any } | undefined;
  workflow_output?: { [k: string]: any } | undefined;
  project_id?: string | undefined;
  request_properties?:
    | PostV2LogsQueryItemsResponseRequestProperties$Outbound
    | undefined;
  started_at: string;
  finished_at?: string | undefined;
  evals: Array<
    | PostV2LogsQueryEvalsResponse2001$Outbound
    | PostV2LogsQueryEvalsResponse2002$Outbound
    | PostV2LogsQueryEvalsResponse2003$Outbound
    | PostV2LogsQueryEvalsResponse2004$Outbound
    | PostV2LogsQueryEvalsResponse2005$Outbound
    | PostV2LogsQueryEvalsResponse2006$Outbound
    | PostV2LogsQueryEvalsResponse2007$Outbound
  >;
  product_type: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse2001$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse2002$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse2003$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse4$Outbound
    | PostV2LogsQueryRelatedEntities5$Outbound
  >;
  data: PostV2LogsQueryItemsResponse200Data$Outbound;
};

/** @internal */
export const Items4$outboundSchema: z.ZodType<
  Items4$Outbound,
  z.ZodTypeDef,
  Items4
> = z.object({
  id: z.string(),
  workspaceId: z.string(),
  workflowMetadata: z.record(z.any()).optional(),
  workflowInput: z.record(z.any()).optional(),
  workflowOutput: z.record(z.any()).optional(),
  projectId: z.string().optional(),
  requestProperties: z.lazy(() =>
    PostV2LogsQueryItemsResponseRequestProperties$outboundSchema
  ).optional(),
  startedAt: z.date().transform(v => v.toISOString()),
  finishedAt: z.date().transform(v => v.toISOString()).optional(),
  evals: z.array(
    z.union([
      z.lazy(() => PostV2LogsQueryEvalsResponse2001$outboundSchema),
      z.lazy(() => PostV2LogsQueryEvalsResponse2002$outboundSchema),
      z.lazy(() => PostV2LogsQueryEvalsResponse2003$outboundSchema),
      z.lazy(() => PostV2LogsQueryEvalsResponse2004$outboundSchema),
      z.lazy(() => PostV2LogsQueryEvalsResponse2005$outboundSchema),
      z.lazy(() => PostV2LogsQueryEvalsResponse2006$outboundSchema),
      z.lazy(() => PostV2LogsQueryEvalsResponse2007$outboundSchema),
    ]),
  ),
  productType: PostV2LogsQueryItemsResponseProductType$outboundSchema,
  relatedEntities: z.array(
    z.union([
      z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse2001$outboundSchema),
      z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse2002$outboundSchema),
      z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse2003$outboundSchema),
      z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse4$outboundSchema),
      z.lazy(() => PostV2LogsQueryRelatedEntities5$outboundSchema),
    ]),
  ),
  data: z.lazy(() => PostV2LogsQueryItemsResponse200Data$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    workspaceId: "workspace_id",
    workflowMetadata: "workflow_metadata",
    workflowInput: "workflow_input",
    workflowOutput: "workflow_output",
    projectId: "project_id",
    requestProperties: "request_properties",
    startedAt: "started_at",
    finishedAt: "finished_at",
    productType: "product_type",
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Items4$ {
  /** @deprecated use `Items4$inboundSchema` instead. */
  export const inboundSchema = Items4$inboundSchema;
  /** @deprecated use `Items4$outboundSchema` instead. */
  export const outboundSchema = Items4$outboundSchema;
  /** @deprecated use `Items4$Outbound` instead. */
  export type Outbound = Items4$Outbound;
}

export function items4ToJSON(items4: Items4): string {
  return JSON.stringify(Items4$outboundSchema.parse(items4));
}

export function items4FromJSON(
  jsonString: string,
): SafeParseResult<Items4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Items4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Items4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsRequestProperties$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsRequestProperties,
  z.ZodTypeDef,
  unknown
> = z.object({
  source: z.string().optional(),
  location: z.string().optional(),
  latitude: z.string().optional(),
  longitude: z.string().optional(),
  response_time: z.number().optional(),
  metadata: z.record(z.any()).optional(),
  status: z.number().optional(),
  context: z.record(z.any()).optional(),
  extra_params: z.record(z.any()).optional(),
}).transform((v) => {
  return remap$(v, {
    "response_time": "responseTime",
    "extra_params": "extraParams",
  });
});

/** @internal */
export type PostV2LogsQueryItemsRequestProperties$Outbound = {
  source?: string | undefined;
  location?: string | undefined;
  latitude?: string | undefined;
  longitude?: string | undefined;
  response_time?: number | undefined;
  metadata?: { [k: string]: any } | undefined;
  status?: number | undefined;
  context?: { [k: string]: any } | undefined;
  extra_params?: { [k: string]: any } | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsRequestProperties$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsRequestProperties$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsRequestProperties
> = z.object({
  source: z.string().optional(),
  location: z.string().optional(),
  latitude: z.string().optional(),
  longitude: z.string().optional(),
  responseTime: z.number().optional(),
  metadata: z.record(z.any()).optional(),
  status: z.number().optional(),
  context: z.record(z.any()).optional(),
  extraParams: z.record(z.any()).optional(),
}).transform((v) => {
  return remap$(v, {
    responseTime: "response_time",
    extraParams: "extra_params",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsRequestProperties$ {
  /** @deprecated use `PostV2LogsQueryItemsRequestProperties$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsRequestProperties$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsRequestProperties$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsRequestProperties$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsRequestProperties$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsRequestProperties$Outbound;
}

export function postV2LogsQueryItemsRequestPropertiesToJSON(
  postV2LogsQueryItemsRequestProperties: PostV2LogsQueryItemsRequestProperties,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsRequestProperties$outboundSchema.parse(
      postV2LogsQueryItemsRequestProperties,
    ),
  );
}

export function postV2LogsQueryItemsRequestPropertiesFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsRequestProperties, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsRequestProperties$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsRequestProperties' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponseRequestProperties$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponseRequestProperties,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source: z.string().optional(),
    location: z.string().optional(),
    latitude: z.string().optional(),
    longitude: z.string().optional(),
    response_time: z.number().optional(),
    metadata: z.record(z.any()).optional(),
    status: z.number().optional(),
    context: z.record(z.any()).optional(),
    extra_params: z.record(z.any()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "response_time": "responseTime",
      "extra_params": "extraParams",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponseRequestProperties$Outbound = {
  source?: string | undefined;
  location?: string | undefined;
  latitude?: string | undefined;
  longitude?: string | undefined;
  response_time?: number | undefined;
  metadata?: { [k: string]: any } | undefined;
  status?: number | undefined;
  context?: { [k: string]: any } | undefined;
  extra_params?: { [k: string]: any } | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsResponseRequestProperties$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponseRequestProperties$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponseRequestProperties
  > = z.object({
    source: z.string().optional(),
    location: z.string().optional(),
    latitude: z.string().optional(),
    longitude: z.string().optional(),
    responseTime: z.number().optional(),
    metadata: z.record(z.any()).optional(),
    status: z.number().optional(),
    context: z.record(z.any()).optional(),
    extraParams: z.record(z.any()).optional(),
  }).transform((v) => {
    return remap$(v, {
      responseTime: "response_time",
      extraParams: "extra_params",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseRequestProperties$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseRequestProperties$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponseRequestProperties$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseRequestProperties$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseRequestProperties$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseRequestProperties$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponseRequestProperties$Outbound;
}

export function postV2LogsQueryEvalsResponseRequestPropertiesToJSON(
  postV2LogsQueryEvalsResponseRequestProperties:
    PostV2LogsQueryEvalsResponseRequestProperties,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseRequestProperties$outboundSchema.parse(
      postV2LogsQueryEvalsResponseRequestProperties,
    ),
  );
}

export function postV2LogsQueryEvalsResponseRequestPropertiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponseRequestProperties,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponseRequestProperties$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponseRequestProperties' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseProductType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponseProductType> = z
    .nativeEnum(PostV2LogsQueryEvalsResponseProductType);

/** @internal */
export const PostV2LogsQueryEvalsResponseProductType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponseProductType> =
    PostV2LogsQueryEvalsResponseProductType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseProductType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseProductType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponseProductType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseProductType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseProductType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunRelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunRelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.lazy(() =>
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1$inboundSchema
  );

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunRelatedEntities$Outbound =
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunRelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunRelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunRelatedEntities
  > = z.lazy(() =>
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1$outboundSchema
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunRelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunRelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunRelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunRelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunRelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunRelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunRelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunRelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunRelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunRelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunRelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunRelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunRelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunRelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunRelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunRelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Type$inboundSchema,
    values: z.array(z.string()),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Status$inboundSchema,
    timestamp: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44$inboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4$Outbound =
  {
    type: string;
    values: Array<string>;
    id: string;
    status: string;
    timestamp: string;
    related_entities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44$Outbound
    >;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Type$outboundSchema,
    values: z.array(z.string()),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4Status$outboundSchema,
    timestamp: z.date().transform(v => v.toISOString()),
    relatedEntities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals41$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals42$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals43$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals44$outboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunStatus
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunStatus,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunStatus
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunStatus$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunStatus$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunStatus$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals34Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals34Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals34Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals34Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals34Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals34Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals34Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals34Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals34Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals34Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals34Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals34Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals34Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals33Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals33Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals33Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals33Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals33Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals33Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals33Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals33Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals33Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals33Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals33Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals33Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals33Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals32Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals32Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals32Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals32Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals32Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals32Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals32Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals32Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals32Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals32Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals32Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals32Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals32Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunRelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunRelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunRelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunRelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunRelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunRelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunRelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunRelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunRelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunRelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunRelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunRelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunRelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunRelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunRelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunRelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunRelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunRelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunRelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunRelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunRelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunRelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType$inboundSchema,
    value: z.boolean(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunStatus$inboundSchema,
    timestamp: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4$inboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3$Outbound =
  {
    type: string;
    value: boolean;
    id: string;
    status: string;
    timestamp: string;
    related_entities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4$Outbound
    >;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunType$outboundSchema,
    value: z.boolean(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunStatus$outboundSchema,
    timestamp: z.date().transform(v => v.toISOString()),
    relatedEntities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals31$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals3$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals4$outboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals24Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals24Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals24Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals24Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals24Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals24Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals24Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals24Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals24Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals24Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals24Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals24Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals24Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals23Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals23Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals23Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals23Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals23Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals23Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals23Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals23Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals23Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals23Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals23Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals23Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals23Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals22Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals22Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals22Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals22Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals22Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals22Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals22Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals22Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals22Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals22Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals22Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals22Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals22Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals2Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Type$inboundSchema,
    value: z.number(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Status$inboundSchema,
    timestamp: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4$inboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2$Outbound =
  {
    type: string;
    value: number;
    id: string;
    status: string;
    timestamp: string;
    related_entities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4$Outbound
    >;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Type$outboundSchema,
    value: z.number(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Evals7Status$outboundSchema,
    timestamp: z.date().transform(v => v.toISOString()),
    relatedEntities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun2$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun3$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun4$outboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsType
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsType,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsType
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsStatus
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsStatus,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsStatus
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsStatus$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsStatus$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsStatus$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals1Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvalsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvalsType
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvalsType,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvalsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvalsType
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvalsType$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvalsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvalsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvalsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvalsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvalsType$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvalsType$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsRelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsRelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsRelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsRelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsRelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsRelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsRelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsRelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsRelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsRelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsRelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsRelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsRelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsRelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsRelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsRelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsRelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsRelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsRelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsRelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsRelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsRelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsType$inboundSchema,
    value: z.string(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsStatus$inboundSchema,
    timestamp: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14$inboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1$Outbound =
  {
    type: string;
    value: string;
    id: string;
    status: string;
    timestamp: string;
    related_entities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14$Outbound
    >;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsType$outboundSchema,
    value: z.string(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3EvalsStatus$outboundSchema,
    timestamp: z.date().transform(v => v.toISOString()),
    relatedEntities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals11$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals12$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals13$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRunEvals14$outboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseEvals$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseEvals,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1$inboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2$inboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3$inboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4$inboundSchema
  ),
]);

/** @internal */
export type PostV2LogsQueryEvalsResponseEvals$Outbound =
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1$Outbound
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2$Outbound
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3$Outbound
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponseEvals$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseEvals$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponseEvals
> = z.union([
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1$outboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2$outboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3$outboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4$outboundSchema
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseEvals$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseEvals$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponseEvals$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseEvals$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseEvals$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseEvals$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponseEvals$Outbound;
}

export function postV2LogsQueryEvalsResponseEvalsToJSON(
  postV2LogsQueryEvalsResponseEvals: PostV2LogsQueryEvalsResponseEvals,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseEvals$outboundSchema.parse(
      postV2LogsQueryEvalsResponseEvals,
    ),
  );
}

export function postV2LogsQueryEvalsResponseEvalsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponseEvals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsResponseEvals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponseEvals' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Evals7Role$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Evals7Role
  > = z.nativeEnum(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Evals7Role,
  );

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Evals7Role$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Evals7Role
  > =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Evals7Role$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Evals7Role$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Evals7Role$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Evals7Role$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Evals7Role$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Evals7Role$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJson3$inboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJson3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Evals7Role$inboundSchema,
    url: z.string(),
  });

/** @internal */
export type PostV2LogsQueryMessageResponse200ApplicationJson3$Outbound = {
  role: string;
  url: string;
};

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJson3$outboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJson3$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryMessageResponse200ApplicationJson3
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Evals7Role$outboundSchema,
    url: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJson3$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJson3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJson3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJson3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJson3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJson3$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryMessageResponse200ApplicationJson3$Outbound;
}

export function postV2LogsQueryMessageResponse200ApplicationJson3ToJSON(
  postV2LogsQueryMessageResponse200ApplicationJson3:
    PostV2LogsQueryMessageResponse200ApplicationJson3,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse200ApplicationJson3$outboundSchema.parse(
      postV2LogsQueryMessageResponse200ApplicationJson3,
    ),
  );
}

export function postV2LogsQueryMessageResponse200ApplicationJson3FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryMessageResponse200ApplicationJson3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse200ApplicationJson3$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryMessageResponse200ApplicationJson3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3EvalsRole$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3EvalsRole
  > = z.nativeEnum(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3EvalsRole,
  );

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3EvalsRole$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3EvalsRole
  > =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3EvalsRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3EvalsRole$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3EvalsRole$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3EvalsRole$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3EvalsRole$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3EvalsRole$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJson2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJson2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3EvalsRole$inboundSchema,
    content: z.nullable(z.string()),
  });

/** @internal */
export type PostV2LogsQueryMessageResponse200ApplicationJson2$Outbound = {
  role: string;
  content: string | null;
};

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJson2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJson2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryMessageResponse200ApplicationJson2
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3EvalsRole$outboundSchema,
    content: z.nullable(z.string()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJson2$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJson2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJson2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJson2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJson2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJson2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryMessageResponse200ApplicationJson2$Outbound;
}

export function postV2LogsQueryMessageResponse200ApplicationJson2ToJSON(
  postV2LogsQueryMessageResponse200ApplicationJson2:
    PostV2LogsQueryMessageResponse200ApplicationJson2,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse200ApplicationJson2$outboundSchema.parse(
      postV2LogsQueryMessageResponse200ApplicationJson2,
    ),
  );
}

export function postV2LogsQueryMessageResponse200ApplicationJson2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryMessageResponse200ApplicationJson2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse200ApplicationJson2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryMessageResponse200ApplicationJson2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Role$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Role
  > = z.nativeEnum(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Role,
  );

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Role$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Role
  > =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Role$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Role$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Role$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Role$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Role$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Role$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryMessageResponse200ApplicationJSONType> =
    z.nativeEnum(PostV2LogsQueryMessageResponse200ApplicationJSONType);

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryMessageResponse200ApplicationJSONType> =
    PostV2LogsQueryMessageResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONType$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONFunction$inboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONFunction,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/** @internal */
export type PostV2LogsQueryMessageResponse200ApplicationJSONFunction$Outbound =
  {
    name: string;
    arguments: string;
  };

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONFunction$outboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONFunction$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryMessageResponse200ApplicationJSONFunction
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONFunction$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONFunction$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONFunction$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONFunction$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONFunction$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONFunction$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryMessageResponse200ApplicationJSONFunction$Outbound;
}

export function postV2LogsQueryMessageResponse200ApplicationJSONFunctionToJSON(
  postV2LogsQueryMessageResponse200ApplicationJSONFunction:
    PostV2LogsQueryMessageResponse200ApplicationJSONFunction,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse200ApplicationJSONFunction$outboundSchema
      .parse(postV2LogsQueryMessageResponse200ApplicationJSONFunction),
  );
}

export function postV2LogsQueryMessageResponse200ApplicationJSONFunctionFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryMessageResponse200ApplicationJSONFunction,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse200ApplicationJSONFunction$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponse200ApplicationJSONFunction' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONToolCalls$inboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONToolCalls,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    index: z.number().optional(),
    type: PostV2LogsQueryMessageResponse200ApplicationJSONType$inboundSchema,
    function: z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONFunction$inboundSchema
    ),
  });

/** @internal */
export type PostV2LogsQueryMessageResponse200ApplicationJSONToolCalls$Outbound =
  {
    id?: string | undefined;
    index?: number | undefined;
    type: string;
    function: PostV2LogsQueryMessageResponse200ApplicationJSONFunction$Outbound;
  };

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONToolCalls$outboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONToolCalls$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryMessageResponse200ApplicationJSONToolCalls
  > = z.object({
    id: z.string().optional(),
    index: z.number().optional(),
    type: PostV2LogsQueryMessageResponse200ApplicationJSONType$outboundSchema,
    function: z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONFunction$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONToolCalls$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONToolCalls$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONToolCalls$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONToolCalls$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONToolCalls$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONToolCalls$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryMessageResponse200ApplicationJSONToolCalls$Outbound;
}

export function postV2LogsQueryMessageResponse200ApplicationJSONToolCallsToJSON(
  postV2LogsQueryMessageResponse200ApplicationJSONToolCalls:
    PostV2LogsQueryMessageResponse200ApplicationJSONToolCalls,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse200ApplicationJSONToolCalls$outboundSchema
      .parse(postV2LogsQueryMessageResponse200ApplicationJSONToolCalls),
  );
}

export function postV2LogsQueryMessageResponse200ApplicationJSONToolCallsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryMessageResponse200ApplicationJSONToolCalls,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse200ApplicationJSONToolCalls$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponse200ApplicationJSONToolCalls' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJson1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJson1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Role$inboundSchema,
    content: z.nullable(z.string()).optional(),
    tool_calls: z.array(
      z.lazy(() =>
        PostV2LogsQueryMessageResponse200ApplicationJSONToolCalls$inboundSchema
      ),
    ),
  }).transform((v) => {
    return remap$(v, {
      "tool_calls": "toolCalls",
    });
  });

/** @internal */
export type PostV2LogsQueryMessageResponse200ApplicationJson1$Outbound = {
  role: string;
  content?: string | null | undefined;
  tool_calls: Array<
    PostV2LogsQueryMessageResponse200ApplicationJSONToolCalls$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJson1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJson1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryMessageResponse200ApplicationJson1
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems3Role$outboundSchema,
    content: z.nullable(z.string()).optional(),
    toolCalls: z.array(
      z.lazy(() =>
        PostV2LogsQueryMessageResponse200ApplicationJSONToolCalls$outboundSchema
      ),
    ),
  }).transform((v) => {
    return remap$(v, {
      toolCalls: "tool_calls",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJson1$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJson1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJson1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJson1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJson1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJson1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryMessageResponse200ApplicationJson1$Outbound;
}

export function postV2LogsQueryMessageResponse200ApplicationJson1ToJSON(
  postV2LogsQueryMessageResponse200ApplicationJson1:
    PostV2LogsQueryMessageResponse200ApplicationJson1,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse200ApplicationJson1$outboundSchema.parse(
      postV2LogsQueryMessageResponse200ApplicationJson1,
    ),
  );
}

export function postV2LogsQueryMessageResponse200ApplicationJson1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryMessageResponse200ApplicationJson1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse200ApplicationJson1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryMessageResponse200ApplicationJson1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseMessage$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseMessage,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQueryMessageResponse200ApplicationJson2$inboundSchema),
  z.lazy(() => PostV2LogsQueryMessageResponse200ApplicationJson3$inboundSchema),
  z.lazy(() => PostV2LogsQueryMessageResponse200ApplicationJson1$inboundSchema),
]);

/** @internal */
export type PostV2LogsQueryEvalsResponseMessage$Outbound =
  | PostV2LogsQueryMessageResponse200ApplicationJson2$Outbound
  | PostV2LogsQueryMessageResponse200ApplicationJson3$Outbound
  | PostV2LogsQueryMessageResponse200ApplicationJson1$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponseMessage$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseMessage$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponseMessage
> = z.union([
  z.lazy(() =>
    PostV2LogsQueryMessageResponse200ApplicationJson2$outboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryMessageResponse200ApplicationJson3$outboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryMessageResponse200ApplicationJson1$outboundSchema
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseMessage$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseMessage$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponseMessage$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseMessage$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseMessage$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseMessage$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponseMessage$Outbound;
}

export function postV2LogsQueryEvalsResponseMessageToJSON(
  postV2LogsQueryEvalsResponseMessage: PostV2LogsQueryEvalsResponseMessage,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseMessage$outboundSchema.parse(
      postV2LogsQueryEvalsResponseMessage,
    ),
  );
}

export function postV2LogsQueryEvalsResponseMessageFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponseMessage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponseMessage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponseMessage' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseChoices$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseChoices,
  z.ZodTypeDef,
  unknown
> = z.object({
  index: z.number(),
  message: z.union([
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJson2$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJson3$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJson1$inboundSchema
    ),
  ]).optional(),
  finish_reason: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "finish_reason": "finishReason",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponseChoices$Outbound = {
  index: number;
  message?:
    | PostV2LogsQueryMessageResponse200ApplicationJson2$Outbound
    | PostV2LogsQueryMessageResponse200ApplicationJson3$Outbound
    | PostV2LogsQueryMessageResponse200ApplicationJson1$Outbound
    | undefined;
  finish_reason?: string | null | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsResponseChoices$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseChoices$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponseChoices
> = z.object({
  index: z.number(),
  message: z.union([
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJson2$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJson3$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJson1$outboundSchema
    ),
  ]).optional(),
  finishReason: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    finishReason: "finish_reason",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseChoices$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseChoices$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponseChoices$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseChoices$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseChoices$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseChoices$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponseChoices$Outbound;
}

export function postV2LogsQueryEvalsResponseChoicesToJSON(
  postV2LogsQueryEvalsResponseChoices: PostV2LogsQueryEvalsResponseChoices,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseChoices$outboundSchema.parse(
      postV2LogsQueryEvalsResponseChoices,
    ),
  );
}

export function postV2LogsQueryEvalsResponseChoicesFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponseChoices, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponseChoices$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponseChoices' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseAction$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsResponseAction
> = z.nativeEnum(PostV2LogsQueryEvalsResponseAction);

/** @internal */
export const PostV2LogsQueryEvalsResponseAction$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsResponseAction
> = PostV2LogsQueryEvalsResponseAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseAction$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseAction$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponseAction$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseAction$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseAction$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponseModelType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponseModelType> = z.nativeEnum(
    PostV2LogsQueryEvalsResponseModelType,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponseModelType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponseModelType> =
    PostV2LogsQueryEvalsResponseModelType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseModelType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseModelType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponseModelType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseModelType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseModelType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200Format$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200Format> = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200Format,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200Format$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200Format> =
    PostV2LogsQueryEvalsResponse200Format$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200Format$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Format$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200Format$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Format$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200Format$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponseQuality$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsResponseQuality
> = z.nativeEnum(PostV2LogsQueryEvalsResponseQuality);

/** @internal */
export const PostV2LogsQueryEvalsResponseQuality$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponseQuality> =
    PostV2LogsQueryEvalsResponseQuality$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseQuality$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseQuality$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponseQuality$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseQuality$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseQuality$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3EvalsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3EvalsType
  > = z.nativeEnum(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3EvalsType,
  );

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3EvalsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3EvalsType
  > =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3EvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3EvalsType$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3EvalsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3EvalsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3EvalsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3EvalsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32$inboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3EvalsType$inboundSchema,
  });

/** @internal */
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32$Outbound =
  {
    type: string;
  };

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3EvalsType$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32$Outbound;
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32ToJSON(
  postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32$outboundSchema
      .parse(
        postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32,
      ),
  );
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3Type
  > = z.nativeEnum(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3Type,
  );

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3Type
  > =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3Type$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema$inboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/** @internal */
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema$Outbound =
  {
    name: string;
    strict: boolean;
    schema: { [k: string]: any };
  };

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema$Outbound;
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchemaToJSON(
  postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema$outboundSchema
      .parse(
        postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema,
      ),
  );
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchemaFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31$inboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3Type$inboundSchema,
    json_schema: z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "json_schema": "jsonSchema",
    });
  });

/** @internal */
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31$Outbound =
  {
    type: string;
    json_schema:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema$Outbound;
  };

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3Type$outboundSchema,
    jsonSchema: z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems3JSONSchema$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      jsonSchema: "json_schema",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31$Outbound;
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31ToJSON(
  postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31$outboundSchema
      .parse(
        postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31,
      ),
  );
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseResponseFormat$inboundSchema:
  z.ZodType<PostV2LogsQueryEvalsResponseResponseFormat, z.ZodTypeDef, unknown> =
    z.union([
      z.lazy(() =>
        PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31$inboundSchema
      ),
    ]);

/** @internal */
export type PostV2LogsQueryEvalsResponseResponseFormat$Outbound =
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32$Outbound
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponseResponseFormat$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponseResponseFormat$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponseResponseFormat
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseResponseFormat$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseResponseFormat$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponseResponseFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseResponseFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseResponseFormat$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseResponseFormat$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponseResponseFormat$Outbound;
}

export function postV2LogsQueryEvalsResponseResponseFormatToJSON(
  postV2LogsQueryEvalsResponseResponseFormat:
    PostV2LogsQueryEvalsResponseResponseFormat,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseResponseFormat$outboundSchema.parse(
      postV2LogsQueryEvalsResponseResponseFormat,
    ),
  );
}

export function postV2LogsQueryEvalsResponseResponseFormatFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponseResponseFormat,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponseResponseFormat$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponseResponseFormat' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponsePhotoRealVersion$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponsePhotoRealVersion> = z
    .nativeEnum(PostV2LogsQueryEvalsResponsePhotoRealVersion);

/** @internal */
export const PostV2LogsQueryEvalsResponsePhotoRealVersion$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponsePhotoRealVersion> =
    PostV2LogsQueryEvalsResponsePhotoRealVersion$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponsePhotoRealVersion$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponsePhotoRealVersion$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponsePhotoRealVersion$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponsePhotoRealVersion$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponsePhotoRealVersion$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponseEncodingFormat$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponseEncodingFormat> = z
    .nativeEnum(PostV2LogsQueryEvalsResponseEncodingFormat);

/** @internal */
export const PostV2LogsQueryEvalsResponseEncodingFormat$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponseEncodingFormat> =
    PostV2LogsQueryEvalsResponseEncodingFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseEncodingFormat$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseEncodingFormat$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponseEncodingFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseEncodingFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseEncodingFormat$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponseModelParameters$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponseModelParameters,
    z.ZodTypeDef,
    unknown
  > = z.object({
    temperature: z.number().optional(),
    maxTokens: z.number().optional(),
    topK: z.number().optional(),
    topP: z.number().optional(),
    frequencyPenalty: z.number().optional(),
    presencePenalty: z.number().optional(),
    numImages: z.number().optional(),
    seed: z.number().optional(),
    format: PostV2LogsQueryEvalsResponse200Format$inboundSchema.optional(),
    dimensions: z.string().optional(),
    quality: PostV2LogsQueryEvalsResponseQuality$inboundSchema.optional(),
    style: z.string().optional(),
    responseFormat: z.nullable(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31$inboundSchema
        ),
      ]),
    ).optional(),
    photoRealVersion: PostV2LogsQueryEvalsResponsePhotoRealVersion$inboundSchema
      .optional(),
    encoding_format: PostV2LogsQueryEvalsResponseEncodingFormat$inboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "encoding_format": "encodingFormat",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponseModelParameters$Outbound = {
  temperature?: number | undefined;
  maxTokens?: number | undefined;
  topK?: number | undefined;
  topP?: number | undefined;
  frequencyPenalty?: number | undefined;
  presencePenalty?: number | undefined;
  numImages?: number | undefined;
  seed?: number | undefined;
  format?: string | undefined;
  dimensions?: string | undefined;
  quality?: string | undefined;
  style?: string | undefined;
  responseFormat?:
    | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32$Outbound
    | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31$Outbound
    | null
    | undefined;
  photoRealVersion?: string | undefined;
  encoding_format?: string | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsResponseModelParameters$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponseModelParameters$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponseModelParameters
  > = z.object({
    temperature: z.number().optional(),
    maxTokens: z.number().optional(),
    topK: z.number().optional(),
    topP: z.number().optional(),
    frequencyPenalty: z.number().optional(),
    presencePenalty: z.number().optional(),
    numImages: z.number().optional(),
    seed: z.number().optional(),
    format: PostV2LogsQueryEvalsResponse200Format$outboundSchema.optional(),
    dimensions: z.string().optional(),
    quality: PostV2LogsQueryEvalsResponseQuality$outboundSchema.optional(),
    style: z.string().optional(),
    responseFormat: z.nullable(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems32$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems31$outboundSchema
        ),
      ]),
    ).optional(),
    photoRealVersion:
      PostV2LogsQueryEvalsResponsePhotoRealVersion$outboundSchema.optional(),
    encodingFormat: PostV2LogsQueryEvalsResponseEncodingFormat$outboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      encodingFormat: "encoding_format",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseModelParameters$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseModelParameters$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponseModelParameters$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseModelParameters$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseModelParameters$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseModelParameters$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponseModelParameters$Outbound;
}

export function postV2LogsQueryEvalsResponseModelParametersToJSON(
  postV2LogsQueryEvalsResponseModelParameters:
    PostV2LogsQueryEvalsResponseModelParameters,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseModelParameters$outboundSchema.parse(
      postV2LogsQueryEvalsResponseModelParameters,
    ),
  );
}

export function postV2LogsQueryEvalsResponseModelParametersFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponseModelParameters,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponseModelParameters$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponseModelParameters' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseProvider$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponseProvider> = z.nativeEnum(
    PostV2LogsQueryEvalsResponseProvider,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponseProvider$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponseProvider> =
    PostV2LogsQueryEvalsResponseProvider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseProvider$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseProvider$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponseProvider$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseProvider$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseProvider$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponseRole$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsResponseRole
> = z.nativeEnum(PostV2LogsQueryEvalsResponseRole);

/** @internal */
export const PostV2LogsQueryEvalsResponseRole$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsResponseRole
> = PostV2LogsQueryEvalsResponseRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseRole$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseRole$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponseRole$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseRole$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsResponseRole$outboundSchema;
}

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3EvalsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3EvalsType
  > = z.nativeEnum(
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3EvalsType,
  );

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3EvalsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3EvalsType
  > =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3EvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3EvalsType$ {
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3EvalsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3EvalsType$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3EvalsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3EvalsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONImageUrl$inboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJSONImageUrl,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    url: z.string(),
    detail: z.string().optional(),
  });

/** @internal */
export type PostV2LogsQuery2Response200ApplicationJSONImageUrl$Outbound = {
  id?: string | undefined;
  url: string;
  detail?: string | undefined;
};

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONImageUrl$outboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJSONImageUrl$Outbound,
    z.ZodTypeDef,
    PostV2LogsQuery2Response200ApplicationJSONImageUrl
  > = z.object({
    id: z.string().optional(),
    url: z.string(),
    detail: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ApplicationJSONImageUrl$ {
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONImageUrl$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONImageUrl$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONImageUrl$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONImageUrl$outboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONImageUrl$Outbound` instead. */
  export type Outbound =
    PostV2LogsQuery2Response200ApplicationJSONImageUrl$Outbound;
}

export function postV2LogsQuery2Response200ApplicationJSONImageUrlToJSON(
  postV2LogsQuery2Response200ApplicationJSONImageUrl:
    PostV2LogsQuery2Response200ApplicationJSONImageUrl,
): string {
  return JSON.stringify(
    PostV2LogsQuery2Response200ApplicationJSONImageUrl$outboundSchema.parse(
      postV2LogsQuery2Response200ApplicationJSONImageUrl,
    ),
  );
}

export function postV2LogsQuery2Response200ApplicationJSONImageUrlFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQuery2Response200ApplicationJSONImageUrl,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQuery2Response200ApplicationJSONImageUrl$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQuery2Response200ApplicationJSONImageUrl' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJson2$inboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJson2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3EvalsType$inboundSchema,
    image_url: z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONImageUrl$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "image_url": "imageUrl",
    });
  });

/** @internal */
export type PostV2LogsQuery2Response200ApplicationJson2$Outbound = {
  type: string;
  image_url: PostV2LogsQuery2Response200ApplicationJSONImageUrl$Outbound;
};

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJson2$outboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJson2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQuery2Response200ApplicationJson2
  > = z.object({
    type:
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3EvalsType$outboundSchema,
    imageUrl: z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONImageUrl$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      imageUrl: "image_url",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ApplicationJson2$ {
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJson2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ApplicationJson2$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJson2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ApplicationJson2$outboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJson2$Outbound` instead. */
  export type Outbound = PostV2LogsQuery2Response200ApplicationJson2$Outbound;
}

export function postV2LogsQuery2Response200ApplicationJson2ToJSON(
  postV2LogsQuery2Response200ApplicationJson2:
    PostV2LogsQuery2Response200ApplicationJson2,
): string {
  return JSON.stringify(
    PostV2LogsQuery2Response200ApplicationJson2$outboundSchema.parse(
      postV2LogsQuery2Response200ApplicationJson2,
    ),
  );
}

export function postV2LogsQuery2Response200ApplicationJson2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQuery2Response200ApplicationJson2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQuery2Response200ApplicationJson2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQuery2Response200ApplicationJson2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3Type
  > = z.nativeEnum(
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3Type,
  );

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3Type
  > =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3Type$ {
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3Type$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJson1$inboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJson1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3Type$inboundSchema,
    text: z.string(),
  });

/** @internal */
export type PostV2LogsQuery2Response200ApplicationJson1$Outbound = {
  type: string;
  text: string;
};

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJson1$outboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJson1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQuery2Response200ApplicationJson1
  > = z.object({
    type:
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems3Type$outboundSchema,
    text: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ApplicationJson1$ {
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJson1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ApplicationJson1$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJson1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ApplicationJson1$outboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJson1$Outbound` instead. */
  export type Outbound = PostV2LogsQuery2Response200ApplicationJson1$Outbound;
}

export function postV2LogsQuery2Response200ApplicationJson1ToJSON(
  postV2LogsQuery2Response200ApplicationJson1:
    PostV2LogsQuery2Response200ApplicationJson1,
): string {
  return JSON.stringify(
    PostV2LogsQuery2Response200ApplicationJson1$outboundSchema.parse(
      postV2LogsQuery2Response200ApplicationJson1,
    ),
  );
}

export function postV2LogsQuery2Response200ApplicationJson1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQuery2Response200ApplicationJson1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQuery2Response200ApplicationJson1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQuery2Response200ApplicationJson1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryContentResponse200ApplicationJson2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryContentResponse200ApplicationJson2,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => PostV2LogsQuery2Response200ApplicationJson1$inboundSchema),
    z.lazy(() => PostV2LogsQuery2Response200ApplicationJson2$inboundSchema),
  ]);

/** @internal */
export type PostV2LogsQueryContentResponse200ApplicationJson2$Outbound =
  | PostV2LogsQuery2Response200ApplicationJson1$Outbound
  | PostV2LogsQuery2Response200ApplicationJson2$Outbound;

/** @internal */
export const PostV2LogsQueryContentResponse200ApplicationJson2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryContentResponse200ApplicationJson2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryContentResponse200ApplicationJson2
  > = z.union([
    z.lazy(() => PostV2LogsQuery2Response200ApplicationJson1$outboundSchema),
    z.lazy(() => PostV2LogsQuery2Response200ApplicationJson2$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryContentResponse200ApplicationJson2$ {
  /** @deprecated use `PostV2LogsQueryContentResponse200ApplicationJson2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryContentResponse200ApplicationJson2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryContentResponse200ApplicationJson2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryContentResponse200ApplicationJson2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryContentResponse200ApplicationJson2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryContentResponse200ApplicationJson2$Outbound;
}

export function postV2LogsQueryContentResponse200ApplicationJson2ToJSON(
  postV2LogsQueryContentResponse200ApplicationJson2:
    PostV2LogsQueryContentResponse200ApplicationJson2,
): string {
  return JSON.stringify(
    PostV2LogsQueryContentResponse200ApplicationJson2$outboundSchema.parse(
      postV2LogsQueryContentResponse200ApplicationJson2,
    ),
  );
}

export function postV2LogsQueryContentResponse200ApplicationJson2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryContentResponse200ApplicationJson2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryContentResponse200ApplicationJson2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryContentResponse200ApplicationJson2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseContent$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseContent,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() => PostV2LogsQuery2Response200ApplicationJson1$inboundSchema),
    z.lazy(() => PostV2LogsQuery2Response200ApplicationJson2$inboundSchema),
  ])),
]);

/** @internal */
export type PostV2LogsQueryEvalsResponseContent$Outbound =
  | string
  | Array<
    | PostV2LogsQuery2Response200ApplicationJson1$Outbound
    | PostV2LogsQuery2Response200ApplicationJson2$Outbound
  >;

/** @internal */
export const PostV2LogsQueryEvalsResponseContent$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseContent$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponseContent
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() => PostV2LogsQuery2Response200ApplicationJson1$outboundSchema),
    z.lazy(() => PostV2LogsQuery2Response200ApplicationJson2$outboundSchema),
  ])),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseContent$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseContent$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponseContent$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseContent$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseContent$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseContent$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponseContent$Outbound;
}

export function postV2LogsQueryEvalsResponseContentToJSON(
  postV2LogsQueryEvalsResponseContent: PostV2LogsQueryEvalsResponseContent,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseContent$outboundSchema.parse(
      postV2LogsQueryEvalsResponseContent,
    ),
  );
}

export function postV2LogsQueryEvalsResponseContentFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponseContent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponseContent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponseContent' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataType
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataType,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataType
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function$Outbound =
  {
    name: string;
    arguments: string;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3FunctionToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3FunctionFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseToolCalls$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseToolCalls,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataType$inboundSchema,
  function: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function$inboundSchema
  ),
});

/** @internal */
export type PostV2LogsQueryEvalsResponseToolCalls$Outbound = {
  id?: string | undefined;
  index?: number | undefined;
  type: string;
  function:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function$Outbound;
};

/** @internal */
export const PostV2LogsQueryEvalsResponseToolCalls$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseToolCalls$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponseToolCalls
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataType$outboundSchema,
  function: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Function$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseToolCalls$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseToolCalls$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponseToolCalls$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseToolCalls$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseToolCalls$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseToolCalls$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponseToolCalls$Outbound;
}

export function postV2LogsQueryEvalsResponseToolCallsToJSON(
  postV2LogsQueryEvalsResponseToolCalls: PostV2LogsQueryEvalsResponseToolCalls,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseToolCalls$outboundSchema.parse(
      postV2LogsQueryEvalsResponseToolCalls,
    ),
  );
}

export function postV2LogsQueryEvalsResponseToolCallsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponseToolCalls, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponseToolCalls$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponseToolCalls' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseMessages$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseMessages,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: PostV2LogsQueryEvalsResponseRole$inboundSchema,
  content: z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => PostV2LogsQuery2Response200ApplicationJson1$inboundSchema),
      z.lazy(() => PostV2LogsQuery2Response200ApplicationJson2$inboundSchema),
    ])),
  ]),
  tool_calls: z.array(
    z.lazy(() => PostV2LogsQueryEvalsResponseToolCalls$inboundSchema),
  ).optional(),
  id: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "tool_calls": "toolCalls",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponseMessages$Outbound = {
  role: string;
  content:
    | string
    | Array<
      | PostV2LogsQuery2Response200ApplicationJson1$Outbound
      | PostV2LogsQuery2Response200ApplicationJson2$Outbound
    >;
  tool_calls?:
    | Array<PostV2LogsQueryEvalsResponseToolCalls$Outbound>
    | undefined;
  id?: string | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsResponseMessages$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseMessages$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponseMessages
> = z.object({
  role: PostV2LogsQueryEvalsResponseRole$outboundSchema,
  content: z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => PostV2LogsQuery2Response200ApplicationJson1$outboundSchema),
      z.lazy(() =>
        PostV2LogsQuery2Response200ApplicationJson2$outboundSchema
      ),
    ])),
  ]),
  toolCalls: z.array(
    z.lazy(() => PostV2LogsQueryEvalsResponseToolCalls$outboundSchema),
  ).optional(),
  id: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    toolCalls: "tool_calls",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseMessages$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseMessages$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponseMessages$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseMessages$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseMessages$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseMessages$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponseMessages$Outbound;
}

export function postV2LogsQueryEvalsResponseMessagesToJSON(
  postV2LogsQueryEvalsResponseMessages: PostV2LogsQueryEvalsResponseMessages,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseMessages$outboundSchema.parse(
      postV2LogsQueryEvalsResponseMessages,
    ),
  );
}

export function postV2LogsQueryEvalsResponseMessagesFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponseMessages, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponseMessages$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponseMessages' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponsePromptConfig$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponsePromptConfig,
  z.ZodTypeDef,
  unknown
> = z.object({
  stream: z.boolean(),
  model: z.string(),
  model_db_id: z.string(),
  model_type: PostV2LogsQueryEvalsResponseModelType$inboundSchema,
  model_parameters: z.lazy(() =>
    PostV2LogsQueryEvalsResponseModelParameters$inboundSchema
  ),
  provider: PostV2LogsQueryEvalsResponseProvider$inboundSchema,
  messages: z.array(
    z.lazy(() => PostV2LogsQueryEvalsResponseMessages$inboundSchema),
  ),
  integration_id: z.nullable(z.string()).optional(),
  version: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "model_db_id": "modelDbId",
    "model_type": "modelType",
    "model_parameters": "modelParameters",
    "integration_id": "integrationId",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponsePromptConfig$Outbound = {
  stream: boolean;
  model: string;
  model_db_id: string;
  model_type: string;
  model_parameters: PostV2LogsQueryEvalsResponseModelParameters$Outbound;
  provider: string;
  messages: Array<PostV2LogsQueryEvalsResponseMessages$Outbound>;
  integration_id?: string | null | undefined;
  version?: string | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsResponsePromptConfig$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponsePromptConfig$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponsePromptConfig
> = z.object({
  stream: z.boolean(),
  model: z.string(),
  modelDbId: z.string(),
  modelType: PostV2LogsQueryEvalsResponseModelType$outboundSchema,
  modelParameters: z.lazy(() =>
    PostV2LogsQueryEvalsResponseModelParameters$outboundSchema
  ),
  provider: PostV2LogsQueryEvalsResponseProvider$outboundSchema,
  messages: z.array(
    z.lazy(() => PostV2LogsQueryEvalsResponseMessages$outboundSchema),
  ),
  integrationId: z.nullable(z.string()).optional(),
  version: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    modelDbId: "model_db_id",
    modelType: "model_type",
    modelParameters: "model_parameters",
    integrationId: "integration_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponsePromptConfig$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponsePromptConfig$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponsePromptConfig$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponsePromptConfig$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponsePromptConfig$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponsePromptConfig$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponsePromptConfig$Outbound;
}

export function postV2LogsQueryEvalsResponsePromptConfigToJSON(
  postV2LogsQueryEvalsResponsePromptConfig:
    PostV2LogsQueryEvalsResponsePromptConfig,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponsePromptConfig$outboundSchema.parse(
      postV2LogsQueryEvalsResponsePromptConfig,
    ),
  );
}

export function postV2LogsQueryEvalsResponsePromptConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponsePromptConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponsePromptConfig$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponsePromptConfig' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseVariables$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseVariables,
  z.ZodTypeDef,
  unknown
> = z.object({
  key: z.string(),
  value: z.any().optional(),
  is_pii: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    "is_pii": "isPii",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponseVariables$Outbound = {
  key: string;
  value?: any | undefined;
  is_pii: boolean;
};

/** @internal */
export const PostV2LogsQueryEvalsResponseVariables$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseVariables$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponseVariables
> = z.object({
  key: z.string(),
  value: z.any().optional(),
  isPii: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    isPii: "is_pii",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseVariables$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseVariables$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponseVariables$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseVariables$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseVariables$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseVariables$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponseVariables$Outbound;
}

export function postV2LogsQueryEvalsResponseVariablesToJSON(
  postV2LogsQueryEvalsResponseVariables: PostV2LogsQueryEvalsResponseVariables,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseVariables$outboundSchema.parse(
      postV2LogsQueryEvalsResponseVariables,
    ),
  );
}

export function postV2LogsQueryEvalsResponseVariablesFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponseVariables, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponseVariables$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponseVariables' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponsePerformance$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponsePerformance,
  z.ZodTypeDef,
  unknown
> = z.object({
  latency: z.number(),
  first_time_to_token: z.nullable(z.number()).optional(),
  tokens_per_second: z.nullable(z.number()).optional(),
}).transform((v) => {
  return remap$(v, {
    "first_time_to_token": "firstTimeToToken",
    "tokens_per_second": "tokensPerSecond",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponsePerformance$Outbound = {
  latency: number;
  first_time_to_token?: number | null | undefined;
  tokens_per_second?: number | null | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsResponsePerformance$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponsePerformance$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponsePerformance
> = z.object({
  latency: z.number(),
  firstTimeToToken: z.nullable(z.number()).optional(),
  tokensPerSecond: z.nullable(z.number()).optional(),
}).transform((v) => {
  return remap$(v, {
    firstTimeToToken: "first_time_to_token",
    tokensPerSecond: "tokens_per_second",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponsePerformance$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponsePerformance$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponsePerformance$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponsePerformance$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponsePerformance$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponsePerformance$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponsePerformance$Outbound;
}

export function postV2LogsQueryEvalsResponsePerformanceToJSON(
  postV2LogsQueryEvalsResponsePerformance:
    PostV2LogsQueryEvalsResponsePerformance,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponsePerformance$outboundSchema.parse(
      postV2LogsQueryEvalsResponsePerformance,
    ),
  );
}

export function postV2LogsQueryEvalsResponsePerformanceFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponsePerformance,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponsePerformance$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponsePerformance' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponsePromptTokensDetails$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponsePromptTokensDetails,
    z.ZodTypeDef,
    unknown
  > = z.object({
    cached_tokens: z.number().optional(),
  }).transform((v) => {
    return remap$(v, {
      "cached_tokens": "cachedTokens",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponsePromptTokensDetails$Outbound = {
  cached_tokens?: number | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsResponsePromptTokensDetails$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponsePromptTokensDetails$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponsePromptTokensDetails
  > = z.object({
    cachedTokens: z.number().optional(),
  }).transform((v) => {
    return remap$(v, {
      cachedTokens: "cached_tokens",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponsePromptTokensDetails$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponsePromptTokensDetails$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponsePromptTokensDetails$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponsePromptTokensDetails$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponsePromptTokensDetails$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponsePromptTokensDetails$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponsePromptTokensDetails$Outbound;
}

export function postV2LogsQueryEvalsResponsePromptTokensDetailsToJSON(
  postV2LogsQueryEvalsResponsePromptTokensDetails:
    PostV2LogsQueryEvalsResponsePromptTokensDetails,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponsePromptTokensDetails$outboundSchema.parse(
      postV2LogsQueryEvalsResponsePromptTokensDetails,
    ),
  );
}

export function postV2LogsQueryEvalsResponsePromptTokensDetailsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponsePromptTokensDetails,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponsePromptTokensDetails$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponsePromptTokensDetails' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseCompletionTokensDetails$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponseCompletionTokensDetails,
    z.ZodTypeDef,
    unknown
  > = z.object({
    reasoning_tokens: z.number().optional(),
  }).transform((v) => {
    return remap$(v, {
      "reasoning_tokens": "reasoningTokens",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponseCompletionTokensDetails$Outbound = {
  reasoning_tokens?: number | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsResponseCompletionTokensDetails$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponseCompletionTokensDetails$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponseCompletionTokensDetails
  > = z.object({
    reasoningTokens: z.number().optional(),
  }).transform((v) => {
    return remap$(v, {
      reasoningTokens: "reasoning_tokens",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseCompletionTokensDetails$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseCompletionTokensDetails$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponseCompletionTokensDetails$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseCompletionTokensDetails$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseCompletionTokensDetails$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseCompletionTokensDetails$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponseCompletionTokensDetails$Outbound;
}

export function postV2LogsQueryEvalsResponseCompletionTokensDetailsToJSON(
  postV2LogsQueryEvalsResponseCompletionTokensDetails:
    PostV2LogsQueryEvalsResponseCompletionTokensDetails,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseCompletionTokensDetails$outboundSchema.parse(
      postV2LogsQueryEvalsResponseCompletionTokensDetails,
    ),
  );
}

export function postV2LogsQueryEvalsResponseCompletionTokensDetailsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponseCompletionTokensDetails,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponseCompletionTokensDetails$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponseCompletionTokensDetails' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseUsage$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseUsage,
  z.ZodTypeDef,
  unknown
> = z.object({
  total_tokens: z.number().optional(),
  prompt_tokens: z.number().optional(),
  completion_tokens: z.number().optional(),
  prompt_tokens_details: z.lazy(() =>
    PostV2LogsQueryEvalsResponsePromptTokensDetails$inboundSchema
  ).optional(),
  completion_tokens_details: z.lazy(() =>
    PostV2LogsQueryEvalsResponseCompletionTokensDetails$inboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "total_tokens": "totalTokens",
    "prompt_tokens": "promptTokens",
    "completion_tokens": "completionTokens",
    "prompt_tokens_details": "promptTokensDetails",
    "completion_tokens_details": "completionTokensDetails",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponseUsage$Outbound = {
  total_tokens?: number | undefined;
  prompt_tokens?: number | undefined;
  completion_tokens?: number | undefined;
  prompt_tokens_details?:
    | PostV2LogsQueryEvalsResponsePromptTokensDetails$Outbound
    | undefined;
  completion_tokens_details?:
    | PostV2LogsQueryEvalsResponseCompletionTokensDetails$Outbound
    | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsResponseUsage$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseUsage$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponseUsage
> = z.object({
  totalTokens: z.number().optional(),
  promptTokens: z.number().optional(),
  completionTokens: z.number().optional(),
  promptTokensDetails: z.lazy(() =>
    PostV2LogsQueryEvalsResponsePromptTokensDetails$outboundSchema
  ).optional(),
  completionTokensDetails: z.lazy(() =>
    PostV2LogsQueryEvalsResponseCompletionTokensDetails$outboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    totalTokens: "total_tokens",
    promptTokens: "prompt_tokens",
    completionTokens: "completion_tokens",
    promptTokensDetails: "prompt_tokens_details",
    completionTokensDetails: "completion_tokens_details",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseUsage$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseUsage$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponseUsage$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseUsage$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseUsage$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseUsage$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponseUsage$Outbound;
}

export function postV2LogsQueryEvalsResponseUsageToJSON(
  postV2LogsQueryEvalsResponseUsage: PostV2LogsQueryEvalsResponseUsage,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseUsage$outboundSchema.parse(
      postV2LogsQueryEvalsResponseUsage,
    ),
  );
}

export function postV2LogsQueryEvalsResponseUsageFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponseUsage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsResponseUsage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponseUsage' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseBilling$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseBilling,
  z.ZodTypeDef,
  unknown
> = z.object({
  total_cost: z.nullable(z.number()).optional(),
  input_cost: z.nullable(z.number()).optional(),
  output_cost: z.nullable(z.number()).optional(),
  billable: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    "total_cost": "totalCost",
    "input_cost": "inputCost",
    "output_cost": "outputCost",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponseBilling$Outbound = {
  total_cost?: number | null | undefined;
  input_cost?: number | null | undefined;
  output_cost?: number | null | undefined;
  billable: boolean;
};

/** @internal */
export const PostV2LogsQueryEvalsResponseBilling$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseBilling$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponseBilling
> = z.object({
  totalCost: z.nullable(z.number()).optional(),
  inputCost: z.nullable(z.number()).optional(),
  outputCost: z.nullable(z.number()).optional(),
  billable: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    totalCost: "total_cost",
    inputCost: "input_cost",
    outputCost: "output_cost",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseBilling$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseBilling$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponseBilling$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseBilling$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseBilling$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseBilling$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponseBilling$Outbound;
}

export function postV2LogsQueryEvalsResponseBillingToJSON(
  postV2LogsQueryEvalsResponseBilling: PostV2LogsQueryEvalsResponseBilling,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseBilling$outboundSchema.parse(
      postV2LogsQueryEvalsResponseBilling,
    ),
  );
}

export function postV2LogsQueryEvalsResponseBillingFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponseBilling, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponseBilling$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponseBilling' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunType
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunType,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunType
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataToolsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataToolsType
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataToolsType,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataToolsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataToolsType
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataToolsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataToolsType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataToolsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataToolsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataToolsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataToolsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponseParameters$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseParameters,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataToolsType$inboundSchema,
  properties: z.record(z.any()),
  required: z.array(z.string()).optional(),
  additionalProperties: z.boolean().optional(),
});

/** @internal */
export type PostV2LogsQueryEvalsResponseParameters$Outbound = {
  type: string;
  properties: { [k: string]: any };
  required?: Array<string> | undefined;
  additionalProperties?: boolean | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsResponseParameters$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseParameters$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponseParameters
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunDataToolsType$outboundSchema,
  properties: z.record(z.any()),
  required: z.array(z.string()).optional(),
  additionalProperties: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseParameters$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseParameters$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponseParameters$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseParameters$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseParameters$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseParameters$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponseParameters$Outbound;
}

export function postV2LogsQueryEvalsResponseParametersToJSON(
  postV2LogsQueryEvalsResponseParameters:
    PostV2LogsQueryEvalsResponseParameters,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseParameters$outboundSchema.parse(
      postV2LogsQueryEvalsResponseParameters,
    ),
  );
}

export function postV2LogsQueryEvalsResponseParametersFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponseParameters, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponseParameters$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponseParameters' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseFunction$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseFunction,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  description: z.string().optional(),
  strict: z.boolean().optional(),
  parameters: z.lazy(() =>
    PostV2LogsQueryEvalsResponseParameters$inboundSchema
  ),
});

/** @internal */
export type PostV2LogsQueryEvalsResponseFunction$Outbound = {
  name: string;
  description?: string | undefined;
  strict?: boolean | undefined;
  parameters: PostV2LogsQueryEvalsResponseParameters$Outbound;
};

/** @internal */
export const PostV2LogsQueryEvalsResponseFunction$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseFunction$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponseFunction
> = z.object({
  name: z.string(),
  description: z.string().optional(),
  strict: z.boolean().optional(),
  parameters: z.lazy(() =>
    PostV2LogsQueryEvalsResponseParameters$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseFunction$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseFunction$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponseFunction$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseFunction$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseFunction$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseFunction$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponseFunction$Outbound;
}

export function postV2LogsQueryEvalsResponseFunctionToJSON(
  postV2LogsQueryEvalsResponseFunction: PostV2LogsQueryEvalsResponseFunction,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseFunction$outboundSchema.parse(
      postV2LogsQueryEvalsResponseFunction,
    ),
  );
}

export function postV2LogsQueryEvalsResponseFunctionFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponseFunction, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponseFunction$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponseFunction' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseTools$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseTools,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunType$inboundSchema,
  function: z.lazy(() => PostV2LogsQueryEvalsResponseFunction$inboundSchema),
});

/** @internal */
export type PostV2LogsQueryEvalsResponseTools$Outbound = {
  type: string;
  function: PostV2LogsQueryEvalsResponseFunction$Outbound;
};

/** @internal */
export const PostV2LogsQueryEvalsResponseTools$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseTools$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponseTools
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37WorkflowRunType$outboundSchema,
  function: z.lazy(() => PostV2LogsQueryEvalsResponseFunction$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseTools$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseTools$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponseTools$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseTools$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseTools$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseTools$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponseTools$Outbound;
}

export function postV2LogsQueryEvalsResponseToolsToJSON(
  postV2LogsQueryEvalsResponseTools: PostV2LogsQueryEvalsResponseTools,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseTools$outboundSchema.parse(
      postV2LogsQueryEvalsResponseTools,
    ),
  );
}

export function postV2LogsQueryEvalsResponseToolsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponseTools, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsResponseTools$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponseTools' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponsePromptSnippets$inboundSchema:
  z.ZodType<PostV2LogsQueryEvalsResponsePromptSnippets, z.ZodTypeDef, unknown> =
    z.object({
      _id: z.string(),
      key: z.string(),
      value: z.string(),
    }).transform((v) => {
      return remap$(v, {
        "_id": "id",
      });
    });

/** @internal */
export type PostV2LogsQueryEvalsResponsePromptSnippets$Outbound = {
  _id: string;
  key: string;
  value: string;
};

/** @internal */
export const PostV2LogsQueryEvalsResponsePromptSnippets$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponsePromptSnippets$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponsePromptSnippets
  > = z.object({
    id: z.string(),
    key: z.string(),
    value: z.string(),
  }).transform((v) => {
    return remap$(v, {
      id: "_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponsePromptSnippets$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponsePromptSnippets$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponsePromptSnippets$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponsePromptSnippets$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponsePromptSnippets$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponsePromptSnippets$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponsePromptSnippets$Outbound;
}

export function postV2LogsQueryEvalsResponsePromptSnippetsToJSON(
  postV2LogsQueryEvalsResponsePromptSnippets:
    PostV2LogsQueryEvalsResponsePromptSnippets,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponsePromptSnippets$outboundSchema.parse(
      postV2LogsQueryEvalsResponsePromptSnippets,
    ),
  );
}

export function postV2LogsQueryEvalsResponsePromptSnippetsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponsePromptSnippets,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponsePromptSnippets$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponsePromptSnippets' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseData$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseData,
  z.ZodTypeDef,
  unknown
> = z.object({
  choices: z.array(
    z.lazy(() => PostV2LogsQueryEvalsResponseChoices$inboundSchema),
  ).optional(),
  action: PostV2LogsQueryEvalsResponseAction$inboundSchema,
  prompt_config: z.lazy(() =>
    PostV2LogsQueryEvalsResponsePromptConfig$inboundSchema
  ),
  variables: z.array(
    z.lazy(() => PostV2LogsQueryEvalsResponseVariables$inboundSchema),
  ),
  performance: z.lazy(() =>
    PostV2LogsQueryEvalsResponsePerformance$inboundSchema
  ).optional(),
  usage: z.lazy(() => PostV2LogsQueryEvalsResponseUsage$inboundSchema)
    .optional(),
  billing: z.lazy(() => PostV2LogsQueryEvalsResponseBilling$inboundSchema)
    .optional(),
  tools: z.array(z.lazy(() => PostV2LogsQueryEvalsResponseTools$inboundSchema))
    .optional(),
  prompt_snippets: z.array(
    z.lazy(() => PostV2LogsQueryEvalsResponsePromptSnippets$inboundSchema),
  ),
}).transform((v) => {
  return remap$(v, {
    "prompt_config": "promptConfig",
    "prompt_snippets": "promptSnippets",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponseData$Outbound = {
  choices?: Array<PostV2LogsQueryEvalsResponseChoices$Outbound> | undefined;
  action: string;
  prompt_config: PostV2LogsQueryEvalsResponsePromptConfig$Outbound;
  variables: Array<PostV2LogsQueryEvalsResponseVariables$Outbound>;
  performance?: PostV2LogsQueryEvalsResponsePerformance$Outbound | undefined;
  usage?: PostV2LogsQueryEvalsResponseUsage$Outbound | undefined;
  billing?: PostV2LogsQueryEvalsResponseBilling$Outbound | undefined;
  tools?: Array<PostV2LogsQueryEvalsResponseTools$Outbound> | undefined;
  prompt_snippets: Array<PostV2LogsQueryEvalsResponsePromptSnippets$Outbound>;
};

/** @internal */
export const PostV2LogsQueryEvalsResponseData$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseData$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponseData
> = z.object({
  choices: z.array(
    z.lazy(() => PostV2LogsQueryEvalsResponseChoices$outboundSchema),
  ).optional(),
  action: PostV2LogsQueryEvalsResponseAction$outboundSchema,
  promptConfig: z.lazy(() =>
    PostV2LogsQueryEvalsResponsePromptConfig$outboundSchema
  ),
  variables: z.array(
    z.lazy(() => PostV2LogsQueryEvalsResponseVariables$outboundSchema),
  ),
  performance: z.lazy(() =>
    PostV2LogsQueryEvalsResponsePerformance$outboundSchema
  ).optional(),
  usage: z.lazy(() => PostV2LogsQueryEvalsResponseUsage$outboundSchema)
    .optional(),
  billing: z.lazy(() => PostV2LogsQueryEvalsResponseBilling$outboundSchema)
    .optional(),
  tools: z.array(z.lazy(() => PostV2LogsQueryEvalsResponseTools$outboundSchema))
    .optional(),
  promptSnippets: z.array(
    z.lazy(() => PostV2LogsQueryEvalsResponsePromptSnippets$outboundSchema),
  ),
}).transform((v) => {
  return remap$(v, {
    promptConfig: "prompt_config",
    promptSnippets: "prompt_snippets",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseData$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseData$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponseData$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseData$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsResponseData$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseData$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponseData$Outbound;
}

export function postV2LogsQueryEvalsResponseDataToJSON(
  postV2LogsQueryEvalsResponseData: PostV2LogsQueryEvalsResponseData,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseData$outboundSchema.parse(
      postV2LogsQueryEvalsResponseData,
    ),
  );
}

export function postV2LogsQueryEvalsResponseDataFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponseData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsResponseData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponseData' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsWorkflowRun$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsWorkflowRun,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  workflow_metadata: z.record(z.any()).optional(),
  workflow_input: z.record(z.any()).optional(),
  workflow_output: z.record(z.any()).optional(),
  request_properties: z.lazy(() =>
    PostV2LogsQueryEvalsResponseRequestProperties$inboundSchema
  ).optional(),
  started_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  finished_at: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  product_type: PostV2LogsQueryEvalsResponseProductType$inboundSchema,
  related_entities: z.array(
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1$inboundSchema
    ),
  ),
  evals: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4$inboundSchema
      ),
    ]),
  ),
  data: z.lazy(() => PostV2LogsQueryEvalsResponseData$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "workflow_metadata": "workflowMetadata",
    "workflow_input": "workflowInput",
    "workflow_output": "workflowOutput",
    "request_properties": "requestProperties",
    "started_at": "startedAt",
    "finished_at": "finishedAt",
    "product_type": "productType",
    "related_entities": "relatedEntities",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsWorkflowRun$Outbound = {
  id: string;
  workflow_metadata?: { [k: string]: any } | undefined;
  workflow_input?: { [k: string]: any } | undefined;
  workflow_output?: { [k: string]: any } | undefined;
  request_properties?:
    | PostV2LogsQueryEvalsResponseRequestProperties$Outbound
    | undefined;
  started_at: string;
  finished_at?: string | undefined;
  product_type: string;
  related_entities: Array<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1$Outbound
  >;
  evals: Array<
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1$Outbound
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2$Outbound
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3$Outbound
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4$Outbound
  >;
  data: PostV2LogsQueryEvalsResponseData$Outbound;
};

/** @internal */
export const PostV2LogsQueryEvalsWorkflowRun$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsWorkflowRun$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsWorkflowRun
> = z.object({
  id: z.string(),
  workflowMetadata: z.record(z.any()).optional(),
  workflowInput: z.record(z.any()).optional(),
  workflowOutput: z.record(z.any()).optional(),
  requestProperties: z.lazy(() =>
    PostV2LogsQueryEvalsResponseRequestProperties$outboundSchema
  ).optional(),
  startedAt: z.date().transform(v => v.toISOString()),
  finishedAt: z.date().transform(v => v.toISOString()).optional(),
  productType: PostV2LogsQueryEvalsResponseProductType$outboundSchema,
  relatedEntities: z.array(
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7WorkflowRun1$outboundSchema
    ),
  ),
  evals: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody1$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody2$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody3$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBody4$outboundSchema
      ),
    ]),
  ),
  data: z.lazy(() => PostV2LogsQueryEvalsResponseData$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    workflowMetadata: "workflow_metadata",
    workflowInput: "workflow_input",
    workflowOutput: "workflow_output",
    requestProperties: "request_properties",
    startedAt: "started_at",
    finishedAt: "finished_at",
    productType: "product_type",
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsWorkflowRun$ {
  /** @deprecated use `PostV2LogsQueryEvalsWorkflowRun$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsWorkflowRun$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsWorkflowRun$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsWorkflowRun$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsWorkflowRun$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsWorkflowRun$Outbound;
}

export function postV2LogsQueryEvalsWorkflowRunToJSON(
  postV2LogsQueryEvalsWorkflowRun: PostV2LogsQueryEvalsWorkflowRun,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsWorkflowRun$outboundSchema.parse(
      postV2LogsQueryEvalsWorkflowRun,
    ),
  );
}

export function postV2LogsQueryEvalsWorkflowRunFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsWorkflowRun, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsWorkflowRun$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsWorkflowRun' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals7Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse7$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse7,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Type$inboundSchema,
  workflow_run: z.lazy(() => PostV2LogsQueryEvalsWorkflowRun$inboundSchema),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Status$inboundSchema,
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  related_entities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74$inboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    "workflow_run": "workflowRun",
    "related_entities": "relatedEntities",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponse7$Outbound = {
  type: string;
  workflow_run: PostV2LogsQueryEvalsWorkflowRun$Outbound;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse7$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse7$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse7
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Type$outboundSchema,
  workflowRun: z.lazy(() => PostV2LogsQueryEvalsWorkflowRun$outboundSchema),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems37Status$outboundSchema,
  timestamp: z.date().transform(v => v.toISOString()),
  relatedEntities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals71$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals72$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals73$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals74$outboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    workflowRun: "workflow_run",
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse7$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse7$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponse7$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse7$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsResponse7$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse7$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse7$Outbound;
}

export function postV2LogsQueryEvalsResponse7ToJSON(
  postV2LogsQueryEvalsResponse7: PostV2LogsQueryEvalsResponse7,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse7$outboundSchema.parse(
      postV2LogsQueryEvalsResponse7,
    ),
  );
}

export function postV2LogsQueryEvalsResponse7FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse7, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsResponse7$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse7' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue,
    z.ZodTypeDef,
    unknown
  > = z.object({
    f1: z.number(),
    precision: z.number(),
    recall: z.number(),
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue$Outbound =
  {
    f1: number;
    precision: number;
    recall: number;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue
  > = z.object({
    f1: z.number(),
    precision: z.number(),
    recall: z.number(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValueToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValueFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals6Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals6Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals6Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals6Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals6Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals6Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals6Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals6Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals6Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals6Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals6Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals6Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals6Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse6$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse6,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Type$inboundSchema,
  value: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue$inboundSchema
  ),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Status$inboundSchema,
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  related_entities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64$inboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    "related_entities": "relatedEntities",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponse6$Outbound = {
  type: string;
  value:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue$Outbound;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse6$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse6$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse6
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Type$outboundSchema,
  value: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyValue$outboundSchema
  ),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems36Status$outboundSchema,
  timestamp: z.date().transform(v => v.toISOString()),
  relatedEntities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals61$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals62$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals63$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals64$outboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse6$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse6$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponse6$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse6$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsResponse6$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse6$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse6$Outbound;
}

export function postV2LogsQueryEvalsResponse6ToJSON(
  postV2LogsQueryEvalsResponse6: PostV2LogsQueryEvalsResponse6,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse6$outboundSchema.parse(
      postV2LogsQueryEvalsResponse6,
    ),
  );
}

export function postV2LogsQueryEvalsResponse6FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse6, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsResponse6$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse6' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsRouge1$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsRouge1,
  z.ZodTypeDef,
  unknown
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/** @internal */
export type PostV2LogsQueryEvalsRouge1$Outbound = {
  f1: number;
  precision: number;
  recall: number;
};

/** @internal */
export const PostV2LogsQueryEvalsRouge1$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsRouge1$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsRouge1
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsRouge1$ {
  /** @deprecated use `PostV2LogsQueryEvalsRouge1$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsRouge1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsRouge1$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsRouge1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsRouge1$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsRouge1$Outbound;
}

export function postV2LogsQueryEvalsRouge1ToJSON(
  postV2LogsQueryEvalsRouge1: PostV2LogsQueryEvalsRouge1,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsRouge1$outboundSchema.parse(postV2LogsQueryEvalsRouge1),
  );
}

export function postV2LogsQueryEvalsRouge1FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsRouge1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsRouge1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsRouge1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsRouge2$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsRouge2,
  z.ZodTypeDef,
  unknown
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/** @internal */
export type PostV2LogsQueryEvalsRouge2$Outbound = {
  f1: number;
  precision: number;
  recall: number;
};

/** @internal */
export const PostV2LogsQueryEvalsRouge2$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsRouge2$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsRouge2
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsRouge2$ {
  /** @deprecated use `PostV2LogsQueryEvalsRouge2$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsRouge2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsRouge2$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsRouge2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsRouge2$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsRouge2$Outbound;
}

export function postV2LogsQueryEvalsRouge2ToJSON(
  postV2LogsQueryEvalsRouge2: PostV2LogsQueryEvalsRouge2,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsRouge2$outboundSchema.parse(postV2LogsQueryEvalsRouge2),
  );
}

export function postV2LogsQueryEvalsRouge2FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsRouge2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsRouge2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsRouge2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsRougeL$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsRougeL,
  z.ZodTypeDef,
  unknown
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/** @internal */
export type PostV2LogsQueryEvalsRougeL$Outbound = {
  f1: number;
  precision: number;
  recall: number;
};

/** @internal */
export const PostV2LogsQueryEvalsRougeL$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsRougeL$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsRougeL
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsRougeL$ {
  /** @deprecated use `PostV2LogsQueryEvalsRougeL$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsRougeL$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsRougeL$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsRougeL$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsRougeL$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsRougeL$Outbound;
}

export function postV2LogsQueryEvalsRougeLToJSON(
  postV2LogsQueryEvalsRougeL: PostV2LogsQueryEvalsRougeL,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsRougeL$outboundSchema.parse(postV2LogsQueryEvalsRougeL),
  );
}

export function postV2LogsQueryEvalsRougeLFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsRougeL, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsRougeL$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsRougeL' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONValue$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONValue,
    z.ZodTypeDef,
    unknown
  > = z.object({
    rouge_1: z.lazy(() => PostV2LogsQueryEvalsRouge1$inboundSchema),
    rouge_2: z.lazy(() => PostV2LogsQueryEvalsRouge2$inboundSchema),
    rouge_l: z.lazy(() => PostV2LogsQueryEvalsRougeL$inboundSchema),
  }).transform((v) => {
    return remap$(v, {
      "rouge_1": "rouge1",
      "rouge_2": "rouge2",
      "rouge_l": "rougeL",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONValue$Outbound = {
  rouge_1: PostV2LogsQueryEvalsRouge1$Outbound;
  rouge_2: PostV2LogsQueryEvalsRouge2$Outbound;
  rouge_l: PostV2LogsQueryEvalsRougeL$Outbound;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONValue$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONValue$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONValue
  > = z.object({
    rouge1: z.lazy(() => PostV2LogsQueryEvalsRouge1$outboundSchema),
    rouge2: z.lazy(() => PostV2LogsQueryEvalsRouge2$outboundSchema),
    rougeL: z.lazy(() => PostV2LogsQueryEvalsRougeL$outboundSchema),
  }).transform((v) => {
    return remap$(v, {
      rouge1: "rouge_1",
      rouge2: "rouge_2",
      rougeL: "rouge_l",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONValue$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONValue$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONValue$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONValue$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONValue$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONValue$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONValue$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONValueToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONValue:
    PostV2LogsQueryEvalsResponse200ApplicationJSONValue,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONValue$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ApplicationJSONValue,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONValueFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONValue' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals5Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals5Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals5Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals5Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals5Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals5Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals5Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals5Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals5Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals5Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals5Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals5Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals5Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse5$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse5,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Type$inboundSchema,
  value: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONValue$inboundSchema
  ),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Status$inboundSchema,
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  related_entities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54$inboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    "related_entities": "relatedEntities",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponse5$Outbound = {
  type: string;
  value: PostV2LogsQueryEvalsResponse200ApplicationJSONValue$Outbound;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse5$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse5$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse5
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Type$outboundSchema,
  value: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONValue$outboundSchema
  ),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems35Status$outboundSchema,
  timestamp: z.date().transform(v => v.toISOString()),
  relatedEntities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals51$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals52$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals53$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals54$outboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse5$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse5$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponse5$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse5$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsResponse5$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse5$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse5$Outbound;
}

export function postV2LogsQueryEvalsResponse5ToJSON(
  postV2LogsQueryEvalsResponse5: PostV2LogsQueryEvalsResponse5,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse5$outboundSchema.parse(
      postV2LogsQueryEvalsResponse5,
    ),
  );
}

export function postV2LogsQueryEvalsResponse5FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse5, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsResponse5$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse5' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse4$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Type$inboundSchema,
  values: z.array(z.string()),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Status$inboundSchema,
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  related_entities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44$inboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    "related_entities": "relatedEntities",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponse4$Outbound = {
  type: string;
  values: Array<string>;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse4$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse4$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse4
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Type$outboundSchema,
  values: z.array(z.string()),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems34Status$outboundSchema,
  timestamp: z.date().transform(v => v.toISOString()),
  relatedEntities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals41$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals42$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals43$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals44$outboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse4$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse4$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponse4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse4$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsResponse4$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse4$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse4$Outbound;
}

export function postV2LogsQueryEvalsResponse4ToJSON(
  postV2LogsQueryEvalsResponse4: PostV2LogsQueryEvalsResponse4,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse4$outboundSchema.parse(
      postV2LogsQueryEvalsResponse4,
    ),
  );
}

export function postV2LogsQueryEvalsResponse4FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsResponse4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse3$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Type$inboundSchema,
  value: z.boolean(),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Status$inboundSchema,
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  related_entities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34$inboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    "related_entities": "relatedEntities",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponse3$Outbound = {
  type: string;
  value: boolean;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse3$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse3$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse3
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Type$outboundSchema,
  value: z.boolean(),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems33Status$outboundSchema,
  timestamp: z.date().transform(v => v.toISOString()),
  relatedEntities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals31$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals32$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals33$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals34$outboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse3$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse3$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponse3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse3$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsResponse3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse3$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse3$Outbound;
}

export function postV2LogsQueryEvalsResponse3ToJSON(
  postV2LogsQueryEvalsResponse3: PostV2LogsQueryEvalsResponse3,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse3$outboundSchema.parse(
      postV2LogsQueryEvalsResponse3,
    ),
  );
}

export function postV2LogsQueryEvalsResponse3FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsResponse3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals24Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals24Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals24Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals24Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals24Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals24Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals24Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals24Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals24Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals24Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals24Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals24Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals24Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals23Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals23Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals23Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals23Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals23Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals23Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals23Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals23Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals23Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals23Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals23Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals23Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals23Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals22Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals22Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals22Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals22Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals22Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals22Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals22Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals22Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals22Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals22Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals22Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals22Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals22Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse2$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Type$inboundSchema,
  value: z.number(),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Status$inboundSchema,
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  related_entities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4$inboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    "related_entities": "relatedEntities",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponse2$Outbound = {
  type: string;
  value: number;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse2$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse2$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse2
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Type$outboundSchema,
  value: z.number(),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems32Status$outboundSchema,
  timestamp: z.date().transform(v => v.toISOString()),
  relatedEntities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals2$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals3$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals4$outboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse2$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse2$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponse2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse2$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsResponse2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse2$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse2$Outbound;
}

export function postV2LogsQueryEvalsResponse2ToJSON(
  postV2LogsQueryEvalsResponse2: PostV2LogsQueryEvalsResponse2,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse2$outboundSchema.parse(
      postV2LogsQueryEvalsResponse2,
    ),
  );
}

export function postV2LogsQueryEvalsResponse2FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsResponse2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals14Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals14Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals14Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals14Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals14Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals14Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals14Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals14Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals14Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals14Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals14Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals14Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals14Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals1Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3EvalsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3EvalsType
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3EvalsType,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3EvalsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3EvalsType
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3EvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3EvalsType$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3EvalsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3EvalsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3EvalsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3EvalsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3EvalsType$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3EvalsType$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals11Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals11Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals11Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals11Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals11Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals11Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals11Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals11Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals11Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals11Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals11Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals11Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Evals11Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse1$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Type$inboundSchema,
  value: z.string(),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Status$inboundSchema,
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  related_entities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34$inboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    "related_entities": "relatedEntities",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponse1$Outbound = {
  type: string;
  value: string;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse1$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse1$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse1
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Type$outboundSchema,
  value: z.string(),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3Status$outboundSchema,
  timestamp: z.date().transform(v => v.toISOString()),
  relatedEntities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems31$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34$outboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse1$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse1$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponse1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse1$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsResponse1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse1$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse1$Outbound;
}

export function postV2LogsQueryEvalsResponse1ToJSON(
  postV2LogsQueryEvalsResponse1: PostV2LogsQueryEvalsResponse1,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse1$outboundSchema.parse(
      postV2LogsQueryEvalsResponse1,
    ),
  );
}

export function postV2LogsQueryEvalsResponse1FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsResponse1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsEvals$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsEvals,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQueryEvalsResponse1$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse2$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse3$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse4$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse5$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse6$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse7$inboundSchema),
]);

/** @internal */
export type PostV2LogsQueryItemsEvals$Outbound =
  | PostV2LogsQueryEvalsResponse1$Outbound
  | PostV2LogsQueryEvalsResponse2$Outbound
  | PostV2LogsQueryEvalsResponse3$Outbound
  | PostV2LogsQueryEvalsResponse4$Outbound
  | PostV2LogsQueryEvalsResponse5$Outbound
  | PostV2LogsQueryEvalsResponse6$Outbound
  | PostV2LogsQueryEvalsResponse7$Outbound;

/** @internal */
export const PostV2LogsQueryItemsEvals$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsEvals$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsEvals
> = z.union([
  z.lazy(() => PostV2LogsQueryEvalsResponse1$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse2$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse3$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse4$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse5$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse6$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse7$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsEvals$ {
  /** @deprecated use `PostV2LogsQueryItemsEvals$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsEvals$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsEvals$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsEvals$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsEvals$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsEvals$Outbound;
}

export function postV2LogsQueryItemsEvalsToJSON(
  postV2LogsQueryItemsEvals: PostV2LogsQueryItemsEvals,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsEvals$outboundSchema.parse(postV2LogsQueryItemsEvals),
  );
}

export function postV2LogsQueryItemsEvalsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsEvals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsEvals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsEvals' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsProductType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsProductType
> = z.nativeEnum(PostV2LogsQueryItemsProductType);

/** @internal */
export const PostV2LogsQueryItemsProductType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsProductType
> = PostV2LogsQueryItemsProductType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsProductType$ {
  /** @deprecated use `PostV2LogsQueryItemsProductType$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsProductType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsProductType$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsProductType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntities4$inboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntities4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34Type$inboundSchema,
  account_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "account_id": "accountId",
  });
});

/** @internal */
export type PostV2LogsQueryRelatedEntities4$Outbound = {
  type: string;
  account_id: string;
};

/** @internal */
export const PostV2LogsQueryRelatedEntities4$outboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntities4$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryRelatedEntities4
> = z.object({
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems34Type$outboundSchema,
  accountId: z.string(),
}).transform((v) => {
  return remap$(v, {
    accountId: "account_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntities4$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntities4$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryRelatedEntities4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntities4$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryRelatedEntities4$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntities4$Outbound` instead. */
  export type Outbound = PostV2LogsQueryRelatedEntities4$Outbound;
}

export function postV2LogsQueryRelatedEntities4ToJSON(
  postV2LogsQueryRelatedEntities4: PostV2LogsQueryRelatedEntities4,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntities4$outboundSchema.parse(
      postV2LogsQueryRelatedEntities4,
    ),
  );
}

export function postV2LogsQueryRelatedEntities4FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryRelatedEntities4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryRelatedEntities4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntities4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse3$inboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntitiesResponse3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33Type$inboundSchema,
  playground_completion_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "playground_completion_id": "playgroundCompletionId",
  });
});

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse3$Outbound = {
  type: string;
  playground_completion_id: string;
};

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse3$outboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntitiesResponse3$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryRelatedEntitiesResponse3
> = z.object({
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems33Type$outboundSchema,
  playgroundCompletionId: z.string(),
}).transform((v) => {
  return remap$(v, {
    playgroundCompletionId: "playground_completion_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse3$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse3$Outbound` instead. */
  export type Outbound = PostV2LogsQueryRelatedEntitiesResponse3$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse3ToJSON(
  postV2LogsQueryRelatedEntitiesResponse3:
    PostV2LogsQueryRelatedEntitiesResponse3,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse3$outboundSchema.parse(
      postV2LogsQueryRelatedEntitiesResponse3,
    ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse3FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse3$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse2$inboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntitiesResponse2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32Type$inboundSchema,
  playground_block_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "playground_block_id": "playgroundBlockId",
  });
});

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse2$Outbound = {
  type: string;
  playground_block_id: string;
};

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse2$outboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntitiesResponse2$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryRelatedEntitiesResponse2
> = z.object({
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems32Type$outboundSchema,
  playgroundBlockId: z.string(),
}).transform((v) => {
  return remap$(v, {
    playgroundBlockId: "playground_block_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse2$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse2$Outbound` instead. */
  export type Outbound = PostV2LogsQueryRelatedEntitiesResponse2$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse2ToJSON(
  postV2LogsQueryRelatedEntitiesResponse2:
    PostV2LogsQueryRelatedEntitiesResponse2,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse2$outboundSchema.parse(
      postV2LogsQueryRelatedEntitiesResponse2,
    ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse1$inboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntitiesResponse1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Type$inboundSchema,
  playground_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "playground_id": "playgroundId",
  });
});

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse1$Outbound = {
  type: string;
  playground_id: string;
};

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse1$outboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntitiesResponse1$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryRelatedEntitiesResponse1
> = z.object({
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3Type$outboundSchema,
  playgroundId: z.string(),
}).transform((v) => {
  return remap$(v, {
    playgroundId: "playground_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse1$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse1$Outbound` instead. */
  export type Outbound = PostV2LogsQueryRelatedEntitiesResponse1$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse1ToJSON(
  postV2LogsQueryRelatedEntitiesResponse1:
    PostV2LogsQueryRelatedEntitiesResponse1,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse1$outboundSchema.parse(
      postV2LogsQueryRelatedEntitiesResponse1,
    ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsRelatedEntities$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsRelatedEntities,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse1$inboundSchema),
  z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse2$inboundSchema),
  z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse3$inboundSchema),
  z.lazy(() => PostV2LogsQueryRelatedEntities4$inboundSchema),
]);

/** @internal */
export type PostV2LogsQueryItemsRelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse1$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse2$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse3$Outbound
  | PostV2LogsQueryRelatedEntities4$Outbound;

/** @internal */
export const PostV2LogsQueryItemsRelatedEntities$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsRelatedEntities$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsRelatedEntities
> = z.union([
  z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse1$outboundSchema),
  z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse2$outboundSchema),
  z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse3$outboundSchema),
  z.lazy(() => PostV2LogsQueryRelatedEntities4$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsRelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryItemsRelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsRelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsRelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsRelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsRelatedEntities$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsRelatedEntities$Outbound;
}

export function postV2LogsQueryItemsRelatedEntitiesToJSON(
  postV2LogsQueryItemsRelatedEntities: PostV2LogsQueryItemsRelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsRelatedEntities$outboundSchema.parse(
      postV2LogsQueryItemsRelatedEntities,
    ),
  );
}

export function postV2LogsQueryItemsRelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsRelatedEntities, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsRelatedEntities$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsRelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsRole$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsRole
  > = z.nativeEnum(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsRole,
  );

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsRole$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsRole
  > =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsRole$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsRole$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsRole$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsRole$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsRole$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponse3$inboundSchema: z.ZodType<
  PostV2LogsQueryMessageResponse3,
  z.ZodTypeDef,
  unknown
> = z.object({
  role:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsRole$inboundSchema,
  url: z.string(),
});

/** @internal */
export type PostV2LogsQueryMessageResponse3$Outbound = {
  role: string;
  url: string;
};

/** @internal */
export const PostV2LogsQueryMessageResponse3$outboundSchema: z.ZodType<
  PostV2LogsQueryMessageResponse3$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryMessageResponse3
> = z.object({
  role:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItemsRole$outboundSchema,
  url: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse3$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse3$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryMessageResponse3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse3$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryMessageResponse3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse3$Outbound` instead. */
  export type Outbound = PostV2LogsQueryMessageResponse3$Outbound;
}

export function postV2LogsQueryMessageResponse3ToJSON(
  postV2LogsQueryMessageResponse3: PostV2LogsQueryMessageResponse3,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse3$outboundSchema.parse(
      postV2LogsQueryMessageResponse3,
    ),
  );
}

export function postV2LogsQueryMessageResponse3FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryMessageResponse3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryMessageResponse3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponse3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyRole$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyRole
  > = z.nativeEnum(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyRole,
  );

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyRole$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyRole
  > =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyRole$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyRole$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyRole$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyRole$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyRole$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponse2$inboundSchema: z.ZodType<
  PostV2LogsQueryMessageResponse2,
  z.ZodTypeDef,
  unknown
> = z.object({
  role:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyRole$inboundSchema,
  content: z.nullable(z.string()),
});

/** @internal */
export type PostV2LogsQueryMessageResponse2$Outbound = {
  role: string;
  content: string | null;
};

/** @internal */
export const PostV2LogsQueryMessageResponse2$outboundSchema: z.ZodType<
  PostV2LogsQueryMessageResponse2$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryMessageResponse2
> = z.object({
  role:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyRole$outboundSchema,
  content: z.nullable(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse2$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse2$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryMessageResponse2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse2$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryMessageResponse2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse2$Outbound` instead. */
  export type Outbound = PostV2LogsQueryMessageResponse2$Outbound;
}

export function postV2LogsQueryMessageResponse2ToJSON(
  postV2LogsQueryMessageResponse2: PostV2LogsQueryMessageResponse2,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse2$outboundSchema.parse(
      postV2LogsQueryMessageResponse2,
    ),
  );
}

export function postV2LogsQueryMessageResponse2FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryMessageResponse2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryMessageResponse2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponse2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONRole$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryMessageResponse200ApplicationJSONRole> =
    z.nativeEnum(PostV2LogsQueryMessageResponse200ApplicationJSONRole);

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONRole$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryMessageResponse200ApplicationJSONRole> =
    PostV2LogsQueryMessageResponse200ApplicationJSONRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONRole$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONRole$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONRole$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONRole$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONRole$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponseType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryMessageResponseType
> = z.nativeEnum(PostV2LogsQueryMessageResponseType);

/** @internal */
export const PostV2LogsQueryMessageResponseType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryMessageResponseType
> = PostV2LogsQueryMessageResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponseType$ {
  /** @deprecated use `PostV2LogsQueryMessageResponseType$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryMessageResponseType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponseType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponseType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponseFunction$inboundSchema: z.ZodType<
  PostV2LogsQueryMessageResponseFunction,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/** @internal */
export type PostV2LogsQueryMessageResponseFunction$Outbound = {
  name: string;
  arguments: string;
};

/** @internal */
export const PostV2LogsQueryMessageResponseFunction$outboundSchema: z.ZodType<
  PostV2LogsQueryMessageResponseFunction$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryMessageResponseFunction
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponseFunction$ {
  /** @deprecated use `PostV2LogsQueryMessageResponseFunction$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponseFunction$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponseFunction$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponseFunction$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponseFunction$Outbound` instead. */
  export type Outbound = PostV2LogsQueryMessageResponseFunction$Outbound;
}

export function postV2LogsQueryMessageResponseFunctionToJSON(
  postV2LogsQueryMessageResponseFunction:
    PostV2LogsQueryMessageResponseFunction,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponseFunction$outboundSchema.parse(
      postV2LogsQueryMessageResponseFunction,
    ),
  );
}

export function postV2LogsQueryMessageResponseFunctionFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryMessageResponseFunction, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponseFunction$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponseFunction' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponseToolCalls$inboundSchema: z.ZodType<
  PostV2LogsQueryMessageResponseToolCalls,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type: PostV2LogsQueryMessageResponseType$inboundSchema,
  function: z.lazy(() => PostV2LogsQueryMessageResponseFunction$inboundSchema),
});

/** @internal */
export type PostV2LogsQueryMessageResponseToolCalls$Outbound = {
  id?: string | undefined;
  index?: number | undefined;
  type: string;
  function: PostV2LogsQueryMessageResponseFunction$Outbound;
};

/** @internal */
export const PostV2LogsQueryMessageResponseToolCalls$outboundSchema: z.ZodType<
  PostV2LogsQueryMessageResponseToolCalls$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryMessageResponseToolCalls
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type: PostV2LogsQueryMessageResponseType$outboundSchema,
  function: z.lazy(() => PostV2LogsQueryMessageResponseFunction$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponseToolCalls$ {
  /** @deprecated use `PostV2LogsQueryMessageResponseToolCalls$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponseToolCalls$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponseToolCalls$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponseToolCalls$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponseToolCalls$Outbound` instead. */
  export type Outbound = PostV2LogsQueryMessageResponseToolCalls$Outbound;
}

export function postV2LogsQueryMessageResponseToolCallsToJSON(
  postV2LogsQueryMessageResponseToolCalls:
    PostV2LogsQueryMessageResponseToolCalls,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponseToolCalls$outboundSchema.parse(
      postV2LogsQueryMessageResponseToolCalls,
    ),
  );
}

export function postV2LogsQueryMessageResponseToolCallsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryMessageResponseToolCalls,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponseToolCalls$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryMessageResponseToolCalls' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse1$inboundSchema: z.ZodType<
  PostV2LogsQueryMessageResponse1,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: PostV2LogsQueryMessageResponse200ApplicationJSONRole$inboundSchema,
  content: z.nullable(z.string()).optional(),
  tool_calls: z.array(
    z.lazy(() => PostV2LogsQueryMessageResponseToolCalls$inboundSchema),
  ),
}).transform((v) => {
  return remap$(v, {
    "tool_calls": "toolCalls",
  });
});

/** @internal */
export type PostV2LogsQueryMessageResponse1$Outbound = {
  role: string;
  content?: string | null | undefined;
  tool_calls: Array<PostV2LogsQueryMessageResponseToolCalls$Outbound>;
};

/** @internal */
export const PostV2LogsQueryMessageResponse1$outboundSchema: z.ZodType<
  PostV2LogsQueryMessageResponse1$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryMessageResponse1
> = z.object({
  role: PostV2LogsQueryMessageResponse200ApplicationJSONRole$outboundSchema,
  content: z.nullable(z.string()).optional(),
  toolCalls: z.array(
    z.lazy(() => PostV2LogsQueryMessageResponseToolCalls$outboundSchema),
  ),
}).transform((v) => {
  return remap$(v, {
    toolCalls: "tool_calls",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse1$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse1$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryMessageResponse1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse1$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryMessageResponse1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse1$Outbound` instead. */
  export type Outbound = PostV2LogsQueryMessageResponse1$Outbound;
}

export function postV2LogsQueryMessageResponse1ToJSON(
  postV2LogsQueryMessageResponse1: PostV2LogsQueryMessageResponse1,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse1$outboundSchema.parse(
      postV2LogsQueryMessageResponse1,
    ),
  );
}

export function postV2LogsQueryMessageResponse1FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryMessageResponse1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryMessageResponse1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponse1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsMessage$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsMessage,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQueryMessageResponse2$inboundSchema),
  z.lazy(() => PostV2LogsQueryMessageResponse3$inboundSchema),
  z.lazy(() => PostV2LogsQueryMessageResponse1$inboundSchema),
]);

/** @internal */
export type PostV2LogsQueryItemsMessage$Outbound =
  | PostV2LogsQueryMessageResponse2$Outbound
  | PostV2LogsQueryMessageResponse3$Outbound
  | PostV2LogsQueryMessageResponse1$Outbound;

/** @internal */
export const PostV2LogsQueryItemsMessage$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsMessage$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsMessage
> = z.union([
  z.lazy(() => PostV2LogsQueryMessageResponse2$outboundSchema),
  z.lazy(() => PostV2LogsQueryMessageResponse3$outboundSchema),
  z.lazy(() => PostV2LogsQueryMessageResponse1$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsMessage$ {
  /** @deprecated use `PostV2LogsQueryItemsMessage$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsMessage$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsMessage$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsMessage$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsMessage$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsMessage$Outbound;
}

export function postV2LogsQueryItemsMessageToJSON(
  postV2LogsQueryItemsMessage: PostV2LogsQueryItemsMessage,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsMessage$outboundSchema.parse(
      postV2LogsQueryItemsMessage,
    ),
  );
}

export function postV2LogsQueryItemsMessageFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsMessage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsMessage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsMessage' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsChoices$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsChoices,
  z.ZodTypeDef,
  unknown
> = z.object({
  index: z.number(),
  message: z.union([
    z.lazy(() => PostV2LogsQueryMessageResponse2$inboundSchema),
    z.lazy(() => PostV2LogsQueryMessageResponse3$inboundSchema),
    z.lazy(() => PostV2LogsQueryMessageResponse1$inboundSchema),
  ]).optional(),
  finish_reason: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "finish_reason": "finishReason",
  });
});

/** @internal */
export type PostV2LogsQueryItemsChoices$Outbound = {
  index: number;
  message?:
    | PostV2LogsQueryMessageResponse2$Outbound
    | PostV2LogsQueryMessageResponse3$Outbound
    | PostV2LogsQueryMessageResponse1$Outbound
    | undefined;
  finish_reason?: string | null | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsChoices$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsChoices$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsChoices
> = z.object({
  index: z.number(),
  message: z.union([
    z.lazy(() => PostV2LogsQueryMessageResponse2$outboundSchema),
    z.lazy(() => PostV2LogsQueryMessageResponse3$outboundSchema),
    z.lazy(() => PostV2LogsQueryMessageResponse1$outboundSchema),
  ]).optional(),
  finishReason: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    finishReason: "finish_reason",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsChoices$ {
  /** @deprecated use `PostV2LogsQueryItemsChoices$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsChoices$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsChoices$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsChoices$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsChoices$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsChoices$Outbound;
}

export function postV2LogsQueryItemsChoicesToJSON(
  postV2LogsQueryItemsChoices: PostV2LogsQueryItemsChoices,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsChoices$outboundSchema.parse(
      postV2LogsQueryItemsChoices,
    ),
  );
}

export function postV2LogsQueryItemsChoicesFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsChoices, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsChoices$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsChoices' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsAction$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsAction
> = z.nativeEnum(PostV2LogsQueryItemsAction);

/** @internal */
export const PostV2LogsQueryItemsAction$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsAction
> = PostV2LogsQueryItemsAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsAction$ {
  /** @deprecated use `PostV2LogsQueryItemsAction$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsAction$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsAction$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsAction$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryItemsModelType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsModelType
> = z.nativeEnum(PostV2LogsQueryItemsModelType);

/** @internal */
export const PostV2LogsQueryItemsModelType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsModelType
> = PostV2LogsQueryItemsModelType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsModelType$ {
  /** @deprecated use `PostV2LogsQueryItemsModelType$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsModelType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsModelType$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsModelType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryItemsFormat$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsFormat
> = z.nativeEnum(PostV2LogsQueryItemsFormat);

/** @internal */
export const PostV2LogsQueryItemsFormat$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsFormat
> = PostV2LogsQueryItemsFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsFormat$ {
  /** @deprecated use `PostV2LogsQueryItemsFormat$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsFormat$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsFormat$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryItemsQuality$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsQuality
> = z.nativeEnum(PostV2LogsQueryItemsQuality);

/** @internal */
export const PostV2LogsQueryItemsQuality$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsQuality
> = PostV2LogsQueryItemsQuality$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsQuality$ {
  /** @deprecated use `PostV2LogsQueryItemsQuality$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsQuality$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsQuality$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsQuality$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONType
  > = z.nativeEnum(PostV2LogsQueryResponseFormatResponse200ApplicationJSONType);

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONType
  > = PostV2LogsQueryResponseFormatResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONType$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse2$inboundSchema: z.ZodType<
  PostV2LogsQueryResponseFormatResponse2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONType$inboundSchema,
});

/** @internal */
export type PostV2LogsQueryResponseFormatResponse2$Outbound = {
  type: string;
};

/** @internal */
export const PostV2LogsQueryResponseFormatResponse2$outboundSchema: z.ZodType<
  PostV2LogsQueryResponseFormatResponse2$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryResponseFormatResponse2
> = z.object({
  type:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse2$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse2$Outbound` instead. */
  export type Outbound = PostV2LogsQueryResponseFormatResponse2$Outbound;
}

export function postV2LogsQueryResponseFormatResponse2ToJSON(
  postV2LogsQueryResponseFormatResponse2:
    PostV2LogsQueryResponseFormatResponse2,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse2$outboundSchema.parse(
      postV2LogsQueryResponseFormatResponse2,
    ),
  );
}

export function postV2LogsQueryResponseFormatResponse2FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryResponseFormatResponse2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200Type$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryResponseFormatResponse200Type> = z
    .nativeEnum(PostV2LogsQueryResponseFormatResponse200Type);

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryResponseFormatResponse200Type> =
    PostV2LogsQueryResponseFormatResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200Type$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponseJsonSchema$inboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponseJsonSchema,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/** @internal */
export type PostV2LogsQueryResponseFormatResponseJsonSchema$Outbound = {
  name: string;
  strict: boolean;
  schema: { [k: string]: any };
};

/** @internal */
export const PostV2LogsQueryResponseFormatResponseJsonSchema$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponseJsonSchema$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponseJsonSchema
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponseJsonSchema$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponseJsonSchema$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponseJsonSchema$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponseJsonSchema$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponseJsonSchema$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponseJsonSchema$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryResponseFormatResponseJsonSchema$Outbound;
}

export function postV2LogsQueryResponseFormatResponseJsonSchemaToJSON(
  postV2LogsQueryResponseFormatResponseJsonSchema:
    PostV2LogsQueryResponseFormatResponseJsonSchema,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponseJsonSchema$outboundSchema.parse(
      postV2LogsQueryResponseFormatResponseJsonSchema,
    ),
  );
}

export function postV2LogsQueryResponseFormatResponseJsonSchemaFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponseJsonSchema,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponseJsonSchema$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponseJsonSchema' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse1$inboundSchema: z.ZodType<
  PostV2LogsQueryResponseFormatResponse1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PostV2LogsQueryResponseFormatResponse200Type$inboundSchema,
  json_schema: z.lazy(() =>
    PostV2LogsQueryResponseFormatResponseJsonSchema$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "json_schema": "jsonSchema",
  });
});

/** @internal */
export type PostV2LogsQueryResponseFormatResponse1$Outbound = {
  type: string;
  json_schema: PostV2LogsQueryResponseFormatResponseJsonSchema$Outbound;
};

/** @internal */
export const PostV2LogsQueryResponseFormatResponse1$outboundSchema: z.ZodType<
  PostV2LogsQueryResponseFormatResponse1$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryResponseFormatResponse1
> = z.object({
  type: PostV2LogsQueryResponseFormatResponse200Type$outboundSchema,
  jsonSchema: z.lazy(() =>
    PostV2LogsQueryResponseFormatResponseJsonSchema$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    jsonSchema: "json_schema",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse1$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse1$Outbound` instead. */
  export type Outbound = PostV2LogsQueryResponseFormatResponse1$Outbound;
}

export function postV2LogsQueryResponseFormatResponse1ToJSON(
  postV2LogsQueryResponseFormatResponse1:
    PostV2LogsQueryResponseFormatResponse1,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse1$outboundSchema.parse(
      postV2LogsQueryResponseFormatResponse1,
    ),
  );
}

export function postV2LogsQueryResponseFormatResponse1FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryResponseFormatResponse1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseFormat$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseFormat,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQueryResponseFormatResponse2$inboundSchema),
  z.lazy(() => PostV2LogsQueryResponseFormatResponse1$inboundSchema),
]);

/** @internal */
export type PostV2LogsQueryItemsResponseFormat$Outbound =
  | PostV2LogsQueryResponseFormatResponse2$Outbound
  | PostV2LogsQueryResponseFormatResponse1$Outbound;

/** @internal */
export const PostV2LogsQueryItemsResponseFormat$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseFormat$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponseFormat
> = z.union([
  z.lazy(() => PostV2LogsQueryResponseFormatResponse2$outboundSchema),
  z.lazy(() => PostV2LogsQueryResponseFormatResponse1$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseFormat$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseFormat$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsResponseFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseFormat$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseFormat$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseFormat$Outbound;
}

export function postV2LogsQueryItemsResponseFormatToJSON(
  postV2LogsQueryItemsResponseFormat: PostV2LogsQueryItemsResponseFormat,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseFormat$outboundSchema.parse(
      postV2LogsQueryItemsResponseFormat,
    ),
  );
}

export function postV2LogsQueryItemsResponseFormatFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsResponseFormat, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponseFormat$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsResponseFormat' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsPhotoRealVersion$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsPhotoRealVersion> = z.nativeEnum(
    PostV2LogsQueryItemsPhotoRealVersion,
  );

/** @internal */
export const PostV2LogsQueryItemsPhotoRealVersion$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsPhotoRealVersion> =
    PostV2LogsQueryItemsPhotoRealVersion$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsPhotoRealVersion$ {
  /** @deprecated use `PostV2LogsQueryItemsPhotoRealVersion$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsPhotoRealVersion$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsPhotoRealVersion$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsPhotoRealVersion$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryItemsEncodingFormat$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsEncodingFormat
> = z.nativeEnum(PostV2LogsQueryItemsEncodingFormat);

/** @internal */
export const PostV2LogsQueryItemsEncodingFormat$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsEncodingFormat
> = PostV2LogsQueryItemsEncodingFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsEncodingFormat$ {
  /** @deprecated use `PostV2LogsQueryItemsEncodingFormat$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsEncodingFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsEncodingFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsEncodingFormat$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryItemsModelParameters$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsModelParameters,
  z.ZodTypeDef,
  unknown
> = z.object({
  temperature: z.number().optional(),
  maxTokens: z.number().optional(),
  topK: z.number().optional(),
  topP: z.number().optional(),
  frequencyPenalty: z.number().optional(),
  presencePenalty: z.number().optional(),
  numImages: z.number().optional(),
  seed: z.number().optional(),
  format: PostV2LogsQueryItemsFormat$inboundSchema.optional(),
  dimensions: z.string().optional(),
  quality: PostV2LogsQueryItemsQuality$inboundSchema.optional(),
  style: z.string().optional(),
  responseFormat: z.nullable(
    z.union([
      z.lazy(() => PostV2LogsQueryResponseFormatResponse2$inboundSchema),
      z.lazy(() => PostV2LogsQueryResponseFormatResponse1$inboundSchema),
    ]),
  ).optional(),
  photoRealVersion: PostV2LogsQueryItemsPhotoRealVersion$inboundSchema
    .optional(),
  encoding_format: PostV2LogsQueryItemsEncodingFormat$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "encoding_format": "encodingFormat",
  });
});

/** @internal */
export type PostV2LogsQueryItemsModelParameters$Outbound = {
  temperature?: number | undefined;
  maxTokens?: number | undefined;
  topK?: number | undefined;
  topP?: number | undefined;
  frequencyPenalty?: number | undefined;
  presencePenalty?: number | undefined;
  numImages?: number | undefined;
  seed?: number | undefined;
  format?: string | undefined;
  dimensions?: string | undefined;
  quality?: string | undefined;
  style?: string | undefined;
  responseFormat?:
    | PostV2LogsQueryResponseFormatResponse2$Outbound
    | PostV2LogsQueryResponseFormatResponse1$Outbound
    | null
    | undefined;
  photoRealVersion?: string | undefined;
  encoding_format?: string | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsModelParameters$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsModelParameters$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsModelParameters
> = z.object({
  temperature: z.number().optional(),
  maxTokens: z.number().optional(),
  topK: z.number().optional(),
  topP: z.number().optional(),
  frequencyPenalty: z.number().optional(),
  presencePenalty: z.number().optional(),
  numImages: z.number().optional(),
  seed: z.number().optional(),
  format: PostV2LogsQueryItemsFormat$outboundSchema.optional(),
  dimensions: z.string().optional(),
  quality: PostV2LogsQueryItemsQuality$outboundSchema.optional(),
  style: z.string().optional(),
  responseFormat: z.nullable(
    z.union([
      z.lazy(() => PostV2LogsQueryResponseFormatResponse2$outboundSchema),
      z.lazy(() => PostV2LogsQueryResponseFormatResponse1$outboundSchema),
    ]),
  ).optional(),
  photoRealVersion: PostV2LogsQueryItemsPhotoRealVersion$outboundSchema
    .optional(),
  encodingFormat: PostV2LogsQueryItemsEncodingFormat$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    encodingFormat: "encoding_format",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsModelParameters$ {
  /** @deprecated use `PostV2LogsQueryItemsModelParameters$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsModelParameters$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsModelParameters$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsModelParameters$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsModelParameters$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsModelParameters$Outbound;
}

export function postV2LogsQueryItemsModelParametersToJSON(
  postV2LogsQueryItemsModelParameters: PostV2LogsQueryItemsModelParameters,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsModelParameters$outboundSchema.parse(
      postV2LogsQueryItemsModelParameters,
    ),
  );
}

export function postV2LogsQueryItemsModelParametersFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsModelParameters, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsModelParameters$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsModelParameters' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsProvider$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsProvider
> = z.nativeEnum(PostV2LogsQueryItemsProvider);

/** @internal */
export const PostV2LogsQueryItemsProvider$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsProvider
> = PostV2LogsQueryItemsProvider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsProvider$ {
  /** @deprecated use `PostV2LogsQueryItemsProvider$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsProvider$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsProvider$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsProvider$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryItemsRole$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsRole
> = z.nativeEnum(PostV2LogsQueryItemsRole);

/** @internal */
export const PostV2LogsQueryItemsRole$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsRole
> = PostV2LogsQueryItemsRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsRole$ {
  /** @deprecated use `PostV2LogsQueryItemsRole$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsRole$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsRole$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsRole$outboundSchema;
}

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQuery2Response200ApplicationJSONType> = z
    .nativeEnum(PostV2LogsQuery2Response200ApplicationJSONType);

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQuery2Response200ApplicationJSONType> =
    PostV2LogsQuery2Response200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ApplicationJSONType$ {
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONType$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const PostV2LogsQuery2ResponseImageUrl$inboundSchema: z.ZodType<
  PostV2LogsQuery2ResponseImageUrl,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  url: z.string(),
  detail: z.string().optional(),
});

/** @internal */
export type PostV2LogsQuery2ResponseImageUrl$Outbound = {
  id?: string | undefined;
  url: string;
  detail?: string | undefined;
};

/** @internal */
export const PostV2LogsQuery2ResponseImageUrl$outboundSchema: z.ZodType<
  PostV2LogsQuery2ResponseImageUrl$Outbound,
  z.ZodTypeDef,
  PostV2LogsQuery2ResponseImageUrl
> = z.object({
  id: z.string().optional(),
  url: z.string(),
  detail: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2ResponseImageUrl$ {
  /** @deprecated use `PostV2LogsQuery2ResponseImageUrl$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQuery2ResponseImageUrl$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2ResponseImageUrl$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQuery2ResponseImageUrl$outboundSchema;
  /** @deprecated use `PostV2LogsQuery2ResponseImageUrl$Outbound` instead. */
  export type Outbound = PostV2LogsQuery2ResponseImageUrl$Outbound;
}

export function postV2LogsQuery2ResponseImageUrlToJSON(
  postV2LogsQuery2ResponseImageUrl: PostV2LogsQuery2ResponseImageUrl,
): string {
  return JSON.stringify(
    PostV2LogsQuery2ResponseImageUrl$outboundSchema.parse(
      postV2LogsQuery2ResponseImageUrl,
    ),
  );
}

export function postV2LogsQuery2ResponseImageUrlFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQuery2ResponseImageUrl, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQuery2ResponseImageUrl$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQuery2ResponseImageUrl' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQuery2Response2$inboundSchema: z.ZodType<
  PostV2LogsQuery2Response2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PostV2LogsQuery2Response200ApplicationJSONType$inboundSchema,
  image_url: z.lazy(() => PostV2LogsQuery2ResponseImageUrl$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "image_url": "imageUrl",
  });
});

/** @internal */
export type PostV2LogsQuery2Response2$Outbound = {
  type: string;
  image_url: PostV2LogsQuery2ResponseImageUrl$Outbound;
};

/** @internal */
export const PostV2LogsQuery2Response2$outboundSchema: z.ZodType<
  PostV2LogsQuery2Response2$Outbound,
  z.ZodTypeDef,
  PostV2LogsQuery2Response2
> = z.object({
  type: PostV2LogsQuery2Response200ApplicationJSONType$outboundSchema,
  imageUrl: z.lazy(() => PostV2LogsQuery2ResponseImageUrl$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    imageUrl: "image_url",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response2$ {
  /** @deprecated use `PostV2LogsQuery2Response2$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQuery2Response2$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response2$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQuery2Response2$outboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response2$Outbound` instead. */
  export type Outbound = PostV2LogsQuery2Response2$Outbound;
}

export function postV2LogsQuery2Response2ToJSON(
  postV2LogsQuery2Response2: PostV2LogsQuery2Response2,
): string {
  return JSON.stringify(
    PostV2LogsQuery2Response2$outboundSchema.parse(postV2LogsQuery2Response2),
  );
}

export function postV2LogsQuery2Response2FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQuery2Response2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQuery2Response2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQuery2Response2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQuery2Response200Type$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQuery2Response200Type
> = z.nativeEnum(PostV2LogsQuery2Response200Type);

/** @internal */
export const PostV2LogsQuery2Response200Type$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQuery2Response200Type
> = PostV2LogsQuery2Response200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200Type$ {
  /** @deprecated use `PostV2LogsQuery2Response200Type$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQuery2Response200Type$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200Type$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQuery2Response200Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQuery2Response1$inboundSchema: z.ZodType<
  PostV2LogsQuery2Response1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PostV2LogsQuery2Response200Type$inboundSchema,
  text: z.string(),
});

/** @internal */
export type PostV2LogsQuery2Response1$Outbound = {
  type: string;
  text: string;
};

/** @internal */
export const PostV2LogsQuery2Response1$outboundSchema: z.ZodType<
  PostV2LogsQuery2Response1$Outbound,
  z.ZodTypeDef,
  PostV2LogsQuery2Response1
> = z.object({
  type: PostV2LogsQuery2Response200Type$outboundSchema,
  text: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response1$ {
  /** @deprecated use `PostV2LogsQuery2Response1$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQuery2Response1$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response1$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQuery2Response1$outboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response1$Outbound` instead. */
  export type Outbound = PostV2LogsQuery2Response1$Outbound;
}

export function postV2LogsQuery2Response1ToJSON(
  postV2LogsQuery2Response1: PostV2LogsQuery2Response1,
): string {
  return JSON.stringify(
    PostV2LogsQuery2Response1$outboundSchema.parse(postV2LogsQuery2Response1),
  );
}

export function postV2LogsQuery2Response1FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQuery2Response1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQuery2Response1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQuery2Response1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryContentResponse2$inboundSchema: z.ZodType<
  PostV2LogsQueryContentResponse2,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQuery2Response1$inboundSchema),
  z.lazy(() => PostV2LogsQuery2Response2$inboundSchema),
]);

/** @internal */
export type PostV2LogsQueryContentResponse2$Outbound =
  | PostV2LogsQuery2Response1$Outbound
  | PostV2LogsQuery2Response2$Outbound;

/** @internal */
export const PostV2LogsQueryContentResponse2$outboundSchema: z.ZodType<
  PostV2LogsQueryContentResponse2$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryContentResponse2
> = z.union([
  z.lazy(() => PostV2LogsQuery2Response1$outboundSchema),
  z.lazy(() => PostV2LogsQuery2Response2$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryContentResponse2$ {
  /** @deprecated use `PostV2LogsQueryContentResponse2$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryContentResponse2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryContentResponse2$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryContentResponse2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryContentResponse2$Outbound` instead. */
  export type Outbound = PostV2LogsQueryContentResponse2$Outbound;
}

export function postV2LogsQueryContentResponse2ToJSON(
  postV2LogsQueryContentResponse2: PostV2LogsQueryContentResponse2,
): string {
  return JSON.stringify(
    PostV2LogsQueryContentResponse2$outboundSchema.parse(
      postV2LogsQueryContentResponse2,
    ),
  );
}

export function postV2LogsQueryContentResponse2FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryContentResponse2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryContentResponse2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryContentResponse2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsContent$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsContent,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() => PostV2LogsQuery2Response1$inboundSchema),
    z.lazy(() => PostV2LogsQuery2Response2$inboundSchema),
  ])),
]);

/** @internal */
export type PostV2LogsQueryItemsContent$Outbound =
  | string
  | Array<
    PostV2LogsQuery2Response1$Outbound | PostV2LogsQuery2Response2$Outbound
  >;

/** @internal */
export const PostV2LogsQueryItemsContent$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsContent$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsContent
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() => PostV2LogsQuery2Response1$outboundSchema),
    z.lazy(() => PostV2LogsQuery2Response2$outboundSchema),
  ])),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsContent$ {
  /** @deprecated use `PostV2LogsQueryItemsContent$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsContent$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsContent$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsContent$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsContent$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsContent$Outbound;
}

export function postV2LogsQueryItemsContentToJSON(
  postV2LogsQueryItemsContent: PostV2LogsQueryItemsContent,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsContent$outboundSchema.parse(
      postV2LogsQueryItemsContent,
    ),
  );
}

export function postV2LogsQueryItemsContentFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsContent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsContent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsContent' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponse200Type$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsResponse200Type
> = z.nativeEnum(PostV2LogsQueryItemsResponse200Type);

/** @internal */
export const PostV2LogsQueryItemsResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsResponse200Type> =
    PostV2LogsQueryItemsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponse200Type$ {
  /** @deprecated use `PostV2LogsQueryItemsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponse200Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponse200Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction$inboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/** @internal */
export type PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction$Outbound =
  {
    name: string;
    arguments: string;
  };

/** @internal */
export const PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction$outboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction$ {
  /** @deprecated use `PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction$Outbound;
}

export function postV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunctionToJSON(
  postV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction:
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction$outboundSchema
      .parse(
        postV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction,
      ),
  );
}

export function postV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunctionFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsToolCalls$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsToolCalls,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type: PostV2LogsQueryItemsResponse200Type$inboundSchema,
  function: z.lazy(() =>
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction$inboundSchema
  ),
});

/** @internal */
export type PostV2LogsQueryItemsToolCalls$Outbound = {
  id?: string | undefined;
  index?: number | undefined;
  type: string;
  function:
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction$Outbound;
};

/** @internal */
export const PostV2LogsQueryItemsToolCalls$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsToolCalls$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsToolCalls
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type: PostV2LogsQueryItemsResponse200Type$outboundSchema,
  function: z.lazy(() =>
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyFunction$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsToolCalls$ {
  /** @deprecated use `PostV2LogsQueryItemsToolCalls$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsToolCalls$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsToolCalls$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsToolCalls$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsToolCalls$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsToolCalls$Outbound;
}

export function postV2LogsQueryItemsToolCallsToJSON(
  postV2LogsQueryItemsToolCalls: PostV2LogsQueryItemsToolCalls,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsToolCalls$outboundSchema.parse(
      postV2LogsQueryItemsToolCalls,
    ),
  );
}

export function postV2LogsQueryItemsToolCallsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsToolCalls, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsToolCalls$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsToolCalls' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsMessages$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsMessages,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: PostV2LogsQueryItemsRole$inboundSchema,
  content: z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => PostV2LogsQuery2Response1$inboundSchema),
      z.lazy(() => PostV2LogsQuery2Response2$inboundSchema),
    ])),
  ]),
  tool_calls: z.array(z.lazy(() => PostV2LogsQueryItemsToolCalls$inboundSchema))
    .optional(),
  id: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "tool_calls": "toolCalls",
  });
});

/** @internal */
export type PostV2LogsQueryItemsMessages$Outbound = {
  role: string;
  content:
    | string
    | Array<
      PostV2LogsQuery2Response1$Outbound | PostV2LogsQuery2Response2$Outbound
    >;
  tool_calls?: Array<PostV2LogsQueryItemsToolCalls$Outbound> | undefined;
  id?: string | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsMessages$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsMessages$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsMessages
> = z.object({
  role: PostV2LogsQueryItemsRole$outboundSchema,
  content: z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => PostV2LogsQuery2Response1$outboundSchema),
      z.lazy(() => PostV2LogsQuery2Response2$outboundSchema),
    ])),
  ]),
  toolCalls: z.array(z.lazy(() => PostV2LogsQueryItemsToolCalls$outboundSchema))
    .optional(),
  id: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    toolCalls: "tool_calls",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsMessages$ {
  /** @deprecated use `PostV2LogsQueryItemsMessages$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsMessages$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsMessages$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsMessages$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsMessages$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsMessages$Outbound;
}

export function postV2LogsQueryItemsMessagesToJSON(
  postV2LogsQueryItemsMessages: PostV2LogsQueryItemsMessages,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsMessages$outboundSchema.parse(
      postV2LogsQueryItemsMessages,
    ),
  );
}

export function postV2LogsQueryItemsMessagesFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsMessages, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsMessages$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsMessages' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsPromptConfig$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsPromptConfig,
  z.ZodTypeDef,
  unknown
> = z.object({
  stream: z.boolean(),
  model: z.string(),
  model_db_id: z.string(),
  model_type: PostV2LogsQueryItemsModelType$inboundSchema,
  model_parameters: z.lazy(() =>
    PostV2LogsQueryItemsModelParameters$inboundSchema
  ),
  provider: PostV2LogsQueryItemsProvider$inboundSchema,
  messages: z.array(z.lazy(() => PostV2LogsQueryItemsMessages$inboundSchema)),
  integration_id: z.nullable(z.string()).optional(),
  version: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "model_db_id": "modelDbId",
    "model_type": "modelType",
    "model_parameters": "modelParameters",
    "integration_id": "integrationId",
  });
});

/** @internal */
export type PostV2LogsQueryItemsPromptConfig$Outbound = {
  stream: boolean;
  model: string;
  model_db_id: string;
  model_type: string;
  model_parameters: PostV2LogsQueryItemsModelParameters$Outbound;
  provider: string;
  messages: Array<PostV2LogsQueryItemsMessages$Outbound>;
  integration_id?: string | null | undefined;
  version?: string | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsPromptConfig$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsPromptConfig$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsPromptConfig
> = z.object({
  stream: z.boolean(),
  model: z.string(),
  modelDbId: z.string(),
  modelType: PostV2LogsQueryItemsModelType$outboundSchema,
  modelParameters: z.lazy(() =>
    PostV2LogsQueryItemsModelParameters$outboundSchema
  ),
  provider: PostV2LogsQueryItemsProvider$outboundSchema,
  messages: z.array(z.lazy(() => PostV2LogsQueryItemsMessages$outboundSchema)),
  integrationId: z.nullable(z.string()).optional(),
  version: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    modelDbId: "model_db_id",
    modelType: "model_type",
    modelParameters: "model_parameters",
    integrationId: "integration_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsPromptConfig$ {
  /** @deprecated use `PostV2LogsQueryItemsPromptConfig$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsPromptConfig$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsPromptConfig$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsPromptConfig$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsPromptConfig$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsPromptConfig$Outbound;
}

export function postV2LogsQueryItemsPromptConfigToJSON(
  postV2LogsQueryItemsPromptConfig: PostV2LogsQueryItemsPromptConfig,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsPromptConfig$outboundSchema.parse(
      postV2LogsQueryItemsPromptConfig,
    ),
  );
}

export function postV2LogsQueryItemsPromptConfigFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsPromptConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsPromptConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsPromptConfig' from JSON`,
  );
}

/** @internal */
export const ItemsVariables$inboundSchema: z.ZodType<
  ItemsVariables,
  z.ZodTypeDef,
  unknown
> = z.object({
  key: z.string(),
  value: z.any().optional(),
  is_pii: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    "is_pii": "isPii",
  });
});

/** @internal */
export type ItemsVariables$Outbound = {
  key: string;
  value?: any | undefined;
  is_pii: boolean;
};

/** @internal */
export const ItemsVariables$outboundSchema: z.ZodType<
  ItemsVariables$Outbound,
  z.ZodTypeDef,
  ItemsVariables
> = z.object({
  key: z.string(),
  value: z.any().optional(),
  isPii: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    isPii: "is_pii",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsVariables$ {
  /** @deprecated use `ItemsVariables$inboundSchema` instead. */
  export const inboundSchema = ItemsVariables$inboundSchema;
  /** @deprecated use `ItemsVariables$outboundSchema` instead. */
  export const outboundSchema = ItemsVariables$outboundSchema;
  /** @deprecated use `ItemsVariables$Outbound` instead. */
  export type Outbound = ItemsVariables$Outbound;
}

export function itemsVariablesToJSON(itemsVariables: ItemsVariables): string {
  return JSON.stringify(ItemsVariables$outboundSchema.parse(itemsVariables));
}

export function itemsVariablesFromJSON(
  jsonString: string,
): SafeParseResult<ItemsVariables, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsVariables$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsVariables' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsPerformance$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsPerformance,
  z.ZodTypeDef,
  unknown
> = z.object({
  latency: z.number(),
  first_time_to_token: z.nullable(z.number()).optional(),
  tokens_per_second: z.nullable(z.number()).optional(),
}).transform((v) => {
  return remap$(v, {
    "first_time_to_token": "firstTimeToToken",
    "tokens_per_second": "tokensPerSecond",
  });
});

/** @internal */
export type PostV2LogsQueryItemsPerformance$Outbound = {
  latency: number;
  first_time_to_token?: number | null | undefined;
  tokens_per_second?: number | null | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsPerformance$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsPerformance$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsPerformance
> = z.object({
  latency: z.number(),
  firstTimeToToken: z.nullable(z.number()).optional(),
  tokensPerSecond: z.nullable(z.number()).optional(),
}).transform((v) => {
  return remap$(v, {
    firstTimeToToken: "first_time_to_token",
    tokensPerSecond: "tokens_per_second",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsPerformance$ {
  /** @deprecated use `PostV2LogsQueryItemsPerformance$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsPerformance$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsPerformance$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsPerformance$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsPerformance$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsPerformance$Outbound;
}

export function postV2LogsQueryItemsPerformanceToJSON(
  postV2LogsQueryItemsPerformance: PostV2LogsQueryItemsPerformance,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsPerformance$outboundSchema.parse(
      postV2LogsQueryItemsPerformance,
    ),
  );
}

export function postV2LogsQueryItemsPerformanceFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsPerformance, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsPerformance$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsPerformance' from JSON`,
  );
}

/** @internal */
export const ItemsPromptTokensDetails$inboundSchema: z.ZodType<
  ItemsPromptTokensDetails,
  z.ZodTypeDef,
  unknown
> = z.object({
  cached_tokens: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    "cached_tokens": "cachedTokens",
  });
});

/** @internal */
export type ItemsPromptTokensDetails$Outbound = {
  cached_tokens?: number | undefined;
};

/** @internal */
export const ItemsPromptTokensDetails$outboundSchema: z.ZodType<
  ItemsPromptTokensDetails$Outbound,
  z.ZodTypeDef,
  ItemsPromptTokensDetails
> = z.object({
  cachedTokens: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    cachedTokens: "cached_tokens",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsPromptTokensDetails$ {
  /** @deprecated use `ItemsPromptTokensDetails$inboundSchema` instead. */
  export const inboundSchema = ItemsPromptTokensDetails$inboundSchema;
  /** @deprecated use `ItemsPromptTokensDetails$outboundSchema` instead. */
  export const outboundSchema = ItemsPromptTokensDetails$outboundSchema;
  /** @deprecated use `ItemsPromptTokensDetails$Outbound` instead. */
  export type Outbound = ItemsPromptTokensDetails$Outbound;
}

export function itemsPromptTokensDetailsToJSON(
  itemsPromptTokensDetails: ItemsPromptTokensDetails,
): string {
  return JSON.stringify(
    ItemsPromptTokensDetails$outboundSchema.parse(itemsPromptTokensDetails),
  );
}

export function itemsPromptTokensDetailsFromJSON(
  jsonString: string,
): SafeParseResult<ItemsPromptTokensDetails, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsPromptTokensDetails$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsPromptTokensDetails' from JSON`,
  );
}

/** @internal */
export const ItemsCompletionTokensDetails$inboundSchema: z.ZodType<
  ItemsCompletionTokensDetails,
  z.ZodTypeDef,
  unknown
> = z.object({
  reasoning_tokens: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    "reasoning_tokens": "reasoningTokens",
  });
});

/** @internal */
export type ItemsCompletionTokensDetails$Outbound = {
  reasoning_tokens?: number | undefined;
};

/** @internal */
export const ItemsCompletionTokensDetails$outboundSchema: z.ZodType<
  ItemsCompletionTokensDetails$Outbound,
  z.ZodTypeDef,
  ItemsCompletionTokensDetails
> = z.object({
  reasoningTokens: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    reasoningTokens: "reasoning_tokens",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsCompletionTokensDetails$ {
  /** @deprecated use `ItemsCompletionTokensDetails$inboundSchema` instead. */
  export const inboundSchema = ItemsCompletionTokensDetails$inboundSchema;
  /** @deprecated use `ItemsCompletionTokensDetails$outboundSchema` instead. */
  export const outboundSchema = ItemsCompletionTokensDetails$outboundSchema;
  /** @deprecated use `ItemsCompletionTokensDetails$Outbound` instead. */
  export type Outbound = ItemsCompletionTokensDetails$Outbound;
}

export function itemsCompletionTokensDetailsToJSON(
  itemsCompletionTokensDetails: ItemsCompletionTokensDetails,
): string {
  return JSON.stringify(
    ItemsCompletionTokensDetails$outboundSchema.parse(
      itemsCompletionTokensDetails,
    ),
  );
}

export function itemsCompletionTokensDetailsFromJSON(
  jsonString: string,
): SafeParseResult<ItemsCompletionTokensDetails, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsCompletionTokensDetails$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsCompletionTokensDetails' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsUsage$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsUsage,
  z.ZodTypeDef,
  unknown
> = z.object({
  total_tokens: z.number().optional(),
  prompt_tokens: z.number().optional(),
  completion_tokens: z.number().optional(),
  prompt_tokens_details: z.lazy(() => ItemsPromptTokensDetails$inboundSchema)
    .optional(),
  completion_tokens_details: z.lazy(() =>
    ItemsCompletionTokensDetails$inboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "total_tokens": "totalTokens",
    "prompt_tokens": "promptTokens",
    "completion_tokens": "completionTokens",
    "prompt_tokens_details": "promptTokensDetails",
    "completion_tokens_details": "completionTokensDetails",
  });
});

/** @internal */
export type PostV2LogsQueryItemsUsage$Outbound = {
  total_tokens?: number | undefined;
  prompt_tokens?: number | undefined;
  completion_tokens?: number | undefined;
  prompt_tokens_details?: ItemsPromptTokensDetails$Outbound | undefined;
  completion_tokens_details?: ItemsCompletionTokensDetails$Outbound | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsUsage$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsUsage$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsUsage
> = z.object({
  totalTokens: z.number().optional(),
  promptTokens: z.number().optional(),
  completionTokens: z.number().optional(),
  promptTokensDetails: z.lazy(() => ItemsPromptTokensDetails$outboundSchema)
    .optional(),
  completionTokensDetails: z.lazy(() =>
    ItemsCompletionTokensDetails$outboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    totalTokens: "total_tokens",
    promptTokens: "prompt_tokens",
    completionTokens: "completion_tokens",
    promptTokensDetails: "prompt_tokens_details",
    completionTokensDetails: "completion_tokens_details",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsUsage$ {
  /** @deprecated use `PostV2LogsQueryItemsUsage$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsUsage$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsUsage$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsUsage$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsUsage$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsUsage$Outbound;
}

export function postV2LogsQueryItemsUsageToJSON(
  postV2LogsQueryItemsUsage: PostV2LogsQueryItemsUsage,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsUsage$outboundSchema.parse(postV2LogsQueryItemsUsage),
  );
}

export function postV2LogsQueryItemsUsageFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsUsage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsUsage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsUsage' from JSON`,
  );
}

/** @internal */
export const ItemsBilling$inboundSchema: z.ZodType<
  ItemsBilling,
  z.ZodTypeDef,
  unknown
> = z.object({
  total_cost: z.nullable(z.number()).optional(),
  input_cost: z.nullable(z.number()).optional(),
  output_cost: z.nullable(z.number()).optional(),
  billable: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    "total_cost": "totalCost",
    "input_cost": "inputCost",
    "output_cost": "outputCost",
  });
});

/** @internal */
export type ItemsBilling$Outbound = {
  total_cost?: number | null | undefined;
  input_cost?: number | null | undefined;
  output_cost?: number | null | undefined;
  billable: boolean;
};

/** @internal */
export const ItemsBilling$outboundSchema: z.ZodType<
  ItemsBilling$Outbound,
  z.ZodTypeDef,
  ItemsBilling
> = z.object({
  totalCost: z.nullable(z.number()).optional(),
  inputCost: z.nullable(z.number()).optional(),
  outputCost: z.nullable(z.number()).optional(),
  billable: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    totalCost: "total_cost",
    inputCost: "input_cost",
    outputCost: "output_cost",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsBilling$ {
  /** @deprecated use `ItemsBilling$inboundSchema` instead. */
  export const inboundSchema = ItemsBilling$inboundSchema;
  /** @deprecated use `ItemsBilling$outboundSchema` instead. */
  export const outboundSchema = ItemsBilling$outboundSchema;
  /** @deprecated use `ItemsBilling$Outbound` instead. */
  export type Outbound = ItemsBilling$Outbound;
}

export function itemsBillingToJSON(itemsBilling: ItemsBilling): string {
  return JSON.stringify(ItemsBilling$outboundSchema.parse(itemsBilling));
}

export function itemsBillingFromJSON(
  jsonString: string,
): SafeParseResult<ItemsBilling, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsBilling$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsBilling' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseMetadata$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({
  datasource_id: z.string(),
  chunk_id: z.string(),
  file_name: z.string(),
  page_number: z.nullable(z.number()).optional(),
  file_type: z.string(),
}).transform((v) => {
  return remap$(v, {
    "datasource_id": "datasourceId",
    "chunk_id": "chunkId",
    "file_name": "fileName",
    "page_number": "pageNumber",
    "file_type": "fileType",
  });
});

/** @internal */
export type PostV2LogsQueryItemsResponseMetadata$Outbound = {
  datasource_id: string;
  chunk_id: string;
  file_name: string;
  page_number?: number | null | undefined;
  file_type: string;
};

/** @internal */
export const PostV2LogsQueryItemsResponseMetadata$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseMetadata$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponseMetadata
> = z.object({
  datasourceId: z.string(),
  chunkId: z.string(),
  fileName: z.string(),
  pageNumber: z.nullable(z.number()).optional(),
  fileType: z.string(),
}).transform((v) => {
  return remap$(v, {
    datasourceId: "datasource_id",
    chunkId: "chunk_id",
    fileName: "file_name",
    pageNumber: "page_number",
    fileType: "file_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseMetadata$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseMetadata$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseMetadata$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseMetadata$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseMetadata$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseMetadata$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseMetadata$Outbound;
}

export function postV2LogsQueryItemsResponseMetadataToJSON(
  postV2LogsQueryItemsResponseMetadata: PostV2LogsQueryItemsResponseMetadata,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseMetadata$outboundSchema.parse(
      postV2LogsQueryItemsResponseMetadata,
    ),
  );
}

export function postV2LogsQueryItemsResponseMetadataFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsResponseMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponseMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsResponseMetadata' from JSON`,
  );
}

/** @internal */
export const ItemsDocuments$inboundSchema: z.ZodType<
  ItemsDocuments,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  text: z.string(),
  metadata: z.lazy(() => PostV2LogsQueryItemsResponseMetadata$inboundSchema),
  score: z.number(),
  rerank_score: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    "rerank_score": "rerankScore",
  });
});

/** @internal */
export type ItemsDocuments$Outbound = {
  id: string;
  text: string;
  metadata: PostV2LogsQueryItemsResponseMetadata$Outbound;
  score: number;
  rerank_score?: number | undefined;
};

/** @internal */
export const ItemsDocuments$outboundSchema: z.ZodType<
  ItemsDocuments$Outbound,
  z.ZodTypeDef,
  ItemsDocuments
> = z.object({
  id: z.string(),
  text: z.string(),
  metadata: z.lazy(() => PostV2LogsQueryItemsResponseMetadata$outboundSchema),
  score: z.number(),
  rerankScore: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    rerankScore: "rerank_score",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsDocuments$ {
  /** @deprecated use `ItemsDocuments$inboundSchema` instead. */
  export const inboundSchema = ItemsDocuments$inboundSchema;
  /** @deprecated use `ItemsDocuments$outboundSchema` instead. */
  export const outboundSchema = ItemsDocuments$outboundSchema;
  /** @deprecated use `ItemsDocuments$Outbound` instead. */
  export type Outbound = ItemsDocuments$Outbound;
}

export function itemsDocumentsToJSON(itemsDocuments: ItemsDocuments): string {
  return JSON.stringify(ItemsDocuments$outboundSchema.parse(itemsDocuments));
}

export function itemsDocumentsFromJSON(
  jsonString: string,
): SafeParseResult<ItemsDocuments, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsDocuments$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsDocuments' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsRetrievals$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsRetrievals,
  z.ZodTypeDef,
  unknown
> = z.object({
  knowledge_id: z.string(),
  documents: z.array(z.lazy(() => ItemsDocuments$inboundSchema)),
  knowledge_key: z.string(),
  query: z.string(),
}).transform((v) => {
  return remap$(v, {
    "knowledge_id": "knowledgeId",
    "knowledge_key": "knowledgeKey",
  });
});

/** @internal */
export type PostV2LogsQueryItemsRetrievals$Outbound = {
  knowledge_id: string;
  documents: Array<ItemsDocuments$Outbound>;
  knowledge_key: string;
  query: string;
};

/** @internal */
export const PostV2LogsQueryItemsRetrievals$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsRetrievals$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsRetrievals
> = z.object({
  knowledgeId: z.string(),
  documents: z.array(z.lazy(() => ItemsDocuments$outboundSchema)),
  knowledgeKey: z.string(),
  query: z.string(),
}).transform((v) => {
  return remap$(v, {
    knowledgeId: "knowledge_id",
    knowledgeKey: "knowledge_key",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsRetrievals$ {
  /** @deprecated use `PostV2LogsQueryItemsRetrievals$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsRetrievals$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsRetrievals$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsRetrievals$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsRetrievals$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsRetrievals$Outbound;
}

export function postV2LogsQueryItemsRetrievalsToJSON(
  postV2LogsQueryItemsRetrievals: PostV2LogsQueryItemsRetrievals,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsRetrievals$outboundSchema.parse(
      postV2LogsQueryItemsRetrievals,
    ),
  );
}

export function postV2LogsQueryItemsRetrievalsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsRetrievals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsRetrievals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsRetrievals' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryConfigurationResponse200Type$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryConfigurationResponse200Type> = z
    .nativeEnum(PostV2LogsQueryConfigurationResponse200Type);

/** @internal */
export const PostV2LogsQueryConfigurationResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryConfigurationResponse200Type> =
    PostV2LogsQueryConfigurationResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryConfigurationResponse200Type$ {
  /** @deprecated use `PostV2LogsQueryConfigurationResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryConfigurationResponse200Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryConfigurationResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryConfigurationResponse200Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryConfiguration2$inboundSchema: z.ZodType<
  PostV2LogsQueryConfiguration2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PostV2LogsQueryConfigurationResponse200Type$inboundSchema,
  query: z.string(),
});

/** @internal */
export type PostV2LogsQueryConfiguration2$Outbound = {
  type: string;
  query: string;
};

/** @internal */
export const PostV2LogsQueryConfiguration2$outboundSchema: z.ZodType<
  PostV2LogsQueryConfiguration2$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryConfiguration2
> = z.object({
  type: PostV2LogsQueryConfigurationResponse200Type$outboundSchema,
  query: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryConfiguration2$ {
  /** @deprecated use `PostV2LogsQueryConfiguration2$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryConfiguration2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryConfiguration2$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryConfiguration2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryConfiguration2$Outbound` instead. */
  export type Outbound = PostV2LogsQueryConfiguration2$Outbound;
}

export function postV2LogsQueryConfiguration2ToJSON(
  postV2LogsQueryConfiguration2: PostV2LogsQueryConfiguration2,
): string {
  return JSON.stringify(
    PostV2LogsQueryConfiguration2$outboundSchema.parse(
      postV2LogsQueryConfiguration2,
    ),
  );
}

export function postV2LogsQueryConfiguration2FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryConfiguration2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryConfiguration2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryConfiguration2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryConfigurationResponseType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryConfigurationResponseType> = z
    .nativeEnum(PostV2LogsQueryConfigurationResponseType);

/** @internal */
export const PostV2LogsQueryConfigurationResponseType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryConfigurationResponseType> =
    PostV2LogsQueryConfigurationResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryConfigurationResponseType$ {
  /** @deprecated use `PostV2LogsQueryConfigurationResponseType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryConfigurationResponseType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryConfigurationResponseType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryConfigurationResponseType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryConfiguration1$inboundSchema: z.ZodType<
  PostV2LogsQueryConfiguration1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PostV2LogsQueryConfigurationResponseType$inboundSchema,
});

/** @internal */
export type PostV2LogsQueryConfiguration1$Outbound = {
  type: string;
};

/** @internal */
export const PostV2LogsQueryConfiguration1$outboundSchema: z.ZodType<
  PostV2LogsQueryConfiguration1$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryConfiguration1
> = z.object({
  type: PostV2LogsQueryConfigurationResponseType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryConfiguration1$ {
  /** @deprecated use `PostV2LogsQueryConfiguration1$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryConfiguration1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryConfiguration1$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryConfiguration1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryConfiguration1$Outbound` instead. */
  export type Outbound = PostV2LogsQueryConfiguration1$Outbound;
}

export function postV2LogsQueryConfiguration1ToJSON(
  postV2LogsQueryConfiguration1: PostV2LogsQueryConfiguration1,
): string {
  return JSON.stringify(
    PostV2LogsQueryConfiguration1$outboundSchema.parse(
      postV2LogsQueryConfiguration1,
    ),
  );
}

export function postV2LogsQueryConfiguration1FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryConfiguration1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryConfiguration1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryConfiguration1' from JSON`,
  );
}

/** @internal */
export const ItemsConfiguration$inboundSchema: z.ZodType<
  ItemsConfiguration,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQueryConfiguration1$inboundSchema),
  z.lazy(() => PostV2LogsQueryConfiguration2$inboundSchema),
]);

/** @internal */
export type ItemsConfiguration$Outbound =
  | PostV2LogsQueryConfiguration1$Outbound
  | PostV2LogsQueryConfiguration2$Outbound;

/** @internal */
export const ItemsConfiguration$outboundSchema: z.ZodType<
  ItemsConfiguration$Outbound,
  z.ZodTypeDef,
  ItemsConfiguration
> = z.union([
  z.lazy(() => PostV2LogsQueryConfiguration1$outboundSchema),
  z.lazy(() => PostV2LogsQueryConfiguration2$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsConfiguration$ {
  /** @deprecated use `ItemsConfiguration$inboundSchema` instead. */
  export const inboundSchema = ItemsConfiguration$inboundSchema;
  /** @deprecated use `ItemsConfiguration$outboundSchema` instead. */
  export const outboundSchema = ItemsConfiguration$outboundSchema;
  /** @deprecated use `ItemsConfiguration$Outbound` instead. */
  export type Outbound = ItemsConfiguration$Outbound;
}

export function itemsConfigurationToJSON(
  itemsConfiguration: ItemsConfiguration,
): string {
  return JSON.stringify(
    ItemsConfiguration$outboundSchema.parse(itemsConfiguration),
  );
}

export function itemsConfigurationFromJSON(
  jsonString: string,
): SafeParseResult<ItemsConfiguration, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsConfiguration$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsConfiguration' from JSON`,
  );
}

/** @internal */
export const ItemsKnowledgeBases$inboundSchema: z.ZodType<
  ItemsKnowledgeBases,
  z.ZodTypeDef,
  unknown
> = z.object({
  knowledge_id: z.string(),
  configuration: z.union([
    z.lazy(() => PostV2LogsQueryConfiguration1$inboundSchema),
    z.lazy(() => PostV2LogsQueryConfiguration2$inboundSchema),
  ]),
}).transform((v) => {
  return remap$(v, {
    "knowledge_id": "knowledgeId",
  });
});

/** @internal */
export type ItemsKnowledgeBases$Outbound = {
  knowledge_id: string;
  configuration:
    | PostV2LogsQueryConfiguration1$Outbound
    | PostV2LogsQueryConfiguration2$Outbound;
};

/** @internal */
export const ItemsKnowledgeBases$outboundSchema: z.ZodType<
  ItemsKnowledgeBases$Outbound,
  z.ZodTypeDef,
  ItemsKnowledgeBases
> = z.object({
  knowledgeId: z.string(),
  configuration: z.union([
    z.lazy(() => PostV2LogsQueryConfiguration1$outboundSchema),
    z.lazy(() => PostV2LogsQueryConfiguration2$outboundSchema),
  ]),
}).transform((v) => {
  return remap$(v, {
    knowledgeId: "knowledge_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsKnowledgeBases$ {
  /** @deprecated use `ItemsKnowledgeBases$inboundSchema` instead. */
  export const inboundSchema = ItemsKnowledgeBases$inboundSchema;
  /** @deprecated use `ItemsKnowledgeBases$outboundSchema` instead. */
  export const outboundSchema = ItemsKnowledgeBases$outboundSchema;
  /** @deprecated use `ItemsKnowledgeBases$Outbound` instead. */
  export type Outbound = ItemsKnowledgeBases$Outbound;
}

export function itemsKnowledgeBasesToJSON(
  itemsKnowledgeBases: ItemsKnowledgeBases,
): string {
  return JSON.stringify(
    ItemsKnowledgeBases$outboundSchema.parse(itemsKnowledgeBases),
  );
}

export function itemsKnowledgeBasesFromJSON(
  jsonString: string,
): SafeParseResult<ItemsKnowledgeBases, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsKnowledgeBases$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsKnowledgeBases' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsType
> = z.nativeEnum(PostV2LogsQueryItemsType);

/** @internal */
export const PostV2LogsQueryItemsType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryItemsType
> = PostV2LogsQueryItemsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsType$ {
  /** @deprecated use `PostV2LogsQueryItemsType$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsType$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyType
  > =
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryItemsParameters$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsParameters,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyType$inboundSchema,
  properties: z.record(z.any()),
  required: z.array(z.string()).optional(),
  additionalProperties: z.boolean().optional(),
});

/** @internal */
export type PostV2LogsQueryItemsParameters$Outbound = {
  type: string;
  properties: { [k: string]: any };
  required?: Array<string> | undefined;
  additionalProperties?: boolean | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsParameters$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsParameters$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsParameters
> = z.object({
  type:
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBodyType$outboundSchema,
  properties: z.record(z.any()),
  required: z.array(z.string()).optional(),
  additionalProperties: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsParameters$ {
  /** @deprecated use `PostV2LogsQueryItemsParameters$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsParameters$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsParameters$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsParameters$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsParameters$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsParameters$Outbound;
}

export function postV2LogsQueryItemsParametersToJSON(
  postV2LogsQueryItemsParameters: PostV2LogsQueryItemsParameters,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsParameters$outboundSchema.parse(
      postV2LogsQueryItemsParameters,
    ),
  );
}

export function postV2LogsQueryItemsParametersFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsParameters, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsParameters$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsParameters' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsFunction$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsFunction,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  description: z.string().optional(),
  strict: z.boolean().optional(),
  parameters: z.lazy(() => PostV2LogsQueryItemsParameters$inboundSchema),
});

/** @internal */
export type PostV2LogsQueryItemsFunction$Outbound = {
  name: string;
  description?: string | undefined;
  strict?: boolean | undefined;
  parameters: PostV2LogsQueryItemsParameters$Outbound;
};

/** @internal */
export const PostV2LogsQueryItemsFunction$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsFunction$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsFunction
> = z.object({
  name: z.string(),
  description: z.string().optional(),
  strict: z.boolean().optional(),
  parameters: z.lazy(() => PostV2LogsQueryItemsParameters$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsFunction$ {
  /** @deprecated use `PostV2LogsQueryItemsFunction$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsFunction$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsFunction$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsFunction$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsFunction$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsFunction$Outbound;
}

export function postV2LogsQueryItemsFunctionToJSON(
  postV2LogsQueryItemsFunction: PostV2LogsQueryItemsFunction,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsFunction$outboundSchema.parse(
      postV2LogsQueryItemsFunction,
    ),
  );
}

export function postV2LogsQueryItemsFunctionFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsFunction, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsFunction$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsFunction' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsTools$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsTools,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PostV2LogsQueryItemsType$inboundSchema,
  function: z.lazy(() => PostV2LogsQueryItemsFunction$inboundSchema),
});

/** @internal */
export type PostV2LogsQueryItemsTools$Outbound = {
  type: string;
  function: PostV2LogsQueryItemsFunction$Outbound;
};

/** @internal */
export const PostV2LogsQueryItemsTools$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsTools$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsTools
> = z.object({
  type: PostV2LogsQueryItemsType$outboundSchema,
  function: z.lazy(() => PostV2LogsQueryItemsFunction$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsTools$ {
  /** @deprecated use `PostV2LogsQueryItemsTools$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsTools$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsTools$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsTools$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsTools$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsTools$Outbound;
}

export function postV2LogsQueryItemsToolsToJSON(
  postV2LogsQueryItemsTools: PostV2LogsQueryItemsTools,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsTools$outboundSchema.parse(postV2LogsQueryItemsTools),
  );
}

export function postV2LogsQueryItemsToolsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsTools, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsTools$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsTools' from JSON`,
  );
}

/** @internal */
export const ItemsPromptSnippets$inboundSchema: z.ZodType<
  ItemsPromptSnippets,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  key: z.string(),
  value: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
  });
});

/** @internal */
export type ItemsPromptSnippets$Outbound = {
  _id: string;
  key: string;
  value: string;
};

/** @internal */
export const ItemsPromptSnippets$outboundSchema: z.ZodType<
  ItemsPromptSnippets$Outbound,
  z.ZodTypeDef,
  ItemsPromptSnippets
> = z.object({
  id: z.string(),
  key: z.string(),
  value: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsPromptSnippets$ {
  /** @deprecated use `ItemsPromptSnippets$inboundSchema` instead. */
  export const inboundSchema = ItemsPromptSnippets$inboundSchema;
  /** @deprecated use `ItemsPromptSnippets$outboundSchema` instead. */
  export const outboundSchema = ItemsPromptSnippets$outboundSchema;
  /** @deprecated use `ItemsPromptSnippets$Outbound` instead. */
  export type Outbound = ItemsPromptSnippets$Outbound;
}

export function itemsPromptSnippetsToJSON(
  itemsPromptSnippets: ItemsPromptSnippets,
): string {
  return JSON.stringify(
    ItemsPromptSnippets$outboundSchema.parse(itemsPromptSnippets),
  );
}

export function itemsPromptSnippetsFromJSON(
  jsonString: string,
): SafeParseResult<ItemsPromptSnippets, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsPromptSnippets$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsPromptSnippets' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseData$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseData,
  z.ZodTypeDef,
  unknown
> = z.object({
  choices: z.array(z.lazy(() => PostV2LogsQueryItemsChoices$inboundSchema)),
  integration_ids: z.array(z.string()).optional(),
  action: PostV2LogsQueryItemsAction$inboundSchema,
  prompt_config: z.lazy(() => PostV2LogsQueryItemsPromptConfig$inboundSchema),
  variables: z.array(z.lazy(() => ItemsVariables$inboundSchema)),
  performance: z.lazy(() => PostV2LogsQueryItemsPerformance$inboundSchema)
    .optional(),
  usage: z.lazy(() => PostV2LogsQueryItemsUsage$inboundSchema).optional(),
  billing: z.lazy(() => ItemsBilling$inboundSchema),
  provider_response: z.any().optional(),
  retrievals: z.array(
    z.lazy(() => PostV2LogsQueryItemsRetrievals$inboundSchema),
  ).optional(),
  knowledge_bases: z.array(z.lazy(() => ItemsKnowledgeBases$inboundSchema))
    .optional(),
  tools: z.array(z.lazy(() => PostV2LogsQueryItemsTools$inboundSchema))
    .optional(),
  prompt_snippets: z.array(z.lazy(() => ItemsPromptSnippets$inboundSchema)),
}).transform((v) => {
  return remap$(v, {
    "integration_ids": "integrationIds",
    "prompt_config": "promptConfig",
    "provider_response": "providerResponse",
    "knowledge_bases": "knowledgeBases",
    "prompt_snippets": "promptSnippets",
  });
});

/** @internal */
export type PostV2LogsQueryItemsResponseData$Outbound = {
  choices: Array<PostV2LogsQueryItemsChoices$Outbound>;
  integration_ids?: Array<string> | undefined;
  action: string;
  prompt_config: PostV2LogsQueryItemsPromptConfig$Outbound;
  variables: Array<ItemsVariables$Outbound>;
  performance?: PostV2LogsQueryItemsPerformance$Outbound | undefined;
  usage?: PostV2LogsQueryItemsUsage$Outbound | undefined;
  billing: ItemsBilling$Outbound;
  provider_response?: any | undefined;
  retrievals?: Array<PostV2LogsQueryItemsRetrievals$Outbound> | undefined;
  knowledge_bases?: Array<ItemsKnowledgeBases$Outbound> | undefined;
  tools?: Array<PostV2LogsQueryItemsTools$Outbound> | undefined;
  prompt_snippets: Array<ItemsPromptSnippets$Outbound>;
};

/** @internal */
export const PostV2LogsQueryItemsResponseData$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseData$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponseData
> = z.object({
  choices: z.array(z.lazy(() => PostV2LogsQueryItemsChoices$outboundSchema)),
  integrationIds: z.array(z.string()).optional(),
  action: PostV2LogsQueryItemsAction$outboundSchema,
  promptConfig: z.lazy(() => PostV2LogsQueryItemsPromptConfig$outboundSchema),
  variables: z.array(z.lazy(() => ItemsVariables$outboundSchema)),
  performance: z.lazy(() => PostV2LogsQueryItemsPerformance$outboundSchema)
    .optional(),
  usage: z.lazy(() => PostV2LogsQueryItemsUsage$outboundSchema).optional(),
  billing: z.lazy(() => ItemsBilling$outboundSchema),
  providerResponse: z.any().optional(),
  retrievals: z.array(
    z.lazy(() => PostV2LogsQueryItemsRetrievals$outboundSchema),
  ).optional(),
  knowledgeBases: z.array(z.lazy(() => ItemsKnowledgeBases$outboundSchema))
    .optional(),
  tools: z.array(z.lazy(() => PostV2LogsQueryItemsTools$outboundSchema))
    .optional(),
  promptSnippets: z.array(z.lazy(() => ItemsPromptSnippets$outboundSchema)),
}).transform((v) => {
  return remap$(v, {
    integrationIds: "integration_ids",
    promptConfig: "prompt_config",
    providerResponse: "provider_response",
    knowledgeBases: "knowledge_bases",
    promptSnippets: "prompt_snippets",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseData$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseData$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsResponseData$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseData$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsResponseData$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseData$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseData$Outbound;
}

export function postV2LogsQueryItemsResponseDataToJSON(
  postV2LogsQueryItemsResponseData: PostV2LogsQueryItemsResponseData,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseData$outboundSchema.parse(
      postV2LogsQueryItemsResponseData,
    ),
  );
}

export function postV2LogsQueryItemsResponseDataFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsResponseData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsResponseData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsResponseData' from JSON`,
  );
}

/** @internal */
export const Items3$inboundSchema: z.ZodType<Items3, z.ZodTypeDef, unknown> = z
  .object({
    _id: z.string(),
    workspace_id: z.string(),
    workflow_metadata: z.record(z.any()).optional(),
    workflow_input: z.record(z.any()).optional(),
    workflow_output: z.record(z.any()).optional(),
    project_id: z.string().optional(),
    request_properties: z.lazy(() =>
      PostV2LogsQueryItemsRequestProperties$inboundSchema
    ).optional(),
    started_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    finished_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    evals: z.array(
      z.union([
        z.lazy(() => PostV2LogsQueryEvalsResponse1$inboundSchema),
        z.lazy(() => PostV2LogsQueryEvalsResponse2$inboundSchema),
        z.lazy(() => PostV2LogsQueryEvalsResponse3$inboundSchema),
        z.lazy(() => PostV2LogsQueryEvalsResponse4$inboundSchema),
        z.lazy(() => PostV2LogsQueryEvalsResponse5$inboundSchema),
        z.lazy(() => PostV2LogsQueryEvalsResponse6$inboundSchema),
        z.lazy(() => PostV2LogsQueryEvalsResponse7$inboundSchema),
      ]),
    ),
    product_type: PostV2LogsQueryItemsProductType$inboundSchema,
    related_entities: z.array(
      z.union([
        z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse1$inboundSchema),
        z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse2$inboundSchema),
        z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse3$inboundSchema),
        z.lazy(() => PostV2LogsQueryRelatedEntities4$inboundSchema),
      ]),
    ),
    data: z.lazy(() => PostV2LogsQueryItemsResponseData$inboundSchema),
  }).transform((v) => {
    return remap$(v, {
      "_id": "id",
      "workspace_id": "workspaceId",
      "workflow_metadata": "workflowMetadata",
      "workflow_input": "workflowInput",
      "workflow_output": "workflowOutput",
      "project_id": "projectId",
      "request_properties": "requestProperties",
      "started_at": "startedAt",
      "finished_at": "finishedAt",
      "product_type": "productType",
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type Items3$Outbound = {
  _id: string;
  workspace_id: string;
  workflow_metadata?: { [k: string]: any } | undefined;
  workflow_input?: { [k: string]: any } | undefined;
  workflow_output?: { [k: string]: any } | undefined;
  project_id?: string | undefined;
  request_properties?:
    | PostV2LogsQueryItemsRequestProperties$Outbound
    | undefined;
  started_at: string;
  finished_at?: string | undefined;
  evals: Array<
    | PostV2LogsQueryEvalsResponse1$Outbound
    | PostV2LogsQueryEvalsResponse2$Outbound
    | PostV2LogsQueryEvalsResponse3$Outbound
    | PostV2LogsQueryEvalsResponse4$Outbound
    | PostV2LogsQueryEvalsResponse5$Outbound
    | PostV2LogsQueryEvalsResponse6$Outbound
    | PostV2LogsQueryEvalsResponse7$Outbound
  >;
  product_type: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse1$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse2$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse3$Outbound
    | PostV2LogsQueryRelatedEntities4$Outbound
  >;
  data: PostV2LogsQueryItemsResponseData$Outbound;
};

/** @internal */
export const Items3$outboundSchema: z.ZodType<
  Items3$Outbound,
  z.ZodTypeDef,
  Items3
> = z.object({
  id: z.string(),
  workspaceId: z.string(),
  workflowMetadata: z.record(z.any()).optional(),
  workflowInput: z.record(z.any()).optional(),
  workflowOutput: z.record(z.any()).optional(),
  projectId: z.string().optional(),
  requestProperties: z.lazy(() =>
    PostV2LogsQueryItemsRequestProperties$outboundSchema
  ).optional(),
  startedAt: z.date().transform(v => v.toISOString()),
  finishedAt: z.date().transform(v => v.toISOString()).optional(),
  evals: z.array(
    z.union([
      z.lazy(() => PostV2LogsQueryEvalsResponse1$outboundSchema),
      z.lazy(() => PostV2LogsQueryEvalsResponse2$outboundSchema),
      z.lazy(() => PostV2LogsQueryEvalsResponse3$outboundSchema),
      z.lazy(() => PostV2LogsQueryEvalsResponse4$outboundSchema),
      z.lazy(() => PostV2LogsQueryEvalsResponse5$outboundSchema),
      z.lazy(() => PostV2LogsQueryEvalsResponse6$outboundSchema),
      z.lazy(() => PostV2LogsQueryEvalsResponse7$outboundSchema),
    ]),
  ),
  productType: PostV2LogsQueryItemsProductType$outboundSchema,
  relatedEntities: z.array(
    z.union([
      z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse1$outboundSchema),
      z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse2$outboundSchema),
      z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse3$outboundSchema),
      z.lazy(() => PostV2LogsQueryRelatedEntities4$outboundSchema),
    ]),
  ),
  data: z.lazy(() => PostV2LogsQueryItemsResponseData$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    workspaceId: "workspace_id",
    workflowMetadata: "workflow_metadata",
    workflowInput: "workflow_input",
    workflowOutput: "workflow_output",
    projectId: "project_id",
    requestProperties: "request_properties",
    startedAt: "started_at",
    finishedAt: "finished_at",
    productType: "product_type",
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Items3$ {
  /** @deprecated use `Items3$inboundSchema` instead. */
  export const inboundSchema = Items3$inboundSchema;
  /** @deprecated use `Items3$outboundSchema` instead. */
  export const outboundSchema = Items3$outboundSchema;
  /** @deprecated use `Items3$Outbound` instead. */
  export type Outbound = Items3$Outbound;
}

export function items3ToJSON(items3: Items3): string {
  return JSON.stringify(Items3$outboundSchema.parse(items3));
}

export function items3FromJSON(
  jsonString: string,
): SafeParseResult<Items3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Items3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Items3' from JSON`,
  );
}

/** @internal */
export const ItemsRequestProperties$inboundSchema: z.ZodType<
  ItemsRequestProperties,
  z.ZodTypeDef,
  unknown
> = z.object({
  source: z.string().optional(),
  location: z.string().optional(),
  latitude: z.string().optional(),
  longitude: z.string().optional(),
  response_time: z.number().optional(),
  metadata: z.record(z.any()).optional(),
  status: z.number().optional(),
  context: z.record(z.any()).optional(),
  extra_params: z.record(z.any()).optional(),
}).transform((v) => {
  return remap$(v, {
    "response_time": "responseTime",
    "extra_params": "extraParams",
  });
});

/** @internal */
export type ItemsRequestProperties$Outbound = {
  source?: string | undefined;
  location?: string | undefined;
  latitude?: string | undefined;
  longitude?: string | undefined;
  response_time?: number | undefined;
  metadata?: { [k: string]: any } | undefined;
  status?: number | undefined;
  context?: { [k: string]: any } | undefined;
  extra_params?: { [k: string]: any } | undefined;
};

/** @internal */
export const ItemsRequestProperties$outboundSchema: z.ZodType<
  ItemsRequestProperties$Outbound,
  z.ZodTypeDef,
  ItemsRequestProperties
> = z.object({
  source: z.string().optional(),
  location: z.string().optional(),
  latitude: z.string().optional(),
  longitude: z.string().optional(),
  responseTime: z.number().optional(),
  metadata: z.record(z.any()).optional(),
  status: z.number().optional(),
  context: z.record(z.any()).optional(),
  extraParams: z.record(z.any()).optional(),
}).transform((v) => {
  return remap$(v, {
    responseTime: "response_time",
    extraParams: "extra_params",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsRequestProperties$ {
  /** @deprecated use `ItemsRequestProperties$inboundSchema` instead. */
  export const inboundSchema = ItemsRequestProperties$inboundSchema;
  /** @deprecated use `ItemsRequestProperties$outboundSchema` instead. */
  export const outboundSchema = ItemsRequestProperties$outboundSchema;
  /** @deprecated use `ItemsRequestProperties$Outbound` instead. */
  export type Outbound = ItemsRequestProperties$Outbound;
}

export function itemsRequestPropertiesToJSON(
  itemsRequestProperties: ItemsRequestProperties,
): string {
  return JSON.stringify(
    ItemsRequestProperties$outboundSchema.parse(itemsRequestProperties),
  );
}

export function itemsRequestPropertiesFromJSON(
  jsonString: string,
): SafeParseResult<ItemsRequestProperties, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsRequestProperties$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsRequestProperties' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsRequestProperties$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsRequestProperties,
  z.ZodTypeDef,
  unknown
> = z.object({
  source: z.string().optional(),
  location: z.string().optional(),
  latitude: z.string().optional(),
  longitude: z.string().optional(),
  response_time: z.number().optional(),
  metadata: z.record(z.any()).optional(),
  status: z.number().optional(),
  context: z.record(z.any()).optional(),
  extra_params: z.record(z.any()).optional(),
}).transform((v) => {
  return remap$(v, {
    "response_time": "responseTime",
    "extra_params": "extraParams",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsRequestProperties$Outbound = {
  source?: string | undefined;
  location?: string | undefined;
  latitude?: string | undefined;
  longitude?: string | undefined;
  response_time?: number | undefined;
  metadata?: { [k: string]: any } | undefined;
  status?: number | undefined;
  context?: { [k: string]: any } | undefined;
  extra_params?: { [k: string]: any } | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsRequestProperties$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsRequestProperties$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsRequestProperties
> = z.object({
  source: z.string().optional(),
  location: z.string().optional(),
  latitude: z.string().optional(),
  longitude: z.string().optional(),
  responseTime: z.number().optional(),
  metadata: z.record(z.any()).optional(),
  status: z.number().optional(),
  context: z.record(z.any()).optional(),
  extraParams: z.record(z.any()).optional(),
}).transform((v) => {
  return remap$(v, {
    responseTime: "response_time",
    extraParams: "extra_params",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsRequestProperties$ {
  /** @deprecated use `PostV2LogsQueryEvalsRequestProperties$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsRequestProperties$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsRequestProperties$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsRequestProperties$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsRequestProperties$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsRequestProperties$Outbound;
}

export function postV2LogsQueryEvalsRequestPropertiesToJSON(
  postV2LogsQueryEvalsRequestProperties: PostV2LogsQueryEvalsRequestProperties,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsRequestProperties$outboundSchema.parse(
      postV2LogsQueryEvalsRequestProperties,
    ),
  );
}

export function postV2LogsQueryEvalsRequestPropertiesFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsRequestProperties, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsRequestProperties$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsRequestProperties' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsProductType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsProductType
> = z.nativeEnum(PostV2LogsQueryEvalsProductType);

/** @internal */
export const PostV2LogsQueryEvalsProductType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsProductType
> = PostV2LogsQueryEvalsProductType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsProductType$ {
  /** @deprecated use `PostV2LogsQueryEvalsProductType$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsProductType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsProductType$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsProductType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunRelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunRelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.lazy(() =>
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1$inboundSchema
  );

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunRelatedEntities$Outbound =
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunRelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunRelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunRelatedEntities
  > = z.lazy(() =>
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1$outboundSchema
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunRelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunRelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunRelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunRelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunRelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunRelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunRelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunRelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunRelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunRelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunRelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunRelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunRelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunRelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunRelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunRelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Type$inboundSchema,
    values: z.array(z.string()),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Status$inboundSchema,
    timestamp: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44$inboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4$Outbound =
  {
    type: string;
    values: Array<string>;
    id: string;
    status: string;
    timestamp: string;
    related_entities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44$Outbound
    >;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Type$outboundSchema,
    values: z.array(z.string()),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4Status$outboundSchema,
    timestamp: z.date().transform(v => v.toISOString()),
    relatedEntities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals41$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals42$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals43$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals44$outboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunStatus
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunStatus,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunStatus
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunStatus$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunStatus$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunStatus$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals34Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals34Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals34Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals34Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals34Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals34Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals34Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals34Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals34Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals34Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals34Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals34Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals34Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals33Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals33Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals33Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals33Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals33Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals33Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals33Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals33Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals33Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals33Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals33Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals33Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals33Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals32Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals32Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals32Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals32Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals32Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals32Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals32Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals32Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals32Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals32Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals32Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals32Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals32Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunRelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunRelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunRelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunRelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunRelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunRelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunRelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunRelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunRelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunRelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunRelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunRelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunRelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunRelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunRelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunRelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunRelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunRelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunRelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunRelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunRelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunRelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType$inboundSchema,
    value: z.boolean(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunStatus$inboundSchema,
    timestamp: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4$inboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3$Outbound =
  {
    type: string;
    value: boolean;
    id: string;
    status: string;
    timestamp: string;
    related_entities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4$Outbound
    >;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunType$outboundSchema,
    value: z.boolean(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunStatus$outboundSchema,
    timestamp: z.date().transform(v => v.toISOString()),
    relatedEntities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals31$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals3$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals4$outboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals24Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals24Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals24Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals24Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals24Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals24Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals24Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals24Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals24Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals24Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals24Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals24Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals24Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals23Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals23Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals23Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals23Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals23Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals23Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals23Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals23Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals23Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals23Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals23Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals23Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals23Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals22Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals22Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals22Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals22Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals22Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals22Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals22Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals22Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals22Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals22Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals22Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals22Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals22Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals2Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Type$inboundSchema,
    value: z.number(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Status$inboundSchema,
    timestamp: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4$inboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2$Outbound =
  {
    type: string;
    value: number;
    id: string;
    status: string;
    timestamp: string;
    related_entities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4$Outbound
    >;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Type$outboundSchema,
    value: z.number(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Evals7Status$outboundSchema,
    timestamp: z.date().transform(v => v.toISOString()),
    relatedEntities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun2$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun3$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun4$outboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsType
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsType,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsType
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsStatus
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsStatus,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsStatus
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsStatus$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsStatus$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsStatus$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals1Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvalsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvalsType
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvalsType,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvalsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvalsType
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvalsType$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvalsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvalsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvalsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvalsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvalsType$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvalsType$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsRelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsRelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsRelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsRelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsRelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsRelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsRelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsRelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsRelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsRelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsRelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsRelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsRelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsRelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsRelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsRelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsRelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsRelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsRelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsRelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsRelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsRelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsType$inboundSchema,
    value: z.string(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsStatus$inboundSchema,
    timestamp: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14$inboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1$Outbound =
  {
    type: string;
    value: string;
    id: string;
    status: string;
    timestamp: string;
    related_entities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14$Outbound
    >;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsType$outboundSchema,
    value: z.string(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2EvalsStatus$outboundSchema,
    timestamp: z.date().transform(v => v.toISOString()),
    relatedEntities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals11$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals12$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals13$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRunEvals14$outboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsEvals$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsEvals,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1$inboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2$inboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3$inboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4$inboundSchema
  ),
]);

/** @internal */
export type PostV2LogsQueryEvalsEvals$Outbound =
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1$Outbound
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2$Outbound
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3$Outbound
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsEvals$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsEvals$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsEvals
> = z.union([
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1$outboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2$outboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3$outboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4$outboundSchema
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsEvals$ {
  /** @deprecated use `PostV2LogsQueryEvalsEvals$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsEvals$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsEvals$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsEvals$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsEvals$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsEvals$Outbound;
}

export function postV2LogsQueryEvalsEvalsToJSON(
  postV2LogsQueryEvalsEvals: PostV2LogsQueryEvalsEvals,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsEvals$outboundSchema.parse(postV2LogsQueryEvalsEvals),
  );
}

export function postV2LogsQueryEvalsEvalsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsEvals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsEvals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsEvals' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Evals7Role$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Evals7Role
  > = z.nativeEnum(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Evals7Role,
  );

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Evals7Role$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Evals7Role
  > =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Evals7Role$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Evals7Role$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Evals7Role$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Evals7Role$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Evals7Role$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Evals7Role$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3$inboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Evals7Role$inboundSchema,
    url: z.string(),
  });

/** @internal */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3$Outbound =
  {
    role: string;
    url: string;
  };

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3$outboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Evals7Role$outboundSchema,
    url: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3$Outbound;
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBody3ToJSON(
  postV2LogsQueryMessageResponse200ApplicationJSONResponseBody3:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3$outboundSchema
      .parse(postV2LogsQueryMessageResponse200ApplicationJSONResponseBody3),
  );
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBody3FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2EvalsRole$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2EvalsRole
  > = z.nativeEnum(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2EvalsRole,
  );

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2EvalsRole$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2EvalsRole
  > =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2EvalsRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2EvalsRole$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2EvalsRole$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2EvalsRole$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2EvalsRole$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2EvalsRole$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2EvalsRole$inboundSchema,
    content: z.nullable(z.string()),
  });

/** @internal */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2$Outbound =
  {
    role: string;
    content: string | null;
  };

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2EvalsRole$outboundSchema,
    content: z.nullable(z.string()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2$Outbound;
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBody2ToJSON(
  postV2LogsQueryMessageResponse200ApplicationJSONResponseBody2:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2$outboundSchema
      .parse(postV2LogsQueryMessageResponse200ApplicationJSONResponseBody2),
  );
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBody2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Role$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Role
  > = z.nativeEnum(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Role,
  );

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Role$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Role
  > =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Role$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Role$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Role$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Role$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Role$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Role$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyType
  > =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction$inboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/** @internal */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction$Outbound =
  {
    name: string;
    arguments: string;
  };

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction$outboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction$Outbound;
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunctionToJSON(
  postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction$outboundSchema
      .parse(
        postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction,
      ),
  );
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunctionFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls$inboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    index: z.number().optional(),
    type:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyType$inboundSchema,
    function: z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction$inboundSchema
    ),
  });

/** @internal */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls$Outbound =
  {
    id?: string | undefined;
    index?: number | undefined;
    type: string;
    function:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction$Outbound;
  };

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls$outboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls
  > = z.object({
    id: z.string().optional(),
    index: z.number().optional(),
    type:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyType$outboundSchema,
    function: z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyFunction$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls$Outbound;
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCallsToJSON(
  postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls$outboundSchema
      .parse(
        postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls,
      ),
  );
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCallsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Role$inboundSchema,
    content: z.nullable(z.string()).optional(),
    tool_calls: z.array(
      z.lazy(() =>
        PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls$inboundSchema
      ),
    ),
  }).transform((v) => {
    return remap$(v, {
      "tool_calls": "toolCalls",
    });
  });

/** @internal */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1$Outbound =
  {
    role: string;
    content?: string | null | undefined;
    tool_calls: Array<
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls$Outbound
    >;
  };

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems2Role$outboundSchema,
    content: z.nullable(z.string()).optional(),
    toolCalls: z.array(
      z.lazy(() =>
        PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyToolCalls$outboundSchema
      ),
    ),
  }).transform((v) => {
    return remap$(v, {
      toolCalls: "tool_calls",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1$Outbound;
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBody1ToJSON(
  postV2LogsQueryMessageResponse200ApplicationJSONResponseBody1:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1$outboundSchema
      .parse(postV2LogsQueryMessageResponse200ApplicationJSONResponseBody1),
  );
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBody1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsMessage$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsMessage,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() =>
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2$inboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3$inboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1$inboundSchema
  ),
]);

/** @internal */
export type PostV2LogsQueryEvalsMessage$Outbound =
  | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2$Outbound
  | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3$Outbound
  | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsMessage$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsMessage$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsMessage
> = z.union([
  z.lazy(() =>
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2$outboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3$outboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1$outboundSchema
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsMessage$ {
  /** @deprecated use `PostV2LogsQueryEvalsMessage$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsMessage$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsMessage$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsMessage$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsMessage$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsMessage$Outbound;
}

export function postV2LogsQueryEvalsMessageToJSON(
  postV2LogsQueryEvalsMessage: PostV2LogsQueryEvalsMessage,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsMessage$outboundSchema.parse(
      postV2LogsQueryEvalsMessage,
    ),
  );
}

export function postV2LogsQueryEvalsMessageFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsMessage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsMessage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsMessage' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsChoices$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsChoices,
  z.ZodTypeDef,
  unknown
> = z.object({
  index: z.number(),
  message: z.union([
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1$inboundSchema
    ),
  ]).optional(),
  finish_reason: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "finish_reason": "finishReason",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsChoices$Outbound = {
  index: number;
  message?:
    | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2$Outbound
    | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3$Outbound
    | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1$Outbound
    | undefined;
  finish_reason?: string | null | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsChoices$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsChoices$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsChoices
> = z.object({
  index: z.number(),
  message: z.union([
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody2$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody3$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBody1$outboundSchema
    ),
  ]).optional(),
  finishReason: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    finishReason: "finish_reason",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsChoices$ {
  /** @deprecated use `PostV2LogsQueryEvalsChoices$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsChoices$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsChoices$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsChoices$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsChoices$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsChoices$Outbound;
}

export function postV2LogsQueryEvalsChoicesToJSON(
  postV2LogsQueryEvalsChoices: PostV2LogsQueryEvalsChoices,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsChoices$outboundSchema.parse(
      postV2LogsQueryEvalsChoices,
    ),
  );
}

export function postV2LogsQueryEvalsChoicesFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsChoices, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsChoices$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsChoices' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsAction$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsAction
> = z.nativeEnum(PostV2LogsQueryEvalsAction);

/** @internal */
export const PostV2LogsQueryEvalsAction$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsAction
> = PostV2LogsQueryEvalsAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsAction$ {
  /** @deprecated use `PostV2LogsQueryEvalsAction$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsAction$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsAction$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsAction$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsModelType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsModelType
> = z.nativeEnum(PostV2LogsQueryEvalsModelType);

/** @internal */
export const PostV2LogsQueryEvalsModelType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsModelType
> = PostV2LogsQueryEvalsModelType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsModelType$ {
  /** @deprecated use `PostV2LogsQueryEvalsModelType$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsModelType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsModelType$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsModelType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsFormat$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsFormat
> = z.nativeEnum(PostV2LogsQueryEvalsFormat);

/** @internal */
export const PostV2LogsQueryEvalsFormat$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsFormat
> = PostV2LogsQueryEvalsFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsFormat$ {
  /** @deprecated use `PostV2LogsQueryEvalsFormat$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsFormat$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsFormat$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsQuality$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsQuality
> = z.nativeEnum(PostV2LogsQueryEvalsQuality);

/** @internal */
export const PostV2LogsQueryEvalsQuality$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsQuality
> = PostV2LogsQueryEvalsQuality$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsQuality$ {
  /** @deprecated use `PostV2LogsQueryEvalsQuality$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsQuality$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsQuality$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsQuality$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Evals7Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Evals7Type
  > = z.nativeEnum(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Evals7Type,
  );

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Evals7Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Evals7Type
  > =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Evals7Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Evals7Type$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Evals7Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Evals7Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Evals7Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Evals7Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Evals7Type$inboundSchema,
  });

/** @internal */
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2$Outbound =
  {
    type: string;
  };

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Evals7Type$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2$Outbound;
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2ToJSON(
  postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2$outboundSchema
      .parse(
        postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2,
      ),
  );
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2EvalsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2EvalsType
  > = z.nativeEnum(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2EvalsType,
  );

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2EvalsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2EvalsType
  > =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2EvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2EvalsType$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2EvalsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2EvalsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2EvalsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2EvalsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema$inboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/** @internal */
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema$Outbound =
  {
    name: string;
    strict: boolean;
    schema: { [k: string]: any };
  };

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema$Outbound;
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchemaToJSON(
  postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema$outboundSchema
      .parse(
        postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema,
      ),
  );
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchemaFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2EvalsType$inboundSchema,
    json_schema: z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "json_schema": "jsonSchema",
    });
  });

/** @internal */
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1$Outbound =
  {
    type: string;
    json_schema:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema$Outbound;
  };

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2EvalsType$outboundSchema,
    jsonSchema: z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItemsJSONSchema$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      jsonSchema: "json_schema",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1$Outbound;
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1ToJSON(
  postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1$outboundSchema
      .parse(
        postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1,
      ),
  );
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseFormat$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseFormat,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() =>
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2$inboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1$inboundSchema
  ),
]);

/** @internal */
export type PostV2LogsQueryEvalsResponseFormat$Outbound =
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2$Outbound
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponseFormat$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseFormat$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponseFormat
> = z.union([
  z.lazy(() =>
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2$outboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1$outboundSchema
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseFormat$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseFormat$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponseFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseFormat$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseFormat$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponseFormat$Outbound;
}

export function postV2LogsQueryEvalsResponseFormatToJSON(
  postV2LogsQueryEvalsResponseFormat: PostV2LogsQueryEvalsResponseFormat,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseFormat$outboundSchema.parse(
      postV2LogsQueryEvalsResponseFormat,
    ),
  );
}

export function postV2LogsQueryEvalsResponseFormatFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponseFormat, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponseFormat$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponseFormat' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsPhotoRealVersion$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsPhotoRealVersion> = z.nativeEnum(
    PostV2LogsQueryEvalsPhotoRealVersion,
  );

/** @internal */
export const PostV2LogsQueryEvalsPhotoRealVersion$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsPhotoRealVersion> =
    PostV2LogsQueryEvalsPhotoRealVersion$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsPhotoRealVersion$ {
  /** @deprecated use `PostV2LogsQueryEvalsPhotoRealVersion$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsPhotoRealVersion$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsPhotoRealVersion$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsPhotoRealVersion$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsEncodingFormat$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsEncodingFormat
> = z.nativeEnum(PostV2LogsQueryEvalsEncodingFormat);

/** @internal */
export const PostV2LogsQueryEvalsEncodingFormat$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsEncodingFormat
> = PostV2LogsQueryEvalsEncodingFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsEncodingFormat$ {
  /** @deprecated use `PostV2LogsQueryEvalsEncodingFormat$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsEncodingFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsEncodingFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsEncodingFormat$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsModelParameters$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsModelParameters,
  z.ZodTypeDef,
  unknown
> = z.object({
  temperature: z.number().optional(),
  maxTokens: z.number().optional(),
  topK: z.number().optional(),
  topP: z.number().optional(),
  frequencyPenalty: z.number().optional(),
  presencePenalty: z.number().optional(),
  numImages: z.number().optional(),
  seed: z.number().optional(),
  format: PostV2LogsQueryEvalsFormat$inboundSchema.optional(),
  dimensions: z.string().optional(),
  quality: PostV2LogsQueryEvalsQuality$inboundSchema.optional(),
  style: z.string().optional(),
  responseFormat: z.nullable(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1$inboundSchema
      ),
    ]),
  ).optional(),
  photoRealVersion: PostV2LogsQueryEvalsPhotoRealVersion$inboundSchema
    .optional(),
  encoding_format: PostV2LogsQueryEvalsEncodingFormat$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "encoding_format": "encodingFormat",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsModelParameters$Outbound = {
  temperature?: number | undefined;
  maxTokens?: number | undefined;
  topK?: number | undefined;
  topP?: number | undefined;
  frequencyPenalty?: number | undefined;
  presencePenalty?: number | undefined;
  numImages?: number | undefined;
  seed?: number | undefined;
  format?: string | undefined;
  dimensions?: string | undefined;
  quality?: string | undefined;
  style?: string | undefined;
  responseFormat?:
    | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2$Outbound
    | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1$Outbound
    | null
    | undefined;
  photoRealVersion?: string | undefined;
  encoding_format?: string | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsModelParameters$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsModelParameters$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsModelParameters
> = z.object({
  temperature: z.number().optional(),
  maxTokens: z.number().optional(),
  topK: z.number().optional(),
  topP: z.number().optional(),
  frequencyPenalty: z.number().optional(),
  presencePenalty: z.number().optional(),
  numImages: z.number().optional(),
  seed: z.number().optional(),
  format: PostV2LogsQueryEvalsFormat$outboundSchema.optional(),
  dimensions: z.string().optional(),
  quality: PostV2LogsQueryEvalsQuality$outboundSchema.optional(),
  style: z.string().optional(),
  responseFormat: z.nullable(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1$outboundSchema
      ),
    ]),
  ).optional(),
  photoRealVersion: PostV2LogsQueryEvalsPhotoRealVersion$outboundSchema
    .optional(),
  encodingFormat: PostV2LogsQueryEvalsEncodingFormat$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    encodingFormat: "encoding_format",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsModelParameters$ {
  /** @deprecated use `PostV2LogsQueryEvalsModelParameters$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsModelParameters$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsModelParameters$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsModelParameters$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsModelParameters$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsModelParameters$Outbound;
}

export function postV2LogsQueryEvalsModelParametersToJSON(
  postV2LogsQueryEvalsModelParameters: PostV2LogsQueryEvalsModelParameters,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsModelParameters$outboundSchema.parse(
      postV2LogsQueryEvalsModelParameters,
    ),
  );
}

export function postV2LogsQueryEvalsModelParametersFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsModelParameters, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsModelParameters$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsModelParameters' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsProvider$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsProvider
> = z.nativeEnum(PostV2LogsQueryEvalsProvider);

/** @internal */
export const PostV2LogsQueryEvalsProvider$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsProvider
> = PostV2LogsQueryEvalsProvider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsProvider$ {
  /** @deprecated use `PostV2LogsQueryEvalsProvider$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsProvider$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsProvider$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsProvider$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsRole$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsRole
> = z.nativeEnum(PostV2LogsQueryEvalsRole);

/** @internal */
export const PostV2LogsQueryEvalsRole$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsRole
> = PostV2LogsQueryEvalsRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsRole$ {
  /** @deprecated use `PostV2LogsQueryEvalsRole$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsRole$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsRole$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsRole$outboundSchema;
}

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2EvalsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2EvalsType
  > = z.nativeEnum(
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2EvalsType,
  );

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2EvalsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2EvalsType
  > =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2EvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2EvalsType$ {
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2EvalsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2EvalsType$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2EvalsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2EvalsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl$inboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    url: z.string(),
    detail: z.string().optional(),
  });

/** @internal */
export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl$Outbound =
  {
    id?: string | undefined;
    url: string;
    detail?: string | undefined;
  };

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl$outboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl$Outbound,
    z.ZodTypeDef,
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl
  > = z.object({
    id: z.string().optional(),
    url: z.string(),
    detail: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl$ {
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl$outboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl$Outbound` instead. */
  export type Outbound =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl$Outbound;
}

export function postV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrlToJSON(
  postV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl:
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl,
): string {
  return JSON.stringify(
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl$outboundSchema
      .parse(postV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl),
  );
}

export function postV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrlFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBody2$inboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJSONResponseBody2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2EvalsType$inboundSchema,
    image_url: z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "image_url": "imageUrl",
    });
  });

/** @internal */
export type PostV2LogsQuery2Response200ApplicationJSONResponseBody2$Outbound = {
  type: string;
  image_url:
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl$Outbound;
};

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBody2$outboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJSONResponseBody2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQuery2Response200ApplicationJSONResponseBody2
  > = z.object({
    type:
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2EvalsType$outboundSchema,
    imageUrl: z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyImageUrl$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      imageUrl: "image_url",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ApplicationJSONResponseBody2$ {
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBody2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBody2$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBody2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBody2$outboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBody2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQuery2Response200ApplicationJSONResponseBody2$Outbound;
}

export function postV2LogsQuery2Response200ApplicationJSONResponseBody2ToJSON(
  postV2LogsQuery2Response200ApplicationJSONResponseBody2:
    PostV2LogsQuery2Response200ApplicationJSONResponseBody2,
): string {
  return JSON.stringify(
    PostV2LogsQuery2Response200ApplicationJSONResponseBody2$outboundSchema
      .parse(postV2LogsQuery2Response200ApplicationJSONResponseBody2),
  );
}

export function postV2LogsQuery2Response200ApplicationJSONResponseBody2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQuery2Response200ApplicationJSONResponseBody2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBody2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQuery2Response200ApplicationJSONResponseBody2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2Type
  > = z.nativeEnum(
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2Type,
  );

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2Type
  > =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2Type$ {
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2Type$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBody1$inboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJSONResponseBody1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2Type$inboundSchema,
    text: z.string(),
  });

/** @internal */
export type PostV2LogsQuery2Response200ApplicationJSONResponseBody1$Outbound = {
  type: string;
  text: string;
};

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBody1$outboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJSONResponseBody1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQuery2Response200ApplicationJSONResponseBody1
  > = z.object({
    type:
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems2Type$outboundSchema,
    text: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ApplicationJSONResponseBody1$ {
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBody1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBody1$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBody1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBody1$outboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBody1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQuery2Response200ApplicationJSONResponseBody1$Outbound;
}

export function postV2LogsQuery2Response200ApplicationJSONResponseBody1ToJSON(
  postV2LogsQuery2Response200ApplicationJSONResponseBody1:
    PostV2LogsQuery2Response200ApplicationJSONResponseBody1,
): string {
  return JSON.stringify(
    PostV2LogsQuery2Response200ApplicationJSONResponseBody1$outboundSchema
      .parse(postV2LogsQuery2Response200ApplicationJSONResponseBody1),
  );
}

export function postV2LogsQuery2Response200ApplicationJSONResponseBody1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQuery2Response200ApplicationJSONResponseBody1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBody1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQuery2Response200ApplicationJSONResponseBody1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryContentResponse200ApplicationJSONResponseBody2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBody2,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBody1$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBody2$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryContentResponse200ApplicationJSONResponseBody2$Outbound =
  | PostV2LogsQuery2Response200ApplicationJSONResponseBody1$Outbound
  | PostV2LogsQuery2Response200ApplicationJSONResponseBody2$Outbound;

/** @internal */
export const PostV2LogsQueryContentResponse200ApplicationJSONResponseBody2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBody2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBody2
  > = z.union([
    z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBody1$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBody2$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryContentResponse200ApplicationJSONResponseBody2$ {
  /** @deprecated use `PostV2LogsQueryContentResponse200ApplicationJSONResponseBody2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBody2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryContentResponse200ApplicationJSONResponseBody2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBody2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryContentResponse200ApplicationJSONResponseBody2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBody2$Outbound;
}

export function postV2LogsQueryContentResponse200ApplicationJSONResponseBody2ToJSON(
  postV2LogsQueryContentResponse200ApplicationJSONResponseBody2:
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBody2,
): string {
  return JSON.stringify(
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBody2$outboundSchema
      .parse(postV2LogsQueryContentResponse200ApplicationJSONResponseBody2),
  );
}

export function postV2LogsQueryContentResponse200ApplicationJSONResponseBody2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryContentResponse200ApplicationJSONResponseBody2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryContentResponse200ApplicationJSONResponseBody2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryContentResponse200ApplicationJSONResponseBody2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsContent$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsContent,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBody1$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBody2$inboundSchema
    ),
  ])),
]);

/** @internal */
export type PostV2LogsQueryEvalsContent$Outbound =
  | string
  | Array<
    | PostV2LogsQuery2Response200ApplicationJSONResponseBody1$Outbound
    | PostV2LogsQuery2Response200ApplicationJSONResponseBody2$Outbound
  >;

/** @internal */
export const PostV2LogsQueryEvalsContent$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsContent$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsContent
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBody1$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBody2$outboundSchema
    ),
  ])),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsContent$ {
  /** @deprecated use `PostV2LogsQueryEvalsContent$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsContent$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsContent$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsContent$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsContent$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsContent$Outbound;
}

export function postV2LogsQueryEvalsContentToJSON(
  postV2LogsQueryEvalsContent: PostV2LogsQueryEvalsContent,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsContent$outboundSchema.parse(
      postV2LogsQueryEvalsContent,
    ),
  );
}

export function postV2LogsQueryEvalsContentFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsContent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsContent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsContent' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataType
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataType,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataType
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction$Outbound =
  {
    name: string;
    arguments: string;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunctionToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunctionFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsToolCalls$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsToolCalls,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataType$inboundSchema,
  function: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction$inboundSchema
  ),
});

/** @internal */
export type PostV2LogsQueryEvalsToolCalls$Outbound = {
  id?: string | undefined;
  index?: number | undefined;
  type: string;
  function:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction$Outbound;
};

/** @internal */
export const PostV2LogsQueryEvalsToolCalls$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsToolCalls$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsToolCalls
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataType$outboundSchema,
  function: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFunction$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsToolCalls$ {
  /** @deprecated use `PostV2LogsQueryEvalsToolCalls$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsToolCalls$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsToolCalls$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsToolCalls$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsToolCalls$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsToolCalls$Outbound;
}

export function postV2LogsQueryEvalsToolCallsToJSON(
  postV2LogsQueryEvalsToolCalls: PostV2LogsQueryEvalsToolCalls,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsToolCalls$outboundSchema.parse(
      postV2LogsQueryEvalsToolCalls,
    ),
  );
}

export function postV2LogsQueryEvalsToolCallsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsToolCalls, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsToolCalls$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsToolCalls' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsMessages$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsMessages,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: PostV2LogsQueryEvalsRole$inboundSchema,
  content: z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() =>
        PostV2LogsQuery2Response200ApplicationJSONResponseBody1$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQuery2Response200ApplicationJSONResponseBody2$inboundSchema
      ),
    ])),
  ]),
  tool_calls: z.array(z.lazy(() => PostV2LogsQueryEvalsToolCalls$inboundSchema))
    .optional(),
  id: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "tool_calls": "toolCalls",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsMessages$Outbound = {
  role: string;
  content:
    | string
    | Array<
      | PostV2LogsQuery2Response200ApplicationJSONResponseBody1$Outbound
      | PostV2LogsQuery2Response200ApplicationJSONResponseBody2$Outbound
    >;
  tool_calls?: Array<PostV2LogsQueryEvalsToolCalls$Outbound> | undefined;
  id?: string | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsMessages$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsMessages$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsMessages
> = z.object({
  role: PostV2LogsQueryEvalsRole$outboundSchema,
  content: z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() =>
        PostV2LogsQuery2Response200ApplicationJSONResponseBody1$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQuery2Response200ApplicationJSONResponseBody2$outboundSchema
      ),
    ])),
  ]),
  toolCalls: z.array(z.lazy(() => PostV2LogsQueryEvalsToolCalls$outboundSchema))
    .optional(),
  id: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    toolCalls: "tool_calls",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsMessages$ {
  /** @deprecated use `PostV2LogsQueryEvalsMessages$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsMessages$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsMessages$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsMessages$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsMessages$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsMessages$Outbound;
}

export function postV2LogsQueryEvalsMessagesToJSON(
  postV2LogsQueryEvalsMessages: PostV2LogsQueryEvalsMessages,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsMessages$outboundSchema.parse(
      postV2LogsQueryEvalsMessages,
    ),
  );
}

export function postV2LogsQueryEvalsMessagesFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsMessages, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsMessages$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsMessages' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsPromptConfig$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsPromptConfig,
  z.ZodTypeDef,
  unknown
> = z.object({
  stream: z.boolean(),
  model: z.string(),
  model_db_id: z.string(),
  model_type: PostV2LogsQueryEvalsModelType$inboundSchema,
  model_parameters: z.lazy(() =>
    PostV2LogsQueryEvalsModelParameters$inboundSchema
  ),
  provider: PostV2LogsQueryEvalsProvider$inboundSchema,
  messages: z.array(z.lazy(() => PostV2LogsQueryEvalsMessages$inboundSchema)),
  integration_id: z.nullable(z.string()).optional(),
  version: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "model_db_id": "modelDbId",
    "model_type": "modelType",
    "model_parameters": "modelParameters",
    "integration_id": "integrationId",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsPromptConfig$Outbound = {
  stream: boolean;
  model: string;
  model_db_id: string;
  model_type: string;
  model_parameters: PostV2LogsQueryEvalsModelParameters$Outbound;
  provider: string;
  messages: Array<PostV2LogsQueryEvalsMessages$Outbound>;
  integration_id?: string | null | undefined;
  version?: string | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsPromptConfig$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsPromptConfig$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsPromptConfig
> = z.object({
  stream: z.boolean(),
  model: z.string(),
  modelDbId: z.string(),
  modelType: PostV2LogsQueryEvalsModelType$outboundSchema,
  modelParameters: z.lazy(() =>
    PostV2LogsQueryEvalsModelParameters$outboundSchema
  ),
  provider: PostV2LogsQueryEvalsProvider$outboundSchema,
  messages: z.array(z.lazy(() => PostV2LogsQueryEvalsMessages$outboundSchema)),
  integrationId: z.nullable(z.string()).optional(),
  version: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    modelDbId: "model_db_id",
    modelType: "model_type",
    modelParameters: "model_parameters",
    integrationId: "integration_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsPromptConfig$ {
  /** @deprecated use `PostV2LogsQueryEvalsPromptConfig$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsPromptConfig$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsPromptConfig$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsPromptConfig$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsPromptConfig$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsPromptConfig$Outbound;
}

export function postV2LogsQueryEvalsPromptConfigToJSON(
  postV2LogsQueryEvalsPromptConfig: PostV2LogsQueryEvalsPromptConfig,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsPromptConfig$outboundSchema.parse(
      postV2LogsQueryEvalsPromptConfig,
    ),
  );
}

export function postV2LogsQueryEvalsPromptConfigFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsPromptConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsPromptConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsPromptConfig' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONVariables$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONVariables,
    z.ZodTypeDef,
    unknown
  > = z.object({
    key: z.string(),
    value: z.any().optional(),
    is_pii: z.boolean().default(false),
  }).transform((v) => {
    return remap$(v, {
      "is_pii": "isPii",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONVariables$Outbound = {
  key: string;
  value?: any | undefined;
  is_pii: boolean;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONVariables$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONVariables$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONVariables
  > = z.object({
    key: z.string(),
    value: z.any().optional(),
    isPii: z.boolean().default(false),
  }).transform((v) => {
    return remap$(v, {
      isPii: "is_pii",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONVariables$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONVariables$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONVariables$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONVariables$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONVariables$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONVariables$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONVariables$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONVariablesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONVariables:
    PostV2LogsQueryEvalsResponse200ApplicationJSONVariables,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONVariables$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONVariables),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONVariablesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONVariables,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONVariables$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONVariables' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsPerformance$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsPerformance,
  z.ZodTypeDef,
  unknown
> = z.object({
  latency: z.number(),
  first_time_to_token: z.nullable(z.number()).optional(),
  tokens_per_second: z.nullable(z.number()).optional(),
}).transform((v) => {
  return remap$(v, {
    "first_time_to_token": "firstTimeToToken",
    "tokens_per_second": "tokensPerSecond",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsPerformance$Outbound = {
  latency: number;
  first_time_to_token?: number | null | undefined;
  tokens_per_second?: number | null | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsPerformance$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsPerformance$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsPerformance
> = z.object({
  latency: z.number(),
  firstTimeToToken: z.nullable(z.number()).optional(),
  tokensPerSecond: z.nullable(z.number()).optional(),
}).transform((v) => {
  return remap$(v, {
    firstTimeToToken: "first_time_to_token",
    tokensPerSecond: "tokens_per_second",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsPerformance$ {
  /** @deprecated use `PostV2LogsQueryEvalsPerformance$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsPerformance$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsPerformance$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsPerformance$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsPerformance$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsPerformance$Outbound;
}

export function postV2LogsQueryEvalsPerformanceToJSON(
  postV2LogsQueryEvalsPerformance: PostV2LogsQueryEvalsPerformance,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsPerformance$outboundSchema.parse(
      postV2LogsQueryEvalsPerformance,
    ),
  );
}

export function postV2LogsQueryEvalsPerformanceFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsPerformance, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsPerformance$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsPerformance' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails,
    z.ZodTypeDef,
    unknown
  > = z.object({
    cached_tokens: z.number().optional(),
  }).transform((v) => {
    return remap$(v, {
      "cached_tokens": "cachedTokens",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails$Outbound =
  {
    cached_tokens?: number | undefined;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails
  > = z.object({
    cachedTokens: z.number().optional(),
  }).transform((v) => {
    return remap$(v, {
      cachedTokens: "cached_tokens",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetailsToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails:
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetailsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails,
    z.ZodTypeDef,
    unknown
  > = z.object({
    reasoning_tokens: z.number().optional(),
  }).transform((v) => {
    return remap$(v, {
      "reasoning_tokens": "reasoningTokens",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails$Outbound =
  {
    reasoning_tokens?: number | undefined;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails
  > = z.object({
    reasoningTokens: z.number().optional(),
  }).transform((v) => {
    return remap$(v, {
      reasoningTokens: "reasoning_tokens",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetailsToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails:
    PostV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetailsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsUsage$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsUsage,
  z.ZodTypeDef,
  unknown
> = z.object({
  total_tokens: z.number().optional(),
  prompt_tokens: z.number().optional(),
  completion_tokens: z.number().optional(),
  prompt_tokens_details: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails$inboundSchema
  ).optional(),
  completion_tokens_details: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails$inboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "total_tokens": "totalTokens",
    "prompt_tokens": "promptTokens",
    "completion_tokens": "completionTokens",
    "prompt_tokens_details": "promptTokensDetails",
    "completion_tokens_details": "completionTokensDetails",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsUsage$Outbound = {
  total_tokens?: number | undefined;
  prompt_tokens?: number | undefined;
  completion_tokens?: number | undefined;
  prompt_tokens_details?:
    | PostV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails$Outbound
    | undefined;
  completion_tokens_details?:
    | PostV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails$Outbound
    | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsUsage$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsUsage$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsUsage
> = z.object({
  totalTokens: z.number().optional(),
  promptTokens: z.number().optional(),
  completionTokens: z.number().optional(),
  promptTokensDetails: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptTokensDetails$outboundSchema
  ).optional(),
  completionTokensDetails: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONCompletionTokensDetails$outboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    totalTokens: "total_tokens",
    promptTokens: "prompt_tokens",
    completionTokens: "completion_tokens",
    promptTokensDetails: "prompt_tokens_details",
    completionTokensDetails: "completion_tokens_details",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsUsage$ {
  /** @deprecated use `PostV2LogsQueryEvalsUsage$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsUsage$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsUsage$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsUsage$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsUsage$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsUsage$Outbound;
}

export function postV2LogsQueryEvalsUsageToJSON(
  postV2LogsQueryEvalsUsage: PostV2LogsQueryEvalsUsage,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsUsage$outboundSchema.parse(postV2LogsQueryEvalsUsage),
  );
}

export function postV2LogsQueryEvalsUsageFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsUsage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsUsage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsUsage' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONBilling$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONBilling,
    z.ZodTypeDef,
    unknown
  > = z.object({
    total_cost: z.nullable(z.number()).optional(),
    input_cost: z.nullable(z.number()).optional(),
    output_cost: z.nullable(z.number()).optional(),
    billable: z.boolean(),
  }).transform((v) => {
    return remap$(v, {
      "total_cost": "totalCost",
      "input_cost": "inputCost",
      "output_cost": "outputCost",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONBilling$Outbound = {
  total_cost?: number | null | undefined;
  input_cost?: number | null | undefined;
  output_cost?: number | null | undefined;
  billable: boolean;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONBilling$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONBilling$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONBilling
  > = z.object({
    totalCost: z.nullable(z.number()).optional(),
    inputCost: z.nullable(z.number()).optional(),
    outputCost: z.nullable(z.number()).optional(),
    billable: z.boolean(),
  }).transform((v) => {
    return remap$(v, {
      totalCost: "total_cost",
      inputCost: "input_cost",
      outputCost: "output_cost",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONBilling$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONBilling$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONBilling$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONBilling$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONBilling$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONBilling$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONBilling$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONBillingToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONBilling:
    PostV2LogsQueryEvalsResponse200ApplicationJSONBilling,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONBilling$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ApplicationJSONBilling,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONBillingFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONBilling,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONBilling$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONBilling' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunType
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunType,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunType
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataToolsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataToolsType
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataToolsType,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataToolsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataToolsType
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataToolsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataToolsType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataToolsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataToolsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataToolsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataToolsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsParameters$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsParameters,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataToolsType$inboundSchema,
  properties: z.record(z.any()),
  required: z.array(z.string()).optional(),
  additionalProperties: z.boolean().optional(),
});

/** @internal */
export type PostV2LogsQueryEvalsParameters$Outbound = {
  type: string;
  properties: { [k: string]: any };
  required?: Array<string> | undefined;
  additionalProperties?: boolean | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsParameters$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsParameters$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsParameters
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunDataToolsType$outboundSchema,
  properties: z.record(z.any()),
  required: z.array(z.string()).optional(),
  additionalProperties: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsParameters$ {
  /** @deprecated use `PostV2LogsQueryEvalsParameters$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsParameters$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsParameters$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsParameters$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsParameters$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsParameters$Outbound;
}

export function postV2LogsQueryEvalsParametersToJSON(
  postV2LogsQueryEvalsParameters: PostV2LogsQueryEvalsParameters,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsParameters$outboundSchema.parse(
      postV2LogsQueryEvalsParameters,
    ),
  );
}

export function postV2LogsQueryEvalsParametersFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsParameters, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsParameters$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsParameters' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsFunction$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsFunction,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  description: z.string().optional(),
  strict: z.boolean().optional(),
  parameters: z.lazy(() => PostV2LogsQueryEvalsParameters$inboundSchema),
});

/** @internal */
export type PostV2LogsQueryEvalsFunction$Outbound = {
  name: string;
  description?: string | undefined;
  strict?: boolean | undefined;
  parameters: PostV2LogsQueryEvalsParameters$Outbound;
};

/** @internal */
export const PostV2LogsQueryEvalsFunction$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsFunction$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsFunction
> = z.object({
  name: z.string(),
  description: z.string().optional(),
  strict: z.boolean().optional(),
  parameters: z.lazy(() => PostV2LogsQueryEvalsParameters$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsFunction$ {
  /** @deprecated use `PostV2LogsQueryEvalsFunction$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsFunction$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsFunction$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsFunction$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsFunction$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsFunction$Outbound;
}

export function postV2LogsQueryEvalsFunctionToJSON(
  postV2LogsQueryEvalsFunction: PostV2LogsQueryEvalsFunction,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsFunction$outboundSchema.parse(
      postV2LogsQueryEvalsFunction,
    ),
  );
}

export function postV2LogsQueryEvalsFunctionFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsFunction, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsFunction$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsFunction' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsTools$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsTools,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunType$inboundSchema,
  function: z.lazy(() => PostV2LogsQueryEvalsFunction$inboundSchema),
});

/** @internal */
export type PostV2LogsQueryEvalsTools$Outbound = {
  type: string;
  function: PostV2LogsQueryEvalsFunction$Outbound;
};

/** @internal */
export const PostV2LogsQueryEvalsTools$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsTools$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsTools
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27WorkflowRunType$outboundSchema,
  function: z.lazy(() => PostV2LogsQueryEvalsFunction$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsTools$ {
  /** @deprecated use `PostV2LogsQueryEvalsTools$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsTools$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsTools$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsTools$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsTools$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsTools$Outbound;
}

export function postV2LogsQueryEvalsToolsToJSON(
  postV2LogsQueryEvalsTools: PostV2LogsQueryEvalsTools,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsTools$outboundSchema.parse(postV2LogsQueryEvalsTools),
  );
}

export function postV2LogsQueryEvalsToolsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsTools, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsTools$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsTools' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets,
    z.ZodTypeDef,
    unknown
  > = z.object({
    _id: z.string(),
    key: z.string(),
    value: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "_id": "id",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets$Outbound =
  {
    _id: string;
    key: string;
    value: string;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets
  > = z.object({
    id: z.string(),
    key: z.string(),
    value: z.string(),
  }).transform((v) => {
    return remap$(v, {
      id: "_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippetsToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets:
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippetsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsData$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsData,
  z.ZodTypeDef,
  unknown
> = z.object({
  choices: z.array(z.lazy(() => PostV2LogsQueryEvalsChoices$inboundSchema))
    .optional(),
  action: PostV2LogsQueryEvalsAction$inboundSchema,
  prompt_config: z.lazy(() => PostV2LogsQueryEvalsPromptConfig$inboundSchema),
  variables: z.array(
    z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONVariables$inboundSchema
    ),
  ),
  performance: z.lazy(() => PostV2LogsQueryEvalsPerformance$inboundSchema)
    .optional(),
  usage: z.lazy(() => PostV2LogsQueryEvalsUsage$inboundSchema).optional(),
  billing: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONBilling$inboundSchema
  ).optional(),
  tools: z.array(z.lazy(() => PostV2LogsQueryEvalsTools$inboundSchema))
    .optional(),
  prompt_snippets: z.array(
    z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets$inboundSchema
    ),
  ),
}).transform((v) => {
  return remap$(v, {
    "prompt_config": "promptConfig",
    "prompt_snippets": "promptSnippets",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsData$Outbound = {
  choices?: Array<PostV2LogsQueryEvalsChoices$Outbound> | undefined;
  action: string;
  prompt_config: PostV2LogsQueryEvalsPromptConfig$Outbound;
  variables: Array<
    PostV2LogsQueryEvalsResponse200ApplicationJSONVariables$Outbound
  >;
  performance?: PostV2LogsQueryEvalsPerformance$Outbound | undefined;
  usage?: PostV2LogsQueryEvalsUsage$Outbound | undefined;
  billing?:
    | PostV2LogsQueryEvalsResponse200ApplicationJSONBilling$Outbound
    | undefined;
  tools?: Array<PostV2LogsQueryEvalsTools$Outbound> | undefined;
  prompt_snippets: Array<
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvalsData$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsData$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsData
> = z.object({
  choices: z.array(z.lazy(() => PostV2LogsQueryEvalsChoices$outboundSchema))
    .optional(),
  action: PostV2LogsQueryEvalsAction$outboundSchema,
  promptConfig: z.lazy(() => PostV2LogsQueryEvalsPromptConfig$outboundSchema),
  variables: z.array(
    z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONVariables$outboundSchema
    ),
  ),
  performance: z.lazy(() => PostV2LogsQueryEvalsPerformance$outboundSchema)
    .optional(),
  usage: z.lazy(() => PostV2LogsQueryEvalsUsage$outboundSchema).optional(),
  billing: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONBilling$outboundSchema
  ).optional(),
  tools: z.array(z.lazy(() => PostV2LogsQueryEvalsTools$outboundSchema))
    .optional(),
  promptSnippets: z.array(
    z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONPromptSnippets$outboundSchema
    ),
  ),
}).transform((v) => {
  return remap$(v, {
    promptConfig: "prompt_config",
    promptSnippets: "prompt_snippets",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsData$ {
  /** @deprecated use `PostV2LogsQueryEvalsData$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsData$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsData$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsData$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsData$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsData$Outbound;
}

export function postV2LogsQueryEvalsDataToJSON(
  postV2LogsQueryEvalsData: PostV2LogsQueryEvalsData,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsData$outboundSchema.parse(postV2LogsQueryEvalsData),
  );
}

export function postV2LogsQueryEvalsDataFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsData' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string(),
    workflow_metadata: z.record(z.any()).optional(),
    workflow_input: z.record(z.any()).optional(),
    workflow_output: z.record(z.any()).optional(),
    request_properties: z.lazy(() =>
      PostV2LogsQueryEvalsRequestProperties$inboundSchema
    ).optional(),
    started_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    finished_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    product_type: PostV2LogsQueryEvalsProductType$inboundSchema,
    related_entities: z.array(
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1$inboundSchema
      ),
    ),
    evals: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4$inboundSchema
        ),
      ]),
    ),
    data: z.lazy(() => PostV2LogsQueryEvalsData$inboundSchema),
  }).transform((v) => {
    return remap$(v, {
      "workflow_metadata": "workflowMetadata",
      "workflow_input": "workflowInput",
      "workflow_output": "workflowOutput",
      "request_properties": "requestProperties",
      "started_at": "startedAt",
      "finished_at": "finishedAt",
      "product_type": "productType",
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun$Outbound =
  {
    id: string;
    workflow_metadata?: { [k: string]: any } | undefined;
    workflow_input?: { [k: string]: any } | undefined;
    workflow_output?: { [k: string]: any } | undefined;
    request_properties?:
      | PostV2LogsQueryEvalsRequestProperties$Outbound
      | undefined;
    started_at: string;
    finished_at?: string | undefined;
    product_type: string;
    related_entities: Array<
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1$Outbound
    >;
    evals: Array<
      | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1$Outbound
      | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2$Outbound
      | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3$Outbound
      | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4$Outbound
    >;
    data: PostV2LogsQueryEvalsData$Outbound;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun
  > = z.object({
    id: z.string(),
    workflowMetadata: z.record(z.any()).optional(),
    workflowInput: z.record(z.any()).optional(),
    workflowOutput: z.record(z.any()).optional(),
    requestProperties: z.lazy(() =>
      PostV2LogsQueryEvalsRequestProperties$outboundSchema
    ).optional(),
    startedAt: z.date().transform(v => v.toISOString()),
    finishedAt: z.date().transform(v => v.toISOString()).optional(),
    productType: PostV2LogsQueryEvalsProductType$outboundSchema,
    relatedEntities: z.array(
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7WorkflowRun1$outboundSchema
      ),
    ),
    evals: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems3$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems4$outboundSchema
        ),
      ]),
    ),
    data: z.lazy(() => PostV2LogsQueryEvalsData$outboundSchema),
  }).transform((v) => {
    return remap$(v, {
      workflowMetadata: "workflow_metadata",
      workflowInput: "workflow_input",
      workflowOutput: "workflow_output",
      requestProperties: "request_properties",
      startedAt: "started_at",
      finishedAt: "finished_at",
      productType: "product_type",
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRunToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun:
    PostV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRunFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals7Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvals7$inboundSchema: z.ZodType<
  PostV2LogsQueryEvals7,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Type$inboundSchema,
  workflow_run: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun$inboundSchema
  ),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Status$inboundSchema,
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  related_entities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74$inboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    "workflow_run": "workflowRun",
    "related_entities": "relatedEntities",
  });
});

/** @internal */
export type PostV2LogsQueryEvals7$Outbound = {
  type: string;
  workflow_run:
    PostV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun$Outbound;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvals7$outboundSchema: z.ZodType<
  PostV2LogsQueryEvals7$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvals7
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Type$outboundSchema,
  workflowRun: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONWorkflowRun$outboundSchema
  ),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems27Status$outboundSchema,
  timestamp: z.date().transform(v => v.toISOString()),
  relatedEntities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals71$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals72$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals73$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals74$outboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    workflowRun: "workflow_run",
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvals7$ {
  /** @deprecated use `PostV2LogsQueryEvals7$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvals7$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvals7$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvals7$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvals7$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvals7$Outbound;
}

export function postV2LogsQueryEvals7ToJSON(
  postV2LogsQueryEvals7: PostV2LogsQueryEvals7,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvals7$outboundSchema.parse(postV2LogsQueryEvals7),
  );
}

export function postV2LogsQueryEvals7FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvals7, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvals7$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvals7' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200Value$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Value,
  z.ZodTypeDef,
  unknown
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/** @internal */
export type PostV2LogsQueryEvalsResponse200Value$Outbound = {
  f1: number;
  precision: number;
  recall: number;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200Value$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Value$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse200Value
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200Value$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Value$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200Value$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Value$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200Value$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Value$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse200Value$Outbound;
}

export function postV2LogsQueryEvalsResponse200ValueToJSON(
  postV2LogsQueryEvalsResponse200Value: PostV2LogsQueryEvalsResponse200Value,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200Value$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200Value,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ValueFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse200Value, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200Value$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200Value' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals6Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals6Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals6Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals6Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals6Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals6Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals6Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals6Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals6Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals6Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals6Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals6Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals6Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvals6$inboundSchema: z.ZodType<
  PostV2LogsQueryEvals6,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Type$inboundSchema,
  value: z.lazy(() => PostV2LogsQueryEvalsResponse200Value$inboundSchema),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Status$inboundSchema,
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  related_entities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64$inboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    "related_entities": "relatedEntities",
  });
});

/** @internal */
export type PostV2LogsQueryEvals6$Outbound = {
  type: string;
  value: PostV2LogsQueryEvalsResponse200Value$Outbound;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvals6$outboundSchema: z.ZodType<
  PostV2LogsQueryEvals6$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvals6
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Type$outboundSchema,
  value: z.lazy(() => PostV2LogsQueryEvalsResponse200Value$outboundSchema),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems26Status$outboundSchema,
  timestamp: z.date().transform(v => v.toISOString()),
  relatedEntities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals61$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals62$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals63$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals64$outboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvals6$ {
  /** @deprecated use `PostV2LogsQueryEvals6$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvals6$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvals6$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvals6$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvals6$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvals6$Outbound;
}

export function postV2LogsQueryEvals6ToJSON(
  postV2LogsQueryEvals6: PostV2LogsQueryEvals6,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvals6$outboundSchema.parse(postV2LogsQueryEvals6),
  );
}

export function postV2LogsQueryEvals6FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvals6, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvals6$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvals6' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONRouge1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONRouge1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    f1: z.number(),
    precision: z.number(),
    recall: z.number(),
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONRouge1$Outbound = {
  f1: number;
  precision: number;
  recall: number;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONRouge1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONRouge1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONRouge1
  > = z.object({
    f1: z.number(),
    precision: z.number(),
    recall: z.number(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONRouge1$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONRouge1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONRouge1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONRouge1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONRouge1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONRouge1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONRouge1$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONRouge1ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONRouge1:
    PostV2LogsQueryEvalsResponse200ApplicationJSONRouge1,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONRouge1$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ApplicationJSONRouge1,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONRouge1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONRouge1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONRouge1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONRouge1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONRouge2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONRouge2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    f1: z.number(),
    precision: z.number(),
    recall: z.number(),
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONRouge2$Outbound = {
  f1: number;
  precision: number;
  recall: number;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONRouge2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONRouge2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONRouge2
  > = z.object({
    f1: z.number(),
    precision: z.number(),
    recall: z.number(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONRouge2$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONRouge2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONRouge2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONRouge2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONRouge2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONRouge2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONRouge2$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONRouge2ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONRouge2:
    PostV2LogsQueryEvalsResponse200ApplicationJSONRouge2,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONRouge2$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ApplicationJSONRouge2,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONRouge2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONRouge2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONRouge2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONRouge2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONRougeL$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONRougeL,
    z.ZodTypeDef,
    unknown
  > = z.object({
    f1: z.number(),
    precision: z.number(),
    recall: z.number(),
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONRougeL$Outbound = {
  f1: number;
  precision: number;
  recall: number;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONRougeL$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONRougeL$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONRougeL
  > = z.object({
    f1: z.number(),
    precision: z.number(),
    recall: z.number(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONRougeL$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONRougeL$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONRougeL$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONRougeL$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONRougeL$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONRougeL$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONRougeL$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONRougeLToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONRougeL:
    PostV2LogsQueryEvalsResponse200ApplicationJSONRougeL,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONRougeL$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ApplicationJSONRougeL,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONRougeLFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONRougeL,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONRougeL$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONRougeL' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseValue$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseValue,
  z.ZodTypeDef,
  unknown
> = z.object({
  rouge_1: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONRouge1$inboundSchema
  ),
  rouge_2: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONRouge2$inboundSchema
  ),
  rouge_l: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONRougeL$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "rouge_1": "rouge1",
    "rouge_2": "rouge2",
    "rouge_l": "rougeL",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsResponseValue$Outbound = {
  rouge_1: PostV2LogsQueryEvalsResponse200ApplicationJSONRouge1$Outbound;
  rouge_2: PostV2LogsQueryEvalsResponse200ApplicationJSONRouge2$Outbound;
  rouge_l: PostV2LogsQueryEvalsResponse200ApplicationJSONRougeL$Outbound;
};

/** @internal */
export const PostV2LogsQueryEvalsResponseValue$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponseValue$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponseValue
> = z.object({
  rouge1: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONRouge1$outboundSchema
  ),
  rouge2: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONRouge2$outboundSchema
  ),
  rougeL: z.lazy(() =>
    PostV2LogsQueryEvalsResponse200ApplicationJSONRougeL$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    rouge1: "rouge_1",
    rouge2: "rouge_2",
    rougeL: "rouge_l",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseValue$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseValue$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponseValue$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseValue$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseValue$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseValue$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponseValue$Outbound;
}

export function postV2LogsQueryEvalsResponseValueToJSON(
  postV2LogsQueryEvalsResponseValue: PostV2LogsQueryEvalsResponseValue,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseValue$outboundSchema.parse(
      postV2LogsQueryEvalsResponseValue,
    ),
  );
}

export function postV2LogsQueryEvalsResponseValueFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponseValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsResponseValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponseValue' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals5Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals5Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals5Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals5Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals5Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals5Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals5Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals5Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals5Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals5Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals5Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals5Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals5Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvals5$inboundSchema: z.ZodType<
  PostV2LogsQueryEvals5,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Type$inboundSchema,
  value: z.lazy(() => PostV2LogsQueryEvalsResponseValue$inboundSchema),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Status$inboundSchema,
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  related_entities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54$inboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    "related_entities": "relatedEntities",
  });
});

/** @internal */
export type PostV2LogsQueryEvals5$Outbound = {
  type: string;
  value: PostV2LogsQueryEvalsResponseValue$Outbound;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvals5$outboundSchema: z.ZodType<
  PostV2LogsQueryEvals5$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvals5
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Type$outboundSchema,
  value: z.lazy(() => PostV2LogsQueryEvalsResponseValue$outboundSchema),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems25Status$outboundSchema,
  timestamp: z.date().transform(v => v.toISOString()),
  relatedEntities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals51$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals52$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals53$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals54$outboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvals5$ {
  /** @deprecated use `PostV2LogsQueryEvals5$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvals5$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvals5$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvals5$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvals5$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvals5$Outbound;
}

export function postV2LogsQueryEvals5ToJSON(
  postV2LogsQueryEvals5: PostV2LogsQueryEvals5,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvals5$outboundSchema.parse(postV2LogsQueryEvals5),
  );
}

export function postV2LogsQueryEvals5FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvals5, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvals5$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvals5' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvals4$inboundSchema: z.ZodType<
  PostV2LogsQueryEvals4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Type$inboundSchema,
  values: z.array(z.string()),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Status$inboundSchema,
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  related_entities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44$inboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    "related_entities": "relatedEntities",
  });
});

/** @internal */
export type PostV2LogsQueryEvals4$Outbound = {
  type: string;
  values: Array<string>;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvals4$outboundSchema: z.ZodType<
  PostV2LogsQueryEvals4$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvals4
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Type$outboundSchema,
  values: z.array(z.string()),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems24Status$outboundSchema,
  timestamp: z.date().transform(v => v.toISOString()),
  relatedEntities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals41$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals42$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals43$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals44$outboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvals4$ {
  /** @deprecated use `PostV2LogsQueryEvals4$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvals4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvals4$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvals4$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvals4$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvals4$Outbound;
}

export function postV2LogsQueryEvals4ToJSON(
  postV2LogsQueryEvals4: PostV2LogsQueryEvals4,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvals4$outboundSchema.parse(postV2LogsQueryEvals4),
  );
}

export function postV2LogsQueryEvals4FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvals4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvals4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvals4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvals3$inboundSchema: z.ZodType<
  PostV2LogsQueryEvals3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Type$inboundSchema,
  value: z.boolean(),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Status$inboundSchema,
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  related_entities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34$inboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    "related_entities": "relatedEntities",
  });
});

/** @internal */
export type PostV2LogsQueryEvals3$Outbound = {
  type: string;
  value: boolean;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvals3$outboundSchema: z.ZodType<
  PostV2LogsQueryEvals3$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvals3
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Type$outboundSchema,
  value: z.boolean(),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems23Status$outboundSchema,
  timestamp: z.date().transform(v => v.toISOString()),
  relatedEntities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals31$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals32$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals33$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals34$outboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvals3$ {
  /** @deprecated use `PostV2LogsQueryEvals3$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvals3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvals3$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvals3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvals3$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvals3$Outbound;
}

export function postV2LogsQueryEvals3ToJSON(
  postV2LogsQueryEvals3: PostV2LogsQueryEvals3,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvals3$outboundSchema.parse(postV2LogsQueryEvals3),
  );
}

export function postV2LogsQueryEvals3FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvals3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvals3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvals3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals24Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals24Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals24Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals24Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals24Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals24Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals24Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals24Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals24Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals24Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals24Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals24Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals24Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals23Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals23Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals23Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals23Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals23Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals23Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals23Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals23Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals23Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals23Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals23Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals23Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals23Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals22Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals22Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals22Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals22Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals22Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals22Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals22Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals22Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals22Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals22Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals22Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals22Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals22Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvals2$inboundSchema: z.ZodType<
  PostV2LogsQueryEvals2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22Type$inboundSchema,
  value: z.number(),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Status$inboundSchema,
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  related_entities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4$inboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    "related_entities": "relatedEntities",
  });
});

/** @internal */
export type PostV2LogsQueryEvals2$Outbound = {
  type: string;
  value: number;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvals2$outboundSchema: z.ZodType<
  PostV2LogsQueryEvals2$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvals2
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems22Type$outboundSchema,
  value: z.number(),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Status$outboundSchema,
  timestamp: z.date().transform(v => v.toISOString()),
  relatedEntities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals2$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals3$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals4$outboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvals2$ {
  /** @deprecated use `PostV2LogsQueryEvals2$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvals2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvals2$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvals2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvals2$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvals2$Outbound;
}

export function postV2LogsQueryEvals2ToJSON(
  postV2LogsQueryEvals2: PostV2LogsQueryEvals2,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvals2$outboundSchema.parse(postV2LogsQueryEvals2),
  );
}

export function postV2LogsQueryEvals2FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvals2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvals2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvals2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsStatus
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsStatus,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsStatus
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsStatus$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsStatus$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsStatus$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals14Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals14Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals14Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals14Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals14Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals14Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals14Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals14Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals14Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals14Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals14Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals14Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals14Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals1Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2EvalsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2EvalsType
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2EvalsType,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2EvalsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2EvalsType
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2EvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2EvalsType$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2EvalsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2EvalsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2EvalsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2EvalsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2EvalsType$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2EvalsType$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals11Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals11Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals11Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals11Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals11Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals11Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals11Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals11Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals11Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals11Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals11Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals11Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Evals11Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvals1$inboundSchema: z.ZodType<
  PostV2LogsQueryEvals1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Type$inboundSchema,
  value: z.string(),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsStatus$inboundSchema,
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  related_entities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24$inboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    "related_entities": "relatedEntities",
  });
});

/** @internal */
export type PostV2LogsQueryEvals1$Outbound = {
  type: string;
  value: string;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvals1$outboundSchema: z.ZodType<
  PostV2LogsQueryEvals1$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvals1
> = z.object({
  type:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems2Type$outboundSchema,
  value: z.string(),
  id: z.string(),
  status:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsStatus$outboundSchema,
  timestamp: z.date().transform(v => v.toISOString()),
  relatedEntities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems21$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems22$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems23$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems24$outboundSchema
      ),
    ]),
  ),
}).transform((v) => {
  return remap$(v, {
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvals1$ {
  /** @deprecated use `PostV2LogsQueryEvals1$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvals1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvals1$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvals1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvals1$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvals1$Outbound;
}

export function postV2LogsQueryEvals1ToJSON(
  postV2LogsQueryEvals1: PostV2LogsQueryEvals1,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvals1$outboundSchema.parse(postV2LogsQueryEvals1),
  );
}

export function postV2LogsQueryEvals1FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvals1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvals1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvals1' from JSON`,
  );
}

/** @internal */
export const ItemsEvals$inboundSchema: z.ZodType<
  ItemsEvals,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQueryEvals1$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvals2$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvals3$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvals4$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvals5$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvals6$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvals7$inboundSchema),
]);

/** @internal */
export type ItemsEvals$Outbound =
  | PostV2LogsQueryEvals1$Outbound
  | PostV2LogsQueryEvals2$Outbound
  | PostV2LogsQueryEvals3$Outbound
  | PostV2LogsQueryEvals4$Outbound
  | PostV2LogsQueryEvals5$Outbound
  | PostV2LogsQueryEvals6$Outbound
  | PostV2LogsQueryEvals7$Outbound;

/** @internal */
export const ItemsEvals$outboundSchema: z.ZodType<
  ItemsEvals$Outbound,
  z.ZodTypeDef,
  ItemsEvals
> = z.union([
  z.lazy(() => PostV2LogsQueryEvals1$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvals2$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvals3$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvals4$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvals5$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvals6$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvals7$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsEvals$ {
  /** @deprecated use `ItemsEvals$inboundSchema` instead. */
  export const inboundSchema = ItemsEvals$inboundSchema;
  /** @deprecated use `ItemsEvals$outboundSchema` instead. */
  export const outboundSchema = ItemsEvals$outboundSchema;
  /** @deprecated use `ItemsEvals$Outbound` instead. */
  export type Outbound = ItemsEvals$Outbound;
}

export function itemsEvalsToJSON(itemsEvals: ItemsEvals): string {
  return JSON.stringify(ItemsEvals$outboundSchema.parse(itemsEvals));
}

export function itemsEvalsFromJSON(
  jsonString: string,
): SafeParseResult<ItemsEvals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsEvals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsEvals' from JSON`,
  );
}

/** @internal */
export const ItemsProductType$inboundSchema: z.ZodNativeEnum<
  typeof ItemsProductType
> = z.nativeEnum(ItemsProductType);

/** @internal */
export const ItemsProductType$outboundSchema: z.ZodNativeEnum<
  typeof ItemsProductType
> = ItemsProductType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsProductType$ {
  /** @deprecated use `ItemsProductType$inboundSchema` instead. */
  export const inboundSchema = ItemsProductType$inboundSchema;
  /** @deprecated use `ItemsProductType$outboundSchema` instead. */
  export const outboundSchema = ItemsProductType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems27Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems27Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems27Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems27Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems27Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems27Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems27Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems27Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems27Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems27Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems27Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntities7$inboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntities7,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems27Type$inboundSchema,
  conversation_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "conversation_id": "conversationId",
  });
});

/** @internal */
export type PostV2LogsQueryRelatedEntities7$Outbound = {
  type: string;
  conversation_id: string;
};

/** @internal */
export const PostV2LogsQueryRelatedEntities7$outboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntities7$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryRelatedEntities7
> = z.object({
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems27Type$outboundSchema,
  conversationId: z.string(),
}).transform((v) => {
  return remap$(v, {
    conversationId: "conversation_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntities7$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntities7$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryRelatedEntities7$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntities7$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryRelatedEntities7$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntities7$Outbound` instead. */
  export type Outbound = PostV2LogsQueryRelatedEntities7$Outbound;
}

export function postV2LogsQueryRelatedEntities7ToJSON(
  postV2LogsQueryRelatedEntities7: PostV2LogsQueryRelatedEntities7,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntities7$outboundSchema.parse(
      postV2LogsQueryRelatedEntities7,
    ),
  );
}

export function postV2LogsQueryRelatedEntities7FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryRelatedEntities7, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryRelatedEntities7$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntities7' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems26Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems26Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems26Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems26Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems26Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems26Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems26Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems26Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems26Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems26Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems26Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntities6$inboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntities6,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems26Type$inboundSchema,
  chain_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "chain_id": "chainId",
  });
});

/** @internal */
export type PostV2LogsQueryRelatedEntities6$Outbound = {
  type: string;
  chain_id: string;
};

/** @internal */
export const PostV2LogsQueryRelatedEntities6$outboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntities6$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryRelatedEntities6
> = z.object({
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems26Type$outboundSchema,
  chainId: z.string(),
}).transform((v) => {
  return remap$(v, {
    chainId: "chain_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntities6$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntities6$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryRelatedEntities6$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntities6$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryRelatedEntities6$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntities6$Outbound` instead. */
  export type Outbound = PostV2LogsQueryRelatedEntities6$Outbound;
}

export function postV2LogsQueryRelatedEntities6ToJSON(
  postV2LogsQueryRelatedEntities6: PostV2LogsQueryRelatedEntities6,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntities6$outboundSchema.parse(
      postV2LogsQueryRelatedEntities6,
    ),
  );
}

export function postV2LogsQueryRelatedEntities6FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryRelatedEntities6, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryRelatedEntities6$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntities6' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse5$inboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntitiesResponse5,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Type$inboundSchema,
  contact_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "contact_id": "contactId",
  });
});

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse5$Outbound = {
  type: string;
  contact_id: string;
};

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse5$outboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntitiesResponse5$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryRelatedEntitiesResponse5
> = z.object({
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2Type$outboundSchema,
  contactId: z.string(),
}).transform((v) => {
  return remap$(v, {
    contactId: "contact_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse5$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse5$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse5$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse5$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse5$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse5$Outbound` instead. */
  export type Outbound = PostV2LogsQueryRelatedEntitiesResponse5$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse5ToJSON(
  postV2LogsQueryRelatedEntitiesResponse5:
    PostV2LogsQueryRelatedEntitiesResponse5,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse5$outboundSchema.parse(
      postV2LogsQueryRelatedEntitiesResponse5,
    ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse5FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse5,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse5$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse5' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItemsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItemsType
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItemsType,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItemsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItemsType
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItemsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItemsType$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItemsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItemsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItemsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItemsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse2004$inboundSchema:
  z.ZodType<PostV2LogsQueryRelatedEntitiesResponse2004, z.ZodTypeDef, unknown> =
    z.object({
      type:
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItemsType$inboundSchema,
      deployment_completion_id: z.string(),
    }).transform((v) => {
      return remap$(v, {
        "deployment_completion_id": "deploymentCompletionId",
      });
    });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse2004$Outbound = {
  type: string;
  deployment_completion_id: string;
};

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse2004$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse2004$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse2004
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItemsType$outboundSchema,
    deploymentCompletionId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      deploymentCompletionId: "deployment_completion_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse2004$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse2004$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse2004$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse2004$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse2004$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse2004$Outbound` instead. */
  export type Outbound = PostV2LogsQueryRelatedEntitiesResponse2004$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse2004ToJSON(
  postV2LogsQueryRelatedEntitiesResponse2004:
    PostV2LogsQueryRelatedEntitiesResponse2004,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse2004$outboundSchema.parse(
      postV2LogsQueryRelatedEntitiesResponse2004,
    ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse2004FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse2004,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse2004$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse2004' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyType
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntities3$inboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntities3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyType$inboundSchema,
  deployment_variant_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "deployment_variant_id": "deploymentVariantId",
  });
});

/** @internal */
export type PostV2LogsQueryRelatedEntities3$Outbound = {
  type: string;
  deployment_variant_id: string;
};

/** @internal */
export const PostV2LogsQueryRelatedEntities3$outboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntities3$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryRelatedEntities3
> = z.object({
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyType$outboundSchema,
  deploymentVariantId: z.string(),
}).transform((v) => {
  return remap$(v, {
    deploymentVariantId: "deployment_variant_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntities3$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntities3$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryRelatedEntities3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntities3$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryRelatedEntities3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntities3$Outbound` instead. */
  export type Outbound = PostV2LogsQueryRelatedEntities3$Outbound;
}

export function postV2LogsQueryRelatedEntities3ToJSON(
  postV2LogsQueryRelatedEntities3: PostV2LogsQueryRelatedEntities3,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntities3$outboundSchema.parse(
      postV2LogsQueryRelatedEntities3,
    ),
  );
}

export function postV2LogsQueryRelatedEntities3FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryRelatedEntities3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryRelatedEntities3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntities3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONType
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONType,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONType
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONType$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntities2$inboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntities2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONType$inboundSchema,
  deployment_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "deployment_id": "deploymentId",
  });
});

/** @internal */
export type PostV2LogsQueryRelatedEntities2$Outbound = {
  type: string;
  deployment_id: string;
};

/** @internal */
export const PostV2LogsQueryRelatedEntities2$outboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntities2$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryRelatedEntities2
> = z.object({
  type:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONType$outboundSchema,
  deploymentId: z.string(),
}).transform((v) => {
  return remap$(v, {
    deploymentId: "deployment_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntities2$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntities2$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryRelatedEntities2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntities2$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryRelatedEntities2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntities2$Outbound` instead. */
  export type Outbound = PostV2LogsQueryRelatedEntities2$Outbound;
}

export function postV2LogsQueryRelatedEntities2ToJSON(
  postV2LogsQueryRelatedEntities2: PostV2LogsQueryRelatedEntities2,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntities2$outboundSchema.parse(
      postV2LogsQueryRelatedEntities2,
    ),
  );
}

export function postV2LogsQueryRelatedEntities2FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryRelatedEntities2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryRelatedEntities2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntities2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200Type$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryRelatedEntitiesResponse200Type> = z
    .nativeEnum(PostV2LogsQueryRelatedEntitiesResponse200Type);

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryRelatedEntitiesResponse200Type> =
    PostV2LogsQueryRelatedEntitiesResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntities1$inboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntities1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PostV2LogsQueryRelatedEntitiesResponse200Type$inboundSchema,
  deployment_key: z.string(),
}).transform((v) => {
  return remap$(v, {
    "deployment_key": "deploymentKey",
  });
});

/** @internal */
export type PostV2LogsQueryRelatedEntities1$Outbound = {
  type: string;
  deployment_key: string;
};

/** @internal */
export const PostV2LogsQueryRelatedEntities1$outboundSchema: z.ZodType<
  PostV2LogsQueryRelatedEntities1$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryRelatedEntities1
> = z.object({
  type: PostV2LogsQueryRelatedEntitiesResponse200Type$outboundSchema,
  deploymentKey: z.string(),
}).transform((v) => {
  return remap$(v, {
    deploymentKey: "deployment_key",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntities1$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntities1$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryRelatedEntities1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntities1$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryRelatedEntities1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntities1$Outbound` instead. */
  export type Outbound = PostV2LogsQueryRelatedEntities1$Outbound;
}

export function postV2LogsQueryRelatedEntities1ToJSON(
  postV2LogsQueryRelatedEntities1: PostV2LogsQueryRelatedEntities1,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntities1$outboundSchema.parse(
      postV2LogsQueryRelatedEntities1,
    ),
  );
}

export function postV2LogsQueryRelatedEntities1FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryRelatedEntities1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryRelatedEntities1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntities1' from JSON`,
  );
}

/** @internal */
export const ItemsRelatedEntities$inboundSchema: z.ZodType<
  ItemsRelatedEntities,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQueryRelatedEntities1$inboundSchema),
  z.lazy(() => PostV2LogsQueryRelatedEntities2$inboundSchema),
  z.lazy(() => PostV2LogsQueryRelatedEntities3$inboundSchema),
  z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse2004$inboundSchema),
  z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse5$inboundSchema),
  z.lazy(() => PostV2LogsQueryRelatedEntities6$inboundSchema),
  z.lazy(() => PostV2LogsQueryRelatedEntities7$inboundSchema),
]);

/** @internal */
export type ItemsRelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntities1$Outbound
  | PostV2LogsQueryRelatedEntities2$Outbound
  | PostV2LogsQueryRelatedEntities3$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse2004$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse5$Outbound
  | PostV2LogsQueryRelatedEntities6$Outbound
  | PostV2LogsQueryRelatedEntities7$Outbound;

/** @internal */
export const ItemsRelatedEntities$outboundSchema: z.ZodType<
  ItemsRelatedEntities$Outbound,
  z.ZodTypeDef,
  ItemsRelatedEntities
> = z.union([
  z.lazy(() => PostV2LogsQueryRelatedEntities1$outboundSchema),
  z.lazy(() => PostV2LogsQueryRelatedEntities2$outboundSchema),
  z.lazy(() => PostV2LogsQueryRelatedEntities3$outboundSchema),
  z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse2004$outboundSchema),
  z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse5$outboundSchema),
  z.lazy(() => PostV2LogsQueryRelatedEntities6$outboundSchema),
  z.lazy(() => PostV2LogsQueryRelatedEntities7$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsRelatedEntities$ {
  /** @deprecated use `ItemsRelatedEntities$inboundSchema` instead. */
  export const inboundSchema = ItemsRelatedEntities$inboundSchema;
  /** @deprecated use `ItemsRelatedEntities$outboundSchema` instead. */
  export const outboundSchema = ItemsRelatedEntities$outboundSchema;
  /** @deprecated use `ItemsRelatedEntities$Outbound` instead. */
  export type Outbound = ItemsRelatedEntities$Outbound;
}

export function itemsRelatedEntitiesToJSON(
  itemsRelatedEntities: ItemsRelatedEntities,
): string {
  return JSON.stringify(
    ItemsRelatedEntities$outboundSchema.parse(itemsRelatedEntities),
  );
}

export function itemsRelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<ItemsRelatedEntities, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsRelatedEntities$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsRelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200Role$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryMessageResponse200Role> = z.nativeEnum(
    PostV2LogsQueryMessageResponse200Role,
  );

/** @internal */
export const PostV2LogsQueryMessageResponse200Role$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryMessageResponse200Role> =
    PostV2LogsQueryMessageResponse200Role$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200Role$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200Role$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200Role$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200Role$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200Role$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessage3$inboundSchema: z.ZodType<
  PostV2LogsQueryMessage3,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: PostV2LogsQueryMessageResponse200Role$inboundSchema,
  url: z.string(),
});

/** @internal */
export type PostV2LogsQueryMessage3$Outbound = {
  role: string;
  url: string;
};

/** @internal */
export const PostV2LogsQueryMessage3$outboundSchema: z.ZodType<
  PostV2LogsQueryMessage3$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryMessage3
> = z.object({
  role: PostV2LogsQueryMessageResponse200Role$outboundSchema,
  url: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessage3$ {
  /** @deprecated use `PostV2LogsQueryMessage3$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryMessage3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessage3$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryMessage3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessage3$Outbound` instead. */
  export type Outbound = PostV2LogsQueryMessage3$Outbound;
}

export function postV2LogsQueryMessage3ToJSON(
  postV2LogsQueryMessage3: PostV2LogsQueryMessage3,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessage3$outboundSchema.parse(postV2LogsQueryMessage3),
  );
}

export function postV2LogsQueryMessage3FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryMessage3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryMessage3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessage3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponseRole$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryMessageResponseRole
> = z.nativeEnum(PostV2LogsQueryMessageResponseRole);

/** @internal */
export const PostV2LogsQueryMessageResponseRole$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryMessageResponseRole
> = PostV2LogsQueryMessageResponseRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponseRole$ {
  /** @deprecated use `PostV2LogsQueryMessageResponseRole$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryMessageResponseRole$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponseRole$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponseRole$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessage2$inboundSchema: z.ZodType<
  PostV2LogsQueryMessage2,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: PostV2LogsQueryMessageResponseRole$inboundSchema,
  content: z.nullable(z.string()),
});

/** @internal */
export type PostV2LogsQueryMessage2$Outbound = {
  role: string;
  content: string | null;
};

/** @internal */
export const PostV2LogsQueryMessage2$outboundSchema: z.ZodType<
  PostV2LogsQueryMessage2$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryMessage2
> = z.object({
  role: PostV2LogsQueryMessageResponseRole$outboundSchema,
  content: z.nullable(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessage2$ {
  /** @deprecated use `PostV2LogsQueryMessage2$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryMessage2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessage2$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryMessage2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessage2$Outbound` instead. */
  export type Outbound = PostV2LogsQueryMessage2$Outbound;
}

export function postV2LogsQueryMessage2ToJSON(
  postV2LogsQueryMessage2: PostV2LogsQueryMessage2,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessage2$outboundSchema.parse(postV2LogsQueryMessage2),
  );
}

export function postV2LogsQueryMessage2FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryMessage2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryMessage2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessage2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageRole$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryMessageRole
> = z.nativeEnum(PostV2LogsQueryMessageRole);

/** @internal */
export const PostV2LogsQueryMessageRole$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryMessageRole
> = PostV2LogsQueryMessageRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageRole$ {
  /** @deprecated use `PostV2LogsQueryMessageRole$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryMessageRole$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageRole$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryMessageRole$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryMessageType
> = z.nativeEnum(PostV2LogsQueryMessageType);

/** @internal */
export const PostV2LogsQueryMessageType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryMessageType
> = PostV2LogsQueryMessageType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageType$ {
  /** @deprecated use `PostV2LogsQueryMessageType$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryMessageType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageType$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryMessageType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageFunction$inboundSchema: z.ZodType<
  PostV2LogsQueryMessageFunction,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/** @internal */
export type PostV2LogsQueryMessageFunction$Outbound = {
  name: string;
  arguments: string;
};

/** @internal */
export const PostV2LogsQueryMessageFunction$outboundSchema: z.ZodType<
  PostV2LogsQueryMessageFunction$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryMessageFunction
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageFunction$ {
  /** @deprecated use `PostV2LogsQueryMessageFunction$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryMessageFunction$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageFunction$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryMessageFunction$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageFunction$Outbound` instead. */
  export type Outbound = PostV2LogsQueryMessageFunction$Outbound;
}

export function postV2LogsQueryMessageFunctionToJSON(
  postV2LogsQueryMessageFunction: PostV2LogsQueryMessageFunction,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageFunction$outboundSchema.parse(
      postV2LogsQueryMessageFunction,
    ),
  );
}

export function postV2LogsQueryMessageFunctionFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryMessageFunction, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryMessageFunction$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageFunction' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageToolCalls$inboundSchema: z.ZodType<
  PostV2LogsQueryMessageToolCalls,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type: PostV2LogsQueryMessageType$inboundSchema,
  function: z.lazy(() => PostV2LogsQueryMessageFunction$inboundSchema),
});

/** @internal */
export type PostV2LogsQueryMessageToolCalls$Outbound = {
  id?: string | undefined;
  index?: number | undefined;
  type: string;
  function: PostV2LogsQueryMessageFunction$Outbound;
};

/** @internal */
export const PostV2LogsQueryMessageToolCalls$outboundSchema: z.ZodType<
  PostV2LogsQueryMessageToolCalls$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryMessageToolCalls
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type: PostV2LogsQueryMessageType$outboundSchema,
  function: z.lazy(() => PostV2LogsQueryMessageFunction$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageToolCalls$ {
  /** @deprecated use `PostV2LogsQueryMessageToolCalls$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryMessageToolCalls$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageToolCalls$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryMessageToolCalls$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageToolCalls$Outbound` instead. */
  export type Outbound = PostV2LogsQueryMessageToolCalls$Outbound;
}

export function postV2LogsQueryMessageToolCallsToJSON(
  postV2LogsQueryMessageToolCalls: PostV2LogsQueryMessageToolCalls,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageToolCalls$outboundSchema.parse(
      postV2LogsQueryMessageToolCalls,
    ),
  );
}

export function postV2LogsQueryMessageToolCallsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryMessageToolCalls, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryMessageToolCalls$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageToolCalls' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessage1$inboundSchema: z.ZodType<
  PostV2LogsQueryMessage1,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: PostV2LogsQueryMessageRole$inboundSchema,
  content: z.nullable(z.string()).optional(),
  tool_calls: z.array(
    z.lazy(() => PostV2LogsQueryMessageToolCalls$inboundSchema),
  ),
}).transform((v) => {
  return remap$(v, {
    "tool_calls": "toolCalls",
  });
});

/** @internal */
export type PostV2LogsQueryMessage1$Outbound = {
  role: string;
  content?: string | null | undefined;
  tool_calls: Array<PostV2LogsQueryMessageToolCalls$Outbound>;
};

/** @internal */
export const PostV2LogsQueryMessage1$outboundSchema: z.ZodType<
  PostV2LogsQueryMessage1$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryMessage1
> = z.object({
  role: PostV2LogsQueryMessageRole$outboundSchema,
  content: z.nullable(z.string()).optional(),
  toolCalls: z.array(
    z.lazy(() => PostV2LogsQueryMessageToolCalls$outboundSchema),
  ),
}).transform((v) => {
  return remap$(v, {
    toolCalls: "tool_calls",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessage1$ {
  /** @deprecated use `PostV2LogsQueryMessage1$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryMessage1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessage1$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryMessage1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessage1$Outbound` instead. */
  export type Outbound = PostV2LogsQueryMessage1$Outbound;
}

export function postV2LogsQueryMessage1ToJSON(
  postV2LogsQueryMessage1: PostV2LogsQueryMessage1,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessage1$outboundSchema.parse(postV2LogsQueryMessage1),
  );
}

export function postV2LogsQueryMessage1FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryMessage1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryMessage1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessage1' from JSON`,
  );
}

/** @internal */
export const ItemsMessage$inboundSchema: z.ZodType<
  ItemsMessage,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQueryMessage2$inboundSchema),
  z.lazy(() => PostV2LogsQueryMessage3$inboundSchema),
  z.lazy(() => PostV2LogsQueryMessage1$inboundSchema),
]);

/** @internal */
export type ItemsMessage$Outbound =
  | PostV2LogsQueryMessage2$Outbound
  | PostV2LogsQueryMessage3$Outbound
  | PostV2LogsQueryMessage1$Outbound;

/** @internal */
export const ItemsMessage$outboundSchema: z.ZodType<
  ItemsMessage$Outbound,
  z.ZodTypeDef,
  ItemsMessage
> = z.union([
  z.lazy(() => PostV2LogsQueryMessage2$outboundSchema),
  z.lazy(() => PostV2LogsQueryMessage3$outboundSchema),
  z.lazy(() => PostV2LogsQueryMessage1$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsMessage$ {
  /** @deprecated use `ItemsMessage$inboundSchema` instead. */
  export const inboundSchema = ItemsMessage$inboundSchema;
  /** @deprecated use `ItemsMessage$outboundSchema` instead. */
  export const outboundSchema = ItemsMessage$outboundSchema;
  /** @deprecated use `ItemsMessage$Outbound` instead. */
  export type Outbound = ItemsMessage$Outbound;
}

export function itemsMessageToJSON(itemsMessage: ItemsMessage): string {
  return JSON.stringify(ItemsMessage$outboundSchema.parse(itemsMessage));
}

export function itemsMessageFromJSON(
  jsonString: string,
): SafeParseResult<ItemsMessage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsMessage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsMessage' from JSON`,
  );
}

/** @internal */
export const ItemsChoices$inboundSchema: z.ZodType<
  ItemsChoices,
  z.ZodTypeDef,
  unknown
> = z.object({
  index: z.number(),
  message: z.union([
    z.lazy(() => PostV2LogsQueryMessage2$inboundSchema),
    z.lazy(() => PostV2LogsQueryMessage3$inboundSchema),
    z.lazy(() => PostV2LogsQueryMessage1$inboundSchema),
  ]).optional(),
  finish_reason: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "finish_reason": "finishReason",
  });
});

/** @internal */
export type ItemsChoices$Outbound = {
  index: number;
  message?:
    | PostV2LogsQueryMessage2$Outbound
    | PostV2LogsQueryMessage3$Outbound
    | PostV2LogsQueryMessage1$Outbound
    | undefined;
  finish_reason?: string | null | undefined;
};

/** @internal */
export const ItemsChoices$outboundSchema: z.ZodType<
  ItemsChoices$Outbound,
  z.ZodTypeDef,
  ItemsChoices
> = z.object({
  index: z.number(),
  message: z.union([
    z.lazy(() => PostV2LogsQueryMessage2$outboundSchema),
    z.lazy(() => PostV2LogsQueryMessage3$outboundSchema),
    z.lazy(() => PostV2LogsQueryMessage1$outboundSchema),
  ]).optional(),
  finishReason: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    finishReason: "finish_reason",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsChoices$ {
  /** @deprecated use `ItemsChoices$inboundSchema` instead. */
  export const inboundSchema = ItemsChoices$inboundSchema;
  /** @deprecated use `ItemsChoices$outboundSchema` instead. */
  export const outboundSchema = ItemsChoices$outboundSchema;
  /** @deprecated use `ItemsChoices$Outbound` instead. */
  export type Outbound = ItemsChoices$Outbound;
}

export function itemsChoicesToJSON(itemsChoices: ItemsChoices): string {
  return JSON.stringify(ItemsChoices$outboundSchema.parse(itemsChoices));
}

export function itemsChoicesFromJSON(
  jsonString: string,
): SafeParseResult<ItemsChoices, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsChoices$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsChoices' from JSON`,
  );
}

/** @internal */
export const ItemsAction$inboundSchema: z.ZodNativeEnum<typeof ItemsAction> = z
  .nativeEnum(ItemsAction);

/** @internal */
export const ItemsAction$outboundSchema: z.ZodNativeEnum<typeof ItemsAction> =
  ItemsAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsAction$ {
  /** @deprecated use `ItemsAction$inboundSchema` instead. */
  export const inboundSchema = ItemsAction$inboundSchema;
  /** @deprecated use `ItemsAction$outboundSchema` instead. */
  export const outboundSchema = ItemsAction$outboundSchema;
}

/** @internal */
export const ItemsModelType$inboundSchema: z.ZodNativeEnum<
  typeof ItemsModelType
> = z.nativeEnum(ItemsModelType);

/** @internal */
export const ItemsModelType$outboundSchema: z.ZodNativeEnum<
  typeof ItemsModelType
> = ItemsModelType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsModelType$ {
  /** @deprecated use `ItemsModelType$inboundSchema` instead. */
  export const inboundSchema = ItemsModelType$inboundSchema;
  /** @deprecated use `ItemsModelType$outboundSchema` instead. */
  export const outboundSchema = ItemsModelType$outboundSchema;
}

/** @internal */
export const ItemsFormat$inboundSchema: z.ZodNativeEnum<typeof ItemsFormat> = z
  .nativeEnum(ItemsFormat);

/** @internal */
export const ItemsFormat$outboundSchema: z.ZodNativeEnum<typeof ItemsFormat> =
  ItemsFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsFormat$ {
  /** @deprecated use `ItemsFormat$inboundSchema` instead. */
  export const inboundSchema = ItemsFormat$inboundSchema;
  /** @deprecated use `ItemsFormat$outboundSchema` instead. */
  export const outboundSchema = ItemsFormat$outboundSchema;
}

/** @internal */
export const ItemsQuality$inboundSchema: z.ZodNativeEnum<typeof ItemsQuality> =
  z.nativeEnum(ItemsQuality);

/** @internal */
export const ItemsQuality$outboundSchema: z.ZodNativeEnum<typeof ItemsQuality> =
  ItemsQuality$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsQuality$ {
  /** @deprecated use `ItemsQuality$inboundSchema` instead. */
  export const inboundSchema = ItemsQuality$inboundSchema;
  /** @deprecated use `ItemsQuality$outboundSchema` instead. */
  export const outboundSchema = ItemsQuality$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponseType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryResponseFormatResponseType> = z
    .nativeEnum(PostV2LogsQueryResponseFormatResponseType);

/** @internal */
export const PostV2LogsQueryResponseFormatResponseType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryResponseFormatResponseType> =
    PostV2LogsQueryResponseFormatResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponseType$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponseType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponseType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponseType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponseType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormat2$inboundSchema: z.ZodType<
  PostV2LogsQueryResponseFormat2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PostV2LogsQueryResponseFormatResponseType$inboundSchema,
});

/** @internal */
export type PostV2LogsQueryResponseFormat2$Outbound = {
  type: string;
};

/** @internal */
export const PostV2LogsQueryResponseFormat2$outboundSchema: z.ZodType<
  PostV2LogsQueryResponseFormat2$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryResponseFormat2
> = z.object({
  type: PostV2LogsQueryResponseFormatResponseType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormat2$ {
  /** @deprecated use `PostV2LogsQueryResponseFormat2$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryResponseFormat2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormat2$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryResponseFormat2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormat2$Outbound` instead. */
  export type Outbound = PostV2LogsQueryResponseFormat2$Outbound;
}

export function postV2LogsQueryResponseFormat2ToJSON(
  postV2LogsQueryResponseFormat2: PostV2LogsQueryResponseFormat2,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormat2$outboundSchema.parse(
      postV2LogsQueryResponseFormat2,
    ),
  );
}

export function postV2LogsQueryResponseFormat2FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryResponseFormat2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryResponseFormat2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormat2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryResponseFormatType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryResponseFormatType
> = z.nativeEnum(PostV2LogsQueryResponseFormatType);

/** @internal */
export const PostV2LogsQueryResponseFormatType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryResponseFormatType
> = PostV2LogsQueryResponseFormatType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatType$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatType$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryResponseFormatType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatJsonSchema$inboundSchema: z.ZodType<
  PostV2LogsQueryResponseFormatJsonSchema,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  strict: z.boolean(),
  schema: z.record(z.any()),
});

/** @internal */
export type PostV2LogsQueryResponseFormatJsonSchema$Outbound = {
  name: string;
  strict: boolean;
  schema: { [k: string]: any };
};

/** @internal */
export const PostV2LogsQueryResponseFormatJsonSchema$outboundSchema: z.ZodType<
  PostV2LogsQueryResponseFormatJsonSchema$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryResponseFormatJsonSchema
> = z.object({
  name: z.string(),
  strict: z.boolean(),
  schema: z.record(z.any()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatJsonSchema$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatJsonSchema$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatJsonSchema$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatJsonSchema$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatJsonSchema$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatJsonSchema$Outbound` instead. */
  export type Outbound = PostV2LogsQueryResponseFormatJsonSchema$Outbound;
}

export function postV2LogsQueryResponseFormatJsonSchemaToJSON(
  postV2LogsQueryResponseFormatJsonSchema:
    PostV2LogsQueryResponseFormatJsonSchema,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatJsonSchema$outboundSchema.parse(
      postV2LogsQueryResponseFormatJsonSchema,
    ),
  );
}

export function postV2LogsQueryResponseFormatJsonSchemaFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatJsonSchema,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatJsonSchema$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryResponseFormatJsonSchema' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryResponseFormat1$inboundSchema: z.ZodType<
  PostV2LogsQueryResponseFormat1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PostV2LogsQueryResponseFormatType$inboundSchema,
  json_schema: z.lazy(() =>
    PostV2LogsQueryResponseFormatJsonSchema$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "json_schema": "jsonSchema",
  });
});

/** @internal */
export type PostV2LogsQueryResponseFormat1$Outbound = {
  type: string;
  json_schema: PostV2LogsQueryResponseFormatJsonSchema$Outbound;
};

/** @internal */
export const PostV2LogsQueryResponseFormat1$outboundSchema: z.ZodType<
  PostV2LogsQueryResponseFormat1$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryResponseFormat1
> = z.object({
  type: PostV2LogsQueryResponseFormatType$outboundSchema,
  jsonSchema: z.lazy(() =>
    PostV2LogsQueryResponseFormatJsonSchema$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    jsonSchema: "json_schema",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormat1$ {
  /** @deprecated use `PostV2LogsQueryResponseFormat1$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryResponseFormat1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormat1$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryResponseFormat1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormat1$Outbound` instead. */
  export type Outbound = PostV2LogsQueryResponseFormat1$Outbound;
}

export function postV2LogsQueryResponseFormat1ToJSON(
  postV2LogsQueryResponseFormat1: PostV2LogsQueryResponseFormat1,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormat1$outboundSchema.parse(
      postV2LogsQueryResponseFormat1,
    ),
  );
}

export function postV2LogsQueryResponseFormat1FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryResponseFormat1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryResponseFormat1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormat1' from JSON`,
  );
}

/** @internal */
export const ItemsResponseFormat$inboundSchema: z.ZodType<
  ItemsResponseFormat,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQueryResponseFormat2$inboundSchema),
  z.lazy(() => PostV2LogsQueryResponseFormat1$inboundSchema),
]);

/** @internal */
export type ItemsResponseFormat$Outbound =
  | PostV2LogsQueryResponseFormat2$Outbound
  | PostV2LogsQueryResponseFormat1$Outbound;

/** @internal */
export const ItemsResponseFormat$outboundSchema: z.ZodType<
  ItemsResponseFormat$Outbound,
  z.ZodTypeDef,
  ItemsResponseFormat
> = z.union([
  z.lazy(() => PostV2LogsQueryResponseFormat2$outboundSchema),
  z.lazy(() => PostV2LogsQueryResponseFormat1$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsResponseFormat$ {
  /** @deprecated use `ItemsResponseFormat$inboundSchema` instead. */
  export const inboundSchema = ItemsResponseFormat$inboundSchema;
  /** @deprecated use `ItemsResponseFormat$outboundSchema` instead. */
  export const outboundSchema = ItemsResponseFormat$outboundSchema;
  /** @deprecated use `ItemsResponseFormat$Outbound` instead. */
  export type Outbound = ItemsResponseFormat$Outbound;
}

export function itemsResponseFormatToJSON(
  itemsResponseFormat: ItemsResponseFormat,
): string {
  return JSON.stringify(
    ItemsResponseFormat$outboundSchema.parse(itemsResponseFormat),
  );
}

export function itemsResponseFormatFromJSON(
  jsonString: string,
): SafeParseResult<ItemsResponseFormat, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsResponseFormat$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsResponseFormat' from JSON`,
  );
}

/** @internal */
export const ItemsPhotoRealVersion$inboundSchema: z.ZodNativeEnum<
  typeof ItemsPhotoRealVersion
> = z.nativeEnum(ItemsPhotoRealVersion);

/** @internal */
export const ItemsPhotoRealVersion$outboundSchema: z.ZodNativeEnum<
  typeof ItemsPhotoRealVersion
> = ItemsPhotoRealVersion$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsPhotoRealVersion$ {
  /** @deprecated use `ItemsPhotoRealVersion$inboundSchema` instead. */
  export const inboundSchema = ItemsPhotoRealVersion$inboundSchema;
  /** @deprecated use `ItemsPhotoRealVersion$outboundSchema` instead. */
  export const outboundSchema = ItemsPhotoRealVersion$outboundSchema;
}

/** @internal */
export const ItemsEncodingFormat$inboundSchema: z.ZodNativeEnum<
  typeof ItemsEncodingFormat
> = z.nativeEnum(ItemsEncodingFormat);

/** @internal */
export const ItemsEncodingFormat$outboundSchema: z.ZodNativeEnum<
  typeof ItemsEncodingFormat
> = ItemsEncodingFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsEncodingFormat$ {
  /** @deprecated use `ItemsEncodingFormat$inboundSchema` instead. */
  export const inboundSchema = ItemsEncodingFormat$inboundSchema;
  /** @deprecated use `ItemsEncodingFormat$outboundSchema` instead. */
  export const outboundSchema = ItemsEncodingFormat$outboundSchema;
}

/** @internal */
export const ItemsModelParameters$inboundSchema: z.ZodType<
  ItemsModelParameters,
  z.ZodTypeDef,
  unknown
> = z.object({
  temperature: z.number().optional(),
  maxTokens: z.number().optional(),
  topK: z.number().optional(),
  topP: z.number().optional(),
  frequencyPenalty: z.number().optional(),
  presencePenalty: z.number().optional(),
  numImages: z.number().optional(),
  seed: z.number().optional(),
  format: ItemsFormat$inboundSchema.optional(),
  dimensions: z.string().optional(),
  quality: ItemsQuality$inboundSchema.optional(),
  style: z.string().optional(),
  responseFormat: z.nullable(
    z.union([
      z.lazy(() => PostV2LogsQueryResponseFormat2$inboundSchema),
      z.lazy(() => PostV2LogsQueryResponseFormat1$inboundSchema),
    ]),
  ).optional(),
  photoRealVersion: ItemsPhotoRealVersion$inboundSchema.optional(),
  encoding_format: ItemsEncodingFormat$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "encoding_format": "encodingFormat",
  });
});

/** @internal */
export type ItemsModelParameters$Outbound = {
  temperature?: number | undefined;
  maxTokens?: number | undefined;
  topK?: number | undefined;
  topP?: number | undefined;
  frequencyPenalty?: number | undefined;
  presencePenalty?: number | undefined;
  numImages?: number | undefined;
  seed?: number | undefined;
  format?: string | undefined;
  dimensions?: string | undefined;
  quality?: string | undefined;
  style?: string | undefined;
  responseFormat?:
    | PostV2LogsQueryResponseFormat2$Outbound
    | PostV2LogsQueryResponseFormat1$Outbound
    | null
    | undefined;
  photoRealVersion?: string | undefined;
  encoding_format?: string | undefined;
};

/** @internal */
export const ItemsModelParameters$outboundSchema: z.ZodType<
  ItemsModelParameters$Outbound,
  z.ZodTypeDef,
  ItemsModelParameters
> = z.object({
  temperature: z.number().optional(),
  maxTokens: z.number().optional(),
  topK: z.number().optional(),
  topP: z.number().optional(),
  frequencyPenalty: z.number().optional(),
  presencePenalty: z.number().optional(),
  numImages: z.number().optional(),
  seed: z.number().optional(),
  format: ItemsFormat$outboundSchema.optional(),
  dimensions: z.string().optional(),
  quality: ItemsQuality$outboundSchema.optional(),
  style: z.string().optional(),
  responseFormat: z.nullable(
    z.union([
      z.lazy(() => PostV2LogsQueryResponseFormat2$outboundSchema),
      z.lazy(() => PostV2LogsQueryResponseFormat1$outboundSchema),
    ]),
  ).optional(),
  photoRealVersion: ItemsPhotoRealVersion$outboundSchema.optional(),
  encodingFormat: ItemsEncodingFormat$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    encodingFormat: "encoding_format",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsModelParameters$ {
  /** @deprecated use `ItemsModelParameters$inboundSchema` instead. */
  export const inboundSchema = ItemsModelParameters$inboundSchema;
  /** @deprecated use `ItemsModelParameters$outboundSchema` instead. */
  export const outboundSchema = ItemsModelParameters$outboundSchema;
  /** @deprecated use `ItemsModelParameters$Outbound` instead. */
  export type Outbound = ItemsModelParameters$Outbound;
}

export function itemsModelParametersToJSON(
  itemsModelParameters: ItemsModelParameters,
): string {
  return JSON.stringify(
    ItemsModelParameters$outboundSchema.parse(itemsModelParameters),
  );
}

export function itemsModelParametersFromJSON(
  jsonString: string,
): SafeParseResult<ItemsModelParameters, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsModelParameters$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsModelParameters' from JSON`,
  );
}

/** @internal */
export const ItemsProvider$inboundSchema: z.ZodNativeEnum<
  typeof ItemsProvider
> = z.nativeEnum(ItemsProvider);

/** @internal */
export const ItemsProvider$outboundSchema: z.ZodNativeEnum<
  typeof ItemsProvider
> = ItemsProvider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsProvider$ {
  /** @deprecated use `ItemsProvider$inboundSchema` instead. */
  export const inboundSchema = ItemsProvider$inboundSchema;
  /** @deprecated use `ItemsProvider$outboundSchema` instead. */
  export const outboundSchema = ItemsProvider$outboundSchema;
}

/** @internal */
export const ItemsRole$inboundSchema: z.ZodNativeEnum<typeof ItemsRole> = z
  .nativeEnum(ItemsRole);

/** @internal */
export const ItemsRole$outboundSchema: z.ZodNativeEnum<typeof ItemsRole> =
  ItemsRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsRole$ {
  /** @deprecated use `ItemsRole$inboundSchema` instead. */
  export const inboundSchema = ItemsRole$inboundSchema;
  /** @deprecated use `ItemsRole$outboundSchema` instead. */
  export const outboundSchema = ItemsRole$outboundSchema;
}

/** @internal */
export const PostV2LogsQuery2ResponseType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQuery2ResponseType
> = z.nativeEnum(PostV2LogsQuery2ResponseType);

/** @internal */
export const PostV2LogsQuery2ResponseType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQuery2ResponseType
> = PostV2LogsQuery2ResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2ResponseType$ {
  /** @deprecated use `PostV2LogsQuery2ResponseType$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQuery2ResponseType$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2ResponseType$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQuery2ResponseType$outboundSchema;
}

/** @internal */
export const PostV2LogsQuery2ImageUrl$inboundSchema: z.ZodType<
  PostV2LogsQuery2ImageUrl,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  url: z.string(),
  detail: z.string().optional(),
});

/** @internal */
export type PostV2LogsQuery2ImageUrl$Outbound = {
  id?: string | undefined;
  url: string;
  detail?: string | undefined;
};

/** @internal */
export const PostV2LogsQuery2ImageUrl$outboundSchema: z.ZodType<
  PostV2LogsQuery2ImageUrl$Outbound,
  z.ZodTypeDef,
  PostV2LogsQuery2ImageUrl
> = z.object({
  id: z.string().optional(),
  url: z.string(),
  detail: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2ImageUrl$ {
  /** @deprecated use `PostV2LogsQuery2ImageUrl$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQuery2ImageUrl$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2ImageUrl$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQuery2ImageUrl$outboundSchema;
  /** @deprecated use `PostV2LogsQuery2ImageUrl$Outbound` instead. */
  export type Outbound = PostV2LogsQuery2ImageUrl$Outbound;
}

export function postV2LogsQuery2ImageUrlToJSON(
  postV2LogsQuery2ImageUrl: PostV2LogsQuery2ImageUrl,
): string {
  return JSON.stringify(
    PostV2LogsQuery2ImageUrl$outboundSchema.parse(postV2LogsQuery2ImageUrl),
  );
}

export function postV2LogsQuery2ImageUrlFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQuery2ImageUrl, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQuery2ImageUrl$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQuery2ImageUrl' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQuery22$inboundSchema: z.ZodType<
  PostV2LogsQuery22,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PostV2LogsQuery2ResponseType$inboundSchema,
  image_url: z.lazy(() => PostV2LogsQuery2ImageUrl$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "image_url": "imageUrl",
  });
});

/** @internal */
export type PostV2LogsQuery22$Outbound = {
  type: string;
  image_url: PostV2LogsQuery2ImageUrl$Outbound;
};

/** @internal */
export const PostV2LogsQuery22$outboundSchema: z.ZodType<
  PostV2LogsQuery22$Outbound,
  z.ZodTypeDef,
  PostV2LogsQuery22
> = z.object({
  type: PostV2LogsQuery2ResponseType$outboundSchema,
  imageUrl: z.lazy(() => PostV2LogsQuery2ImageUrl$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    imageUrl: "image_url",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery22$ {
  /** @deprecated use `PostV2LogsQuery22$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQuery22$inboundSchema;
  /** @deprecated use `PostV2LogsQuery22$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQuery22$outboundSchema;
  /** @deprecated use `PostV2LogsQuery22$Outbound` instead. */
  export type Outbound = PostV2LogsQuery22$Outbound;
}

export function postV2LogsQuery22ToJSON(
  postV2LogsQuery22: PostV2LogsQuery22,
): string {
  return JSON.stringify(
    PostV2LogsQuery22$outboundSchema.parse(postV2LogsQuery22),
  );
}

export function postV2LogsQuery22FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQuery22, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQuery22$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQuery22' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQuery2Type$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQuery2Type
> = z.nativeEnum(PostV2LogsQuery2Type);

/** @internal */
export const PostV2LogsQuery2Type$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQuery2Type
> = PostV2LogsQuery2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Type$ {
  /** @deprecated use `PostV2LogsQuery2Type$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQuery2Type$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Type$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQuery2Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQuery21$inboundSchema: z.ZodType<
  PostV2LogsQuery21,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PostV2LogsQuery2Type$inboundSchema,
  text: z.string(),
});

/** @internal */
export type PostV2LogsQuery21$Outbound = {
  type: string;
  text: string;
};

/** @internal */
export const PostV2LogsQuery21$outboundSchema: z.ZodType<
  PostV2LogsQuery21$Outbound,
  z.ZodTypeDef,
  PostV2LogsQuery21
> = z.object({
  type: PostV2LogsQuery2Type$outboundSchema,
  text: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery21$ {
  /** @deprecated use `PostV2LogsQuery21$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQuery21$inboundSchema;
  /** @deprecated use `PostV2LogsQuery21$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQuery21$outboundSchema;
  /** @deprecated use `PostV2LogsQuery21$Outbound` instead. */
  export type Outbound = PostV2LogsQuery21$Outbound;
}

export function postV2LogsQuery21ToJSON(
  postV2LogsQuery21: PostV2LogsQuery21,
): string {
  return JSON.stringify(
    PostV2LogsQuery21$outboundSchema.parse(postV2LogsQuery21),
  );
}

export function postV2LogsQuery21FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQuery21, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQuery21$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQuery21' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryContent2$inboundSchema: z.ZodType<
  PostV2LogsQueryContent2,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQuery21$inboundSchema),
  z.lazy(() => PostV2LogsQuery22$inboundSchema),
]);

/** @internal */
export type PostV2LogsQueryContent2$Outbound =
  | PostV2LogsQuery21$Outbound
  | PostV2LogsQuery22$Outbound;

/** @internal */
export const PostV2LogsQueryContent2$outboundSchema: z.ZodType<
  PostV2LogsQueryContent2$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryContent2
> = z.union([
  z.lazy(() => PostV2LogsQuery21$outboundSchema),
  z.lazy(() => PostV2LogsQuery22$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryContent2$ {
  /** @deprecated use `PostV2LogsQueryContent2$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryContent2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryContent2$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryContent2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryContent2$Outbound` instead. */
  export type Outbound = PostV2LogsQueryContent2$Outbound;
}

export function postV2LogsQueryContent2ToJSON(
  postV2LogsQueryContent2: PostV2LogsQueryContent2,
): string {
  return JSON.stringify(
    PostV2LogsQueryContent2$outboundSchema.parse(postV2LogsQueryContent2),
  );
}

export function postV2LogsQueryContent2FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryContent2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryContent2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryContent2' from JSON`,
  );
}

/** @internal */
export const ItemsContent$inboundSchema: z.ZodType<
  ItemsContent,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() => PostV2LogsQuery21$inboundSchema),
    z.lazy(() => PostV2LogsQuery22$inboundSchema),
  ])),
]);

/** @internal */
export type ItemsContent$Outbound =
  | string
  | Array<PostV2LogsQuery21$Outbound | PostV2LogsQuery22$Outbound>;

/** @internal */
export const ItemsContent$outboundSchema: z.ZodType<
  ItemsContent$Outbound,
  z.ZodTypeDef,
  ItemsContent
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() => PostV2LogsQuery21$outboundSchema),
    z.lazy(() => PostV2LogsQuery22$outboundSchema),
  ])),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsContent$ {
  /** @deprecated use `ItemsContent$inboundSchema` instead. */
  export const inboundSchema = ItemsContent$inboundSchema;
  /** @deprecated use `ItemsContent$outboundSchema` instead. */
  export const outboundSchema = ItemsContent$outboundSchema;
  /** @deprecated use `ItemsContent$Outbound` instead. */
  export type Outbound = ItemsContent$Outbound;
}

export function itemsContentToJSON(itemsContent: ItemsContent): string {
  return JSON.stringify(ItemsContent$outboundSchema.parse(itemsContent));
}

export function itemsContentFromJSON(
  jsonString: string,
): SafeParseResult<ItemsContent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsContent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsContent' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsResponse200ApplicationJSONType> = z
    .nativeEnum(PostV2LogsQueryItemsResponse200ApplicationJSONType);

/** @internal */
export const PostV2LogsQueryItemsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsResponse200ApplicationJSONType> =
    PostV2LogsQueryItemsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponse200ApplicationJSONType$ {
  /** @deprecated use `PostV2LogsQueryItemsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryItemsResponse200Function$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponse200Function,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/** @internal */
export type PostV2LogsQueryItemsResponse200Function$Outbound = {
  name: string;
  arguments: string;
};

/** @internal */
export const PostV2LogsQueryItemsResponse200Function$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponse200Function$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponse200Function
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponse200Function$ {
  /** @deprecated use `PostV2LogsQueryItemsResponse200Function$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponse200Function$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200Function$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponse200Function$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200Function$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponse200Function$Outbound;
}

export function postV2LogsQueryItemsResponse200FunctionToJSON(
  postV2LogsQueryItemsResponse200Function:
    PostV2LogsQueryItemsResponse200Function,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponse200Function$outboundSchema.parse(
      postV2LogsQueryItemsResponse200Function,
    ),
  );
}

export function postV2LogsQueryItemsResponse200FunctionFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryItemsResponse200Function,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponse200Function$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryItemsResponse200Function' from JSON`,
  );
}

/** @internal */
export const ItemsToolCalls$inboundSchema: z.ZodType<
  ItemsToolCalls,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type: PostV2LogsQueryItemsResponse200ApplicationJSONType$inboundSchema,
  function: z.lazy(() => PostV2LogsQueryItemsResponse200Function$inboundSchema),
});

/** @internal */
export type ItemsToolCalls$Outbound = {
  id?: string | undefined;
  index?: number | undefined;
  type: string;
  function: PostV2LogsQueryItemsResponse200Function$Outbound;
};

/** @internal */
export const ItemsToolCalls$outboundSchema: z.ZodType<
  ItemsToolCalls$Outbound,
  z.ZodTypeDef,
  ItemsToolCalls
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type: PostV2LogsQueryItemsResponse200ApplicationJSONType$outboundSchema,
  function: z.lazy(() =>
    PostV2LogsQueryItemsResponse200Function$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsToolCalls$ {
  /** @deprecated use `ItemsToolCalls$inboundSchema` instead. */
  export const inboundSchema = ItemsToolCalls$inboundSchema;
  /** @deprecated use `ItemsToolCalls$outboundSchema` instead. */
  export const outboundSchema = ItemsToolCalls$outboundSchema;
  /** @deprecated use `ItemsToolCalls$Outbound` instead. */
  export type Outbound = ItemsToolCalls$Outbound;
}

export function itemsToolCallsToJSON(itemsToolCalls: ItemsToolCalls): string {
  return JSON.stringify(ItemsToolCalls$outboundSchema.parse(itemsToolCalls));
}

export function itemsToolCallsFromJSON(
  jsonString: string,
): SafeParseResult<ItemsToolCalls, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsToolCalls$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsToolCalls' from JSON`,
  );
}

/** @internal */
export const ItemsMessages$inboundSchema: z.ZodType<
  ItemsMessages,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: ItemsRole$inboundSchema,
  content: z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => PostV2LogsQuery21$inboundSchema),
      z.lazy(() => PostV2LogsQuery22$inboundSchema),
    ])),
  ]),
  tool_calls: z.array(z.lazy(() => ItemsToolCalls$inboundSchema)).optional(),
  id: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "tool_calls": "toolCalls",
  });
});

/** @internal */
export type ItemsMessages$Outbound = {
  role: string;
  content:
    | string
    | Array<PostV2LogsQuery21$Outbound | PostV2LogsQuery22$Outbound>;
  tool_calls?: Array<ItemsToolCalls$Outbound> | undefined;
  id?: string | undefined;
};

/** @internal */
export const ItemsMessages$outboundSchema: z.ZodType<
  ItemsMessages$Outbound,
  z.ZodTypeDef,
  ItemsMessages
> = z.object({
  role: ItemsRole$outboundSchema,
  content: z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => PostV2LogsQuery21$outboundSchema),
      z.lazy(() => PostV2LogsQuery22$outboundSchema),
    ])),
  ]),
  toolCalls: z.array(z.lazy(() => ItemsToolCalls$outboundSchema)).optional(),
  id: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    toolCalls: "tool_calls",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsMessages$ {
  /** @deprecated use `ItemsMessages$inboundSchema` instead. */
  export const inboundSchema = ItemsMessages$inboundSchema;
  /** @deprecated use `ItemsMessages$outboundSchema` instead. */
  export const outboundSchema = ItemsMessages$outboundSchema;
  /** @deprecated use `ItemsMessages$Outbound` instead. */
  export type Outbound = ItemsMessages$Outbound;
}

export function itemsMessagesToJSON(itemsMessages: ItemsMessages): string {
  return JSON.stringify(ItemsMessages$outboundSchema.parse(itemsMessages));
}

export function itemsMessagesFromJSON(
  jsonString: string,
): SafeParseResult<ItemsMessages, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsMessages$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsMessages' from JSON`,
  );
}

/** @internal */
export const ItemsPromptConfig$inboundSchema: z.ZodType<
  ItemsPromptConfig,
  z.ZodTypeDef,
  unknown
> = z.object({
  stream: z.boolean(),
  model: z.string(),
  model_db_id: z.string(),
  model_type: ItemsModelType$inboundSchema,
  model_parameters: z.lazy(() => ItemsModelParameters$inboundSchema),
  provider: ItemsProvider$inboundSchema,
  messages: z.array(z.lazy(() => ItemsMessages$inboundSchema)),
  integration_id: z.nullable(z.string()).optional(),
  version: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "model_db_id": "modelDbId",
    "model_type": "modelType",
    "model_parameters": "modelParameters",
    "integration_id": "integrationId",
  });
});

/** @internal */
export type ItemsPromptConfig$Outbound = {
  stream: boolean;
  model: string;
  model_db_id: string;
  model_type: string;
  model_parameters: ItemsModelParameters$Outbound;
  provider: string;
  messages: Array<ItemsMessages$Outbound>;
  integration_id?: string | null | undefined;
  version?: string | undefined;
};

/** @internal */
export const ItemsPromptConfig$outboundSchema: z.ZodType<
  ItemsPromptConfig$Outbound,
  z.ZodTypeDef,
  ItemsPromptConfig
> = z.object({
  stream: z.boolean(),
  model: z.string(),
  modelDbId: z.string(),
  modelType: ItemsModelType$outboundSchema,
  modelParameters: z.lazy(() => ItemsModelParameters$outboundSchema),
  provider: ItemsProvider$outboundSchema,
  messages: z.array(z.lazy(() => ItemsMessages$outboundSchema)),
  integrationId: z.nullable(z.string()).optional(),
  version: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    modelDbId: "model_db_id",
    modelType: "model_type",
    modelParameters: "model_parameters",
    integrationId: "integration_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsPromptConfig$ {
  /** @deprecated use `ItemsPromptConfig$inboundSchema` instead. */
  export const inboundSchema = ItemsPromptConfig$inboundSchema;
  /** @deprecated use `ItemsPromptConfig$outboundSchema` instead. */
  export const outboundSchema = ItemsPromptConfig$outboundSchema;
  /** @deprecated use `ItemsPromptConfig$Outbound` instead. */
  export type Outbound = ItemsPromptConfig$Outbound;
}

export function itemsPromptConfigToJSON(
  itemsPromptConfig: ItemsPromptConfig,
): string {
  return JSON.stringify(
    ItemsPromptConfig$outboundSchema.parse(itemsPromptConfig),
  );
}

export function itemsPromptConfigFromJSON(
  jsonString: string,
): SafeParseResult<ItemsPromptConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsPromptConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsPromptConfig' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseVariables$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseVariables,
  z.ZodTypeDef,
  unknown
> = z.object({
  key: z.string(),
  value: z.any().optional(),
  is_pii: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    "is_pii": "isPii",
  });
});

/** @internal */
export type PostV2LogsQueryItemsResponseVariables$Outbound = {
  key: string;
  value?: any | undefined;
  is_pii: boolean;
};

/** @internal */
export const PostV2LogsQueryItemsResponseVariables$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseVariables$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponseVariables
> = z.object({
  key: z.string(),
  value: z.any().optional(),
  isPii: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    isPii: "is_pii",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseVariables$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseVariables$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseVariables$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseVariables$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseVariables$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseVariables$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseVariables$Outbound;
}

export function postV2LogsQueryItemsResponseVariablesToJSON(
  postV2LogsQueryItemsResponseVariables: PostV2LogsQueryItemsResponseVariables,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseVariables$outboundSchema.parse(
      postV2LogsQueryItemsResponseVariables,
    ),
  );
}

export function postV2LogsQueryItemsResponseVariablesFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsResponseVariables, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponseVariables$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsResponseVariables' from JSON`,
  );
}

/** @internal */
export const ItemsPerformance$inboundSchema: z.ZodType<
  ItemsPerformance,
  z.ZodTypeDef,
  unknown
> = z.object({
  latency: z.number(),
  first_time_to_token: z.nullable(z.number()).optional(),
  tokens_per_second: z.nullable(z.number()).optional(),
}).transform((v) => {
  return remap$(v, {
    "first_time_to_token": "firstTimeToToken",
    "tokens_per_second": "tokensPerSecond",
  });
});

/** @internal */
export type ItemsPerformance$Outbound = {
  latency: number;
  first_time_to_token?: number | null | undefined;
  tokens_per_second?: number | null | undefined;
};

/** @internal */
export const ItemsPerformance$outboundSchema: z.ZodType<
  ItemsPerformance$Outbound,
  z.ZodTypeDef,
  ItemsPerformance
> = z.object({
  latency: z.number(),
  firstTimeToToken: z.nullable(z.number()).optional(),
  tokensPerSecond: z.nullable(z.number()).optional(),
}).transform((v) => {
  return remap$(v, {
    firstTimeToToken: "first_time_to_token",
    tokensPerSecond: "tokens_per_second",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsPerformance$ {
  /** @deprecated use `ItemsPerformance$inboundSchema` instead. */
  export const inboundSchema = ItemsPerformance$inboundSchema;
  /** @deprecated use `ItemsPerformance$outboundSchema` instead. */
  export const outboundSchema = ItemsPerformance$outboundSchema;
  /** @deprecated use `ItemsPerformance$Outbound` instead. */
  export type Outbound = ItemsPerformance$Outbound;
}

export function itemsPerformanceToJSON(
  itemsPerformance: ItemsPerformance,
): string {
  return JSON.stringify(
    ItemsPerformance$outboundSchema.parse(itemsPerformance),
  );
}

export function itemsPerformanceFromJSON(
  jsonString: string,
): SafeParseResult<ItemsPerformance, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsPerformance$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsPerformance' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponsePromptTokensDetails$inboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsResponsePromptTokensDetails,
    z.ZodTypeDef,
    unknown
  > = z.object({
    cached_tokens: z.number().optional(),
  }).transform((v) => {
    return remap$(v, {
      "cached_tokens": "cachedTokens",
    });
  });

/** @internal */
export type PostV2LogsQueryItemsResponsePromptTokensDetails$Outbound = {
  cached_tokens?: number | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsResponsePromptTokensDetails$outboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsResponsePromptTokensDetails$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryItemsResponsePromptTokensDetails
  > = z.object({
    cachedTokens: z.number().optional(),
  }).transform((v) => {
    return remap$(v, {
      cachedTokens: "cached_tokens",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponsePromptTokensDetails$ {
  /** @deprecated use `PostV2LogsQueryItemsResponsePromptTokensDetails$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponsePromptTokensDetails$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponsePromptTokensDetails$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponsePromptTokensDetails$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponsePromptTokensDetails$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryItemsResponsePromptTokensDetails$Outbound;
}

export function postV2LogsQueryItemsResponsePromptTokensDetailsToJSON(
  postV2LogsQueryItemsResponsePromptTokensDetails:
    PostV2LogsQueryItemsResponsePromptTokensDetails,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponsePromptTokensDetails$outboundSchema.parse(
      postV2LogsQueryItemsResponsePromptTokensDetails,
    ),
  );
}

export function postV2LogsQueryItemsResponsePromptTokensDetailsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryItemsResponsePromptTokensDetails,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponsePromptTokensDetails$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryItemsResponsePromptTokensDetails' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseCompletionTokensDetails$inboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsResponseCompletionTokensDetails,
    z.ZodTypeDef,
    unknown
  > = z.object({
    reasoning_tokens: z.number().optional(),
  }).transform((v) => {
    return remap$(v, {
      "reasoning_tokens": "reasoningTokens",
    });
  });

/** @internal */
export type PostV2LogsQueryItemsResponseCompletionTokensDetails$Outbound = {
  reasoning_tokens?: number | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsResponseCompletionTokensDetails$outboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsResponseCompletionTokensDetails$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryItemsResponseCompletionTokensDetails
  > = z.object({
    reasoningTokens: z.number().optional(),
  }).transform((v) => {
    return remap$(v, {
      reasoningTokens: "reasoning_tokens",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseCompletionTokensDetails$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseCompletionTokensDetails$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseCompletionTokensDetails$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseCompletionTokensDetails$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseCompletionTokensDetails$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseCompletionTokensDetails$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryItemsResponseCompletionTokensDetails$Outbound;
}

export function postV2LogsQueryItemsResponseCompletionTokensDetailsToJSON(
  postV2LogsQueryItemsResponseCompletionTokensDetails:
    PostV2LogsQueryItemsResponseCompletionTokensDetails,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseCompletionTokensDetails$outboundSchema.parse(
      postV2LogsQueryItemsResponseCompletionTokensDetails,
    ),
  );
}

export function postV2LogsQueryItemsResponseCompletionTokensDetailsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryItemsResponseCompletionTokensDetails,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponseCompletionTokensDetails$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryItemsResponseCompletionTokensDetails' from JSON`,
  );
}

/** @internal */
export const ItemsUsage$inboundSchema: z.ZodType<
  ItemsUsage,
  z.ZodTypeDef,
  unknown
> = z.object({
  total_tokens: z.number().optional(),
  prompt_tokens: z.number().optional(),
  completion_tokens: z.number().optional(),
  prompt_tokens_details: z.lazy(() =>
    PostV2LogsQueryItemsResponsePromptTokensDetails$inboundSchema
  ).optional(),
  completion_tokens_details: z.lazy(() =>
    PostV2LogsQueryItemsResponseCompletionTokensDetails$inboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "total_tokens": "totalTokens",
    "prompt_tokens": "promptTokens",
    "completion_tokens": "completionTokens",
    "prompt_tokens_details": "promptTokensDetails",
    "completion_tokens_details": "completionTokensDetails",
  });
});

/** @internal */
export type ItemsUsage$Outbound = {
  total_tokens?: number | undefined;
  prompt_tokens?: number | undefined;
  completion_tokens?: number | undefined;
  prompt_tokens_details?:
    | PostV2LogsQueryItemsResponsePromptTokensDetails$Outbound
    | undefined;
  completion_tokens_details?:
    | PostV2LogsQueryItemsResponseCompletionTokensDetails$Outbound
    | undefined;
};

/** @internal */
export const ItemsUsage$outboundSchema: z.ZodType<
  ItemsUsage$Outbound,
  z.ZodTypeDef,
  ItemsUsage
> = z.object({
  totalTokens: z.number().optional(),
  promptTokens: z.number().optional(),
  completionTokens: z.number().optional(),
  promptTokensDetails: z.lazy(() =>
    PostV2LogsQueryItemsResponsePromptTokensDetails$outboundSchema
  ).optional(),
  completionTokensDetails: z.lazy(() =>
    PostV2LogsQueryItemsResponseCompletionTokensDetails$outboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    totalTokens: "total_tokens",
    promptTokens: "prompt_tokens",
    completionTokens: "completion_tokens",
    promptTokensDetails: "prompt_tokens_details",
    completionTokensDetails: "completion_tokens_details",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsUsage$ {
  /** @deprecated use `ItemsUsage$inboundSchema` instead. */
  export const inboundSchema = ItemsUsage$inboundSchema;
  /** @deprecated use `ItemsUsage$outboundSchema` instead. */
  export const outboundSchema = ItemsUsage$outboundSchema;
  /** @deprecated use `ItemsUsage$Outbound` instead. */
  export type Outbound = ItemsUsage$Outbound;
}

export function itemsUsageToJSON(itemsUsage: ItemsUsage): string {
  return JSON.stringify(ItemsUsage$outboundSchema.parse(itemsUsage));
}

export function itemsUsageFromJSON(
  jsonString: string,
): SafeParseResult<ItemsUsage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsUsage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsUsage' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseBilling$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseBilling,
  z.ZodTypeDef,
  unknown
> = z.object({
  total_cost: z.nullable(z.number()).optional(),
  input_cost: z.nullable(z.number()).optional(),
  output_cost: z.nullable(z.number()).optional(),
  billable: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    "total_cost": "totalCost",
    "input_cost": "inputCost",
    "output_cost": "outputCost",
  });
});

/** @internal */
export type PostV2LogsQueryItemsResponseBilling$Outbound = {
  total_cost?: number | null | undefined;
  input_cost?: number | null | undefined;
  output_cost?: number | null | undefined;
  billable: boolean;
};

/** @internal */
export const PostV2LogsQueryItemsResponseBilling$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseBilling$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponseBilling
> = z.object({
  totalCost: z.nullable(z.number()).optional(),
  inputCost: z.nullable(z.number()).optional(),
  outputCost: z.nullable(z.number()).optional(),
  billable: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    totalCost: "total_cost",
    inputCost: "input_cost",
    outputCost: "output_cost",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseBilling$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseBilling$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseBilling$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseBilling$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseBilling$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseBilling$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseBilling$Outbound;
}

export function postV2LogsQueryItemsResponseBillingToJSON(
  postV2LogsQueryItemsResponseBilling: PostV2LogsQueryItemsResponseBilling,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseBilling$outboundSchema.parse(
      postV2LogsQueryItemsResponseBilling,
    ),
  );
}

export function postV2LogsQueryItemsResponseBillingFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsResponseBilling, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponseBilling$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsResponseBilling' from JSON`,
  );
}

/** @internal */
export const ItemsRetries$inboundSchema: z.ZodType<
  ItemsRetries,
  z.ZodTypeDef,
  unknown
> = z.object({
  retry_attempt: z.number(),
  status: z.number(),
  message: z.string().optional(),
  is_fallback: z.boolean().optional(),
}).transform((v) => {
  return remap$(v, {
    "retry_attempt": "retryAttempt",
    "is_fallback": "isFallback",
  });
});

/** @internal */
export type ItemsRetries$Outbound = {
  retry_attempt: number;
  status: number;
  message?: string | undefined;
  is_fallback?: boolean | undefined;
};

/** @internal */
export const ItemsRetries$outboundSchema: z.ZodType<
  ItemsRetries$Outbound,
  z.ZodTypeDef,
  ItemsRetries
> = z.object({
  retryAttempt: z.number(),
  status: z.number(),
  message: z.string().optional(),
  isFallback: z.boolean().optional(),
}).transform((v) => {
  return remap$(v, {
    retryAttempt: "retry_attempt",
    isFallback: "is_fallback",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsRetries$ {
  /** @deprecated use `ItemsRetries$inboundSchema` instead. */
  export const inboundSchema = ItemsRetries$inboundSchema;
  /** @deprecated use `ItemsRetries$outboundSchema` instead. */
  export const outboundSchema = ItemsRetries$outboundSchema;
  /** @deprecated use `ItemsRetries$Outbound` instead. */
  export type Outbound = ItemsRetries$Outbound;
}

export function itemsRetriesToJSON(itemsRetries: ItemsRetries): string {
  return JSON.stringify(ItemsRetries$outboundSchema.parse(itemsRetries));
}

export function itemsRetriesFromJSON(
  jsonString: string,
): SafeParseResult<ItemsRetries, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsRetries$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsRetries' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsMetadata$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({
  datasource_id: z.string(),
  chunk_id: z.string(),
  file_name: z.string(),
  page_number: z.nullable(z.number()).optional(),
  file_type: z.string(),
}).transform((v) => {
  return remap$(v, {
    "datasource_id": "datasourceId",
    "chunk_id": "chunkId",
    "file_name": "fileName",
    "page_number": "pageNumber",
    "file_type": "fileType",
  });
});

/** @internal */
export type PostV2LogsQueryItemsMetadata$Outbound = {
  datasource_id: string;
  chunk_id: string;
  file_name: string;
  page_number?: number | null | undefined;
  file_type: string;
};

/** @internal */
export const PostV2LogsQueryItemsMetadata$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsMetadata$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsMetadata
> = z.object({
  datasourceId: z.string(),
  chunkId: z.string(),
  fileName: z.string(),
  pageNumber: z.nullable(z.number()).optional(),
  fileType: z.string(),
}).transform((v) => {
  return remap$(v, {
    datasourceId: "datasource_id",
    chunkId: "chunk_id",
    fileName: "file_name",
    pageNumber: "page_number",
    fileType: "file_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsMetadata$ {
  /** @deprecated use `PostV2LogsQueryItemsMetadata$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsMetadata$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsMetadata$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsMetadata$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsMetadata$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsMetadata$Outbound;
}

export function postV2LogsQueryItemsMetadataToJSON(
  postV2LogsQueryItemsMetadata: PostV2LogsQueryItemsMetadata,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsMetadata$outboundSchema.parse(
      postV2LogsQueryItemsMetadata,
    ),
  );
}

export function postV2LogsQueryItemsMetadataFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsMetadata' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseDocuments$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseDocuments,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  text: z.string(),
  metadata: z.lazy(() => PostV2LogsQueryItemsMetadata$inboundSchema),
  score: z.number(),
  rerank_score: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    "rerank_score": "rerankScore",
  });
});

/** @internal */
export type PostV2LogsQueryItemsResponseDocuments$Outbound = {
  id: string;
  text: string;
  metadata: PostV2LogsQueryItemsMetadata$Outbound;
  score: number;
  rerank_score?: number | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsResponseDocuments$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseDocuments$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponseDocuments
> = z.object({
  id: z.string(),
  text: z.string(),
  metadata: z.lazy(() => PostV2LogsQueryItemsMetadata$outboundSchema),
  score: z.number(),
  rerankScore: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    rerankScore: "rerank_score",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseDocuments$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseDocuments$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseDocuments$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseDocuments$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseDocuments$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseDocuments$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseDocuments$Outbound;
}

export function postV2LogsQueryItemsResponseDocumentsToJSON(
  postV2LogsQueryItemsResponseDocuments: PostV2LogsQueryItemsResponseDocuments,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseDocuments$outboundSchema.parse(
      postV2LogsQueryItemsResponseDocuments,
    ),
  );
}

export function postV2LogsQueryItemsResponseDocumentsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsResponseDocuments, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponseDocuments$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsResponseDocuments' from JSON`,
  );
}

/** @internal */
export const ItemsRetrievals$inboundSchema: z.ZodType<
  ItemsRetrievals,
  z.ZodTypeDef,
  unknown
> = z.object({
  knowledge_id: z.string(),
  documents: z.array(
    z.lazy(() => PostV2LogsQueryItemsResponseDocuments$inboundSchema),
  ),
  knowledge_key: z.string(),
  query: z.string(),
}).transform((v) => {
  return remap$(v, {
    "knowledge_id": "knowledgeId",
    "knowledge_key": "knowledgeKey",
  });
});

/** @internal */
export type ItemsRetrievals$Outbound = {
  knowledge_id: string;
  documents: Array<PostV2LogsQueryItemsResponseDocuments$Outbound>;
  knowledge_key: string;
  query: string;
};

/** @internal */
export const ItemsRetrievals$outboundSchema: z.ZodType<
  ItemsRetrievals$Outbound,
  z.ZodTypeDef,
  ItemsRetrievals
> = z.object({
  knowledgeId: z.string(),
  documents: z.array(
    z.lazy(() => PostV2LogsQueryItemsResponseDocuments$outboundSchema),
  ),
  knowledgeKey: z.string(),
  query: z.string(),
}).transform((v) => {
  return remap$(v, {
    knowledgeId: "knowledge_id",
    knowledgeKey: "knowledge_key",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsRetrievals$ {
  /** @deprecated use `ItemsRetrievals$inboundSchema` instead. */
  export const inboundSchema = ItemsRetrievals$inboundSchema;
  /** @deprecated use `ItemsRetrievals$outboundSchema` instead. */
  export const outboundSchema = ItemsRetrievals$outboundSchema;
  /** @deprecated use `ItemsRetrievals$Outbound` instead. */
  export type Outbound = ItemsRetrievals$Outbound;
}

export function itemsRetrievalsToJSON(
  itemsRetrievals: ItemsRetrievals,
): string {
  return JSON.stringify(ItemsRetrievals$outboundSchema.parse(itemsRetrievals));
}

export function itemsRetrievalsFromJSON(
  jsonString: string,
): SafeParseResult<ItemsRetrievals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsRetrievals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsRetrievals' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryConfigurationType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryConfigurationType
> = z.nativeEnum(PostV2LogsQueryConfigurationType);

/** @internal */
export const PostV2LogsQueryConfigurationType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryConfigurationType
> = PostV2LogsQueryConfigurationType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryConfigurationType$ {
  /** @deprecated use `PostV2LogsQueryConfigurationType$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryConfigurationType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryConfigurationType$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryConfigurationType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryConfigurationResponse2002$inboundSchema: z.ZodType<
  PostV2LogsQueryConfigurationResponse2002,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PostV2LogsQueryConfigurationType$inboundSchema,
  query: z.string(),
});

/** @internal */
export type PostV2LogsQueryConfigurationResponse2002$Outbound = {
  type: string;
  query: string;
};

/** @internal */
export const PostV2LogsQueryConfigurationResponse2002$outboundSchema: z.ZodType<
  PostV2LogsQueryConfigurationResponse2002$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryConfigurationResponse2002
> = z.object({
  type: PostV2LogsQueryConfigurationType$outboundSchema,
  query: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryConfigurationResponse2002$ {
  /** @deprecated use `PostV2LogsQueryConfigurationResponse2002$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryConfigurationResponse2002$inboundSchema;
  /** @deprecated use `PostV2LogsQueryConfigurationResponse2002$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryConfigurationResponse2002$outboundSchema;
  /** @deprecated use `PostV2LogsQueryConfigurationResponse2002$Outbound` instead. */
  export type Outbound = PostV2LogsQueryConfigurationResponse2002$Outbound;
}

export function postV2LogsQueryConfigurationResponse2002ToJSON(
  postV2LogsQueryConfigurationResponse2002:
    PostV2LogsQueryConfigurationResponse2002,
): string {
  return JSON.stringify(
    PostV2LogsQueryConfigurationResponse2002$outboundSchema.parse(
      postV2LogsQueryConfigurationResponse2002,
    ),
  );
}

export function postV2LogsQueryConfigurationResponse2002FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryConfigurationResponse2002,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryConfigurationResponse2002$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryConfigurationResponse2002' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyItemsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyItemsType
  > = z.nativeEnum(
    PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyItemsType,
  );

/** @internal */
export const PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyItemsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyItemsType
  > =
    PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyItemsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyItemsType$ {
  /** @deprecated use `PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyItemsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyItemsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyItemsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyItemsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryConfigurationResponse2001$inboundSchema: z.ZodType<
  PostV2LogsQueryConfigurationResponse2001,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyItemsType$inboundSchema,
});

/** @internal */
export type PostV2LogsQueryConfigurationResponse2001$Outbound = {
  type: string;
};

/** @internal */
export const PostV2LogsQueryConfigurationResponse2001$outboundSchema: z.ZodType<
  PostV2LogsQueryConfigurationResponse2001$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryConfigurationResponse2001
> = z.object({
  type:
    PostV2LogsQueryConfigurationResponse200ApplicationJSONResponseBodyItemsType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryConfigurationResponse2001$ {
  /** @deprecated use `PostV2LogsQueryConfigurationResponse2001$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryConfigurationResponse2001$inboundSchema;
  /** @deprecated use `PostV2LogsQueryConfigurationResponse2001$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryConfigurationResponse2001$outboundSchema;
  /** @deprecated use `PostV2LogsQueryConfigurationResponse2001$Outbound` instead. */
  export type Outbound = PostV2LogsQueryConfigurationResponse2001$Outbound;
}

export function postV2LogsQueryConfigurationResponse2001ToJSON(
  postV2LogsQueryConfigurationResponse2001:
    PostV2LogsQueryConfigurationResponse2001,
): string {
  return JSON.stringify(
    PostV2LogsQueryConfigurationResponse2001$outboundSchema.parse(
      postV2LogsQueryConfigurationResponse2001,
    ),
  );
}

export function postV2LogsQueryConfigurationResponse2001FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryConfigurationResponse2001,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryConfigurationResponse2001$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryConfigurationResponse2001' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseConfiguration$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseConfiguration,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQueryConfigurationResponse2001$inboundSchema),
  z.lazy(() => PostV2LogsQueryConfigurationResponse2002$inboundSchema),
]);

/** @internal */
export type PostV2LogsQueryItemsResponseConfiguration$Outbound =
  | PostV2LogsQueryConfigurationResponse2001$Outbound
  | PostV2LogsQueryConfigurationResponse2002$Outbound;

/** @internal */
export const PostV2LogsQueryItemsResponseConfiguration$outboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsResponseConfiguration$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryItemsResponseConfiguration
  > = z.union([
    z.lazy(() => PostV2LogsQueryConfigurationResponse2001$outboundSchema),
    z.lazy(() => PostV2LogsQueryConfigurationResponse2002$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseConfiguration$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseConfiguration$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseConfiguration$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseConfiguration$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseConfiguration$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseConfiguration$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseConfiguration$Outbound;
}

export function postV2LogsQueryItemsResponseConfigurationToJSON(
  postV2LogsQueryItemsResponseConfiguration:
    PostV2LogsQueryItemsResponseConfiguration,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseConfiguration$outboundSchema.parse(
      postV2LogsQueryItemsResponseConfiguration,
    ),
  );
}

export function postV2LogsQueryItemsResponseConfigurationFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryItemsResponseConfiguration,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponseConfiguration$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryItemsResponseConfiguration' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseKnowledgeBases$inboundSchema:
  z.ZodType<PostV2LogsQueryItemsResponseKnowledgeBases, z.ZodTypeDef, unknown> =
    z.object({
      knowledge_id: z.string(),
      configuration: z.union([
        z.lazy(() => PostV2LogsQueryConfigurationResponse2001$inboundSchema),
        z.lazy(() => PostV2LogsQueryConfigurationResponse2002$inboundSchema),
      ]),
    }).transform((v) => {
      return remap$(v, {
        "knowledge_id": "knowledgeId",
      });
    });

/** @internal */
export type PostV2LogsQueryItemsResponseKnowledgeBases$Outbound = {
  knowledge_id: string;
  configuration:
    | PostV2LogsQueryConfigurationResponse2001$Outbound
    | PostV2LogsQueryConfigurationResponse2002$Outbound;
};

/** @internal */
export const PostV2LogsQueryItemsResponseKnowledgeBases$outboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsResponseKnowledgeBases$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryItemsResponseKnowledgeBases
  > = z.object({
    knowledgeId: z.string(),
    configuration: z.union([
      z.lazy(() => PostV2LogsQueryConfigurationResponse2001$outboundSchema),
      z.lazy(() => PostV2LogsQueryConfigurationResponse2002$outboundSchema),
    ]),
  }).transform((v) => {
    return remap$(v, {
      knowledgeId: "knowledge_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseKnowledgeBases$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseKnowledgeBases$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseKnowledgeBases$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseKnowledgeBases$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseKnowledgeBases$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseKnowledgeBases$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseKnowledgeBases$Outbound;
}

export function postV2LogsQueryItemsResponseKnowledgeBasesToJSON(
  postV2LogsQueryItemsResponseKnowledgeBases:
    PostV2LogsQueryItemsResponseKnowledgeBases,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseKnowledgeBases$outboundSchema.parse(
      postV2LogsQueryItemsResponseKnowledgeBases,
    ),
  );
}

export function postV2LogsQueryItemsResponseKnowledgeBasesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryItemsResponseKnowledgeBases,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponseKnowledgeBases$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryItemsResponseKnowledgeBases' from JSON`,
  );
}

/** @internal */
export const ItemsType$inboundSchema: z.ZodNativeEnum<typeof ItemsType> = z
  .nativeEnum(ItemsType);

/** @internal */
export const ItemsType$outboundSchema: z.ZodNativeEnum<typeof ItemsType> =
  ItemsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsType$ {
  /** @deprecated use `ItemsType$inboundSchema` instead. */
  export const inboundSchema = ItemsType$inboundSchema;
  /** @deprecated use `ItemsType$outboundSchema` instead. */
  export const outboundSchema = ItemsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody2Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody2Type
  > = z.nativeEnum(
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody2Type,
  );

/** @internal */
export const PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody2Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody2Type
  > =
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody2Type$ {
  /** @deprecated use `PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody2Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody2Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody2Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody2Type$outboundSchema;
}

/** @internal */
export const ItemsParameters$inboundSchema: z.ZodType<
  ItemsParameters,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody2Type$inboundSchema,
  properties: z.record(z.any()),
  required: z.array(z.string()).optional(),
  additionalProperties: z.boolean().optional(),
});

/** @internal */
export type ItemsParameters$Outbound = {
  type: string;
  properties: { [k: string]: any };
  required?: Array<string> | undefined;
  additionalProperties?: boolean | undefined;
};

/** @internal */
export const ItemsParameters$outboundSchema: z.ZodType<
  ItemsParameters$Outbound,
  z.ZodTypeDef,
  ItemsParameters
> = z.object({
  type:
    PostV2LogsQueryItemsResponse200ApplicationJSONResponseBody2Type$outboundSchema,
  properties: z.record(z.any()),
  required: z.array(z.string()).optional(),
  additionalProperties: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsParameters$ {
  /** @deprecated use `ItemsParameters$inboundSchema` instead. */
  export const inboundSchema = ItemsParameters$inboundSchema;
  /** @deprecated use `ItemsParameters$outboundSchema` instead. */
  export const outboundSchema = ItemsParameters$outboundSchema;
  /** @deprecated use `ItemsParameters$Outbound` instead. */
  export type Outbound = ItemsParameters$Outbound;
}

export function itemsParametersToJSON(
  itemsParameters: ItemsParameters,
): string {
  return JSON.stringify(ItemsParameters$outboundSchema.parse(itemsParameters));
}

export function itemsParametersFromJSON(
  jsonString: string,
): SafeParseResult<ItemsParameters, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsParameters$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsParameters' from JSON`,
  );
}

/** @internal */
export const ItemsFunction$inboundSchema: z.ZodType<
  ItemsFunction,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  description: z.string().optional(),
  strict: z.boolean().optional(),
  parameters: z.lazy(() => ItemsParameters$inboundSchema),
});

/** @internal */
export type ItemsFunction$Outbound = {
  name: string;
  description?: string | undefined;
  strict?: boolean | undefined;
  parameters: ItemsParameters$Outbound;
};

/** @internal */
export const ItemsFunction$outboundSchema: z.ZodType<
  ItemsFunction$Outbound,
  z.ZodTypeDef,
  ItemsFunction
> = z.object({
  name: z.string(),
  description: z.string().optional(),
  strict: z.boolean().optional(),
  parameters: z.lazy(() => ItemsParameters$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsFunction$ {
  /** @deprecated use `ItemsFunction$inboundSchema` instead. */
  export const inboundSchema = ItemsFunction$inboundSchema;
  /** @deprecated use `ItemsFunction$outboundSchema` instead. */
  export const outboundSchema = ItemsFunction$outboundSchema;
  /** @deprecated use `ItemsFunction$Outbound` instead. */
  export type Outbound = ItemsFunction$Outbound;
}

export function itemsFunctionToJSON(itemsFunction: ItemsFunction): string {
  return JSON.stringify(ItemsFunction$outboundSchema.parse(itemsFunction));
}

export function itemsFunctionFromJSON(
  jsonString: string,
): SafeParseResult<ItemsFunction, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsFunction$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsFunction' from JSON`,
  );
}

/** @internal */
export const ItemsTools$inboundSchema: z.ZodType<
  ItemsTools,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: ItemsType$inboundSchema,
  function: z.lazy(() => ItemsFunction$inboundSchema),
});

/** @internal */
export type ItemsTools$Outbound = {
  type: string;
  function: ItemsFunction$Outbound;
};

/** @internal */
export const ItemsTools$outboundSchema: z.ZodType<
  ItemsTools$Outbound,
  z.ZodTypeDef,
  ItemsTools
> = z.object({
  type: ItemsType$outboundSchema,
  function: z.lazy(() => ItemsFunction$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsTools$ {
  /** @deprecated use `ItemsTools$inboundSchema` instead. */
  export const inboundSchema = ItemsTools$inboundSchema;
  /** @deprecated use `ItemsTools$outboundSchema` instead. */
  export const outboundSchema = ItemsTools$outboundSchema;
  /** @deprecated use `ItemsTools$Outbound` instead. */
  export type Outbound = ItemsTools$Outbound;
}

export function itemsToolsToJSON(itemsTools: ItemsTools): string {
  return JSON.stringify(ItemsTools$outboundSchema.parse(itemsTools));
}

export function itemsToolsFromJSON(
  jsonString: string,
): SafeParseResult<ItemsTools, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsTools$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsTools' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyType
  > =
    PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponseModelType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponseModelType> = z
    .nativeEnum(PostV2LogsQueryCacheConfigResponseModelType);

/** @internal */
export const PostV2LogsQueryCacheConfigResponseModelType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponseModelType> =
    PostV2LogsQueryCacheConfigResponseModelType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponseModelType$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponseModelType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponseModelType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponseModelType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponseModelType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200Format$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponse200Format> = z
    .nativeEnum(PostV2LogsQueryCacheConfigResponse200Format);

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200Format$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponse200Format> =
    PostV2LogsQueryCacheConfigResponse200Format$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponse200Format$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200Format$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponse200Format$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200Format$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponse200Format$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponseQuality$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponseQuality> = z
    .nativeEnum(PostV2LogsQueryCacheConfigResponseQuality);

/** @internal */
export const PostV2LogsQueryCacheConfigResponseQuality$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponseQuality> =
    PostV2LogsQueryCacheConfigResponseQuality$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponseQuality$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponseQuality$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponseQuality$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponseQuality$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponseQuality$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataCacheConfigType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataCacheConfigType
  > = z.nativeEnum(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataCacheConfigType,
  );

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataCacheConfigType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataCacheConfigType
  > =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataCacheConfigType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataCacheConfigType$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataCacheConfigType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataCacheConfigType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataCacheConfigType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataCacheConfigType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22$inboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataCacheConfigType$inboundSchema,
  });

/** @internal */
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22$Outbound =
  {
    type: string;
  };

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataCacheConfigType$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22$Outbound;
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22ToJSON(
  postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22$outboundSchema
      .parse(
        postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22,
      ),
  );
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataType
  > = z.nativeEnum(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataType,
  );

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataType
  > =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataType$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema$inboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/** @internal */
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema$Outbound =
  {
    name: string;
    strict: boolean;
    schema: { [k: string]: any };
  };

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema$Outbound;
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchemaToJSON(
  postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema$outboundSchema
      .parse(
        postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema,
      ),
  );
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchemaFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21$inboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataType$inboundSchema,
    json_schema: z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "json_schema": "jsonSchema",
    });
  });

/** @internal */
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21$Outbound =
  {
    type: string;
    json_schema:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema$Outbound;
  };

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataMetadataType$outboundSchema,
    jsonSchema: z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2JSONSchema$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      jsonSchema: "json_schema",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21$Outbound;
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21ToJSON(
  postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21$outboundSchema
      .parse(
        postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21,
      ),
  );
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponseResponseFormat$inboundSchema:
  z.ZodType<
    PostV2LogsQueryCacheConfigResponseResponseFormat,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryCacheConfigResponseResponseFormat$Outbound =
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22$Outbound
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21$Outbound;

/** @internal */
export const PostV2LogsQueryCacheConfigResponseResponseFormat$outboundSchema:
  z.ZodType<
    PostV2LogsQueryCacheConfigResponseResponseFormat$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryCacheConfigResponseResponseFormat
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponseResponseFormat$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponseResponseFormat$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponseResponseFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponseResponseFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponseResponseFormat$outboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponseResponseFormat$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryCacheConfigResponseResponseFormat$Outbound;
}

export function postV2LogsQueryCacheConfigResponseResponseFormatToJSON(
  postV2LogsQueryCacheConfigResponseResponseFormat:
    PostV2LogsQueryCacheConfigResponseResponseFormat,
): string {
  return JSON.stringify(
    PostV2LogsQueryCacheConfigResponseResponseFormat$outboundSchema.parse(
      postV2LogsQueryCacheConfigResponseResponseFormat,
    ),
  );
}

export function postV2LogsQueryCacheConfigResponseResponseFormatFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryCacheConfigResponseResponseFormat,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryCacheConfigResponseResponseFormat$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryCacheConfigResponseResponseFormat' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponsePhotoRealVersion$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponsePhotoRealVersion> = z
    .nativeEnum(PostV2LogsQueryCacheConfigResponsePhotoRealVersion);

/** @internal */
export const PostV2LogsQueryCacheConfigResponsePhotoRealVersion$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponsePhotoRealVersion> =
    PostV2LogsQueryCacheConfigResponsePhotoRealVersion$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponsePhotoRealVersion$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponsePhotoRealVersion$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponsePhotoRealVersion$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponsePhotoRealVersion$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponsePhotoRealVersion$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponseEncodingFormat$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponseEncodingFormat> = z
    .nativeEnum(PostV2LogsQueryCacheConfigResponseEncodingFormat);

/** @internal */
export const PostV2LogsQueryCacheConfigResponseEncodingFormat$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponseEncodingFormat> =
    PostV2LogsQueryCacheConfigResponseEncodingFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponseEncodingFormat$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponseEncodingFormat$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponseEncodingFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponseEncodingFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponseEncodingFormat$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponseModelParameters$inboundSchema:
  z.ZodType<
    PostV2LogsQueryCacheConfigResponseModelParameters,
    z.ZodTypeDef,
    unknown
  > = z.object({
    temperature: z.number().optional(),
    maxTokens: z.number().optional(),
    topK: z.number().optional(),
    topP: z.number().optional(),
    frequencyPenalty: z.number().optional(),
    presencePenalty: z.number().optional(),
    numImages: z.number().optional(),
    seed: z.number().optional(),
    format: PostV2LogsQueryCacheConfigResponse200Format$inboundSchema
      .optional(),
    dimensions: z.string().optional(),
    quality: PostV2LogsQueryCacheConfigResponseQuality$inboundSchema.optional(),
    style: z.string().optional(),
    responseFormat: z.nullable(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21$inboundSchema
        ),
      ]),
    ).optional(),
    photoRealVersion:
      PostV2LogsQueryCacheConfigResponsePhotoRealVersion$inboundSchema
        .optional(),
    encoding_format:
      PostV2LogsQueryCacheConfigResponseEncodingFormat$inboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      "encoding_format": "encodingFormat",
    });
  });

/** @internal */
export type PostV2LogsQueryCacheConfigResponseModelParameters$Outbound = {
  temperature?: number | undefined;
  maxTokens?: number | undefined;
  topK?: number | undefined;
  topP?: number | undefined;
  frequencyPenalty?: number | undefined;
  presencePenalty?: number | undefined;
  numImages?: number | undefined;
  seed?: number | undefined;
  format?: string | undefined;
  dimensions?: string | undefined;
  quality?: string | undefined;
  style?: string | undefined;
  responseFormat?:
    | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22$Outbound
    | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21$Outbound
    | null
    | undefined;
  photoRealVersion?: string | undefined;
  encoding_format?: string | undefined;
};

/** @internal */
export const PostV2LogsQueryCacheConfigResponseModelParameters$outboundSchema:
  z.ZodType<
    PostV2LogsQueryCacheConfigResponseModelParameters$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryCacheConfigResponseModelParameters
  > = z.object({
    temperature: z.number().optional(),
    maxTokens: z.number().optional(),
    topK: z.number().optional(),
    topP: z.number().optional(),
    frequencyPenalty: z.number().optional(),
    presencePenalty: z.number().optional(),
    numImages: z.number().optional(),
    seed: z.number().optional(),
    format: PostV2LogsQueryCacheConfigResponse200Format$outboundSchema
      .optional(),
    dimensions: z.string().optional(),
    quality: PostV2LogsQueryCacheConfigResponseQuality$outboundSchema
      .optional(),
    style: z.string().optional(),
    responseFormat: z.nullable(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems22$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems21$outboundSchema
        ),
      ]),
    ).optional(),
    photoRealVersion:
      PostV2LogsQueryCacheConfigResponsePhotoRealVersion$outboundSchema
        .optional(),
    encodingFormat:
      PostV2LogsQueryCacheConfigResponseEncodingFormat$outboundSchema
        .optional(),
  }).transform((v) => {
    return remap$(v, {
      encodingFormat: "encoding_format",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponseModelParameters$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponseModelParameters$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponseModelParameters$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponseModelParameters$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponseModelParameters$outboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponseModelParameters$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryCacheConfigResponseModelParameters$Outbound;
}

export function postV2LogsQueryCacheConfigResponseModelParametersToJSON(
  postV2LogsQueryCacheConfigResponseModelParameters:
    PostV2LogsQueryCacheConfigResponseModelParameters,
): string {
  return JSON.stringify(
    PostV2LogsQueryCacheConfigResponseModelParameters$outboundSchema.parse(
      postV2LogsQueryCacheConfigResponseModelParameters,
    ),
  );
}

export function postV2LogsQueryCacheConfigResponseModelParametersFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryCacheConfigResponseModelParameters,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryCacheConfigResponseModelParameters$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryCacheConfigResponseModelParameters' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponseProvider$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponseProvider> = z
    .nativeEnum(PostV2LogsQueryCacheConfigResponseProvider);

/** @internal */
export const PostV2LogsQueryCacheConfigResponseProvider$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponseProvider> =
    PostV2LogsQueryCacheConfigResponseProvider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponseProvider$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponseProvider$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponseProvider$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponseProvider$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponseProvider$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200ModelConfig$inboundSchema:
  z.ZodType<
    PostV2LogsQueryCacheConfigResponse200ModelConfig,
    z.ZodTypeDef,
    unknown
  > = z.object({
    model: z.string(),
    model_db_id: z.string(),
    model_type: PostV2LogsQueryCacheConfigResponseModelType$inboundSchema,
    model_parameters: z.lazy(() =>
      PostV2LogsQueryCacheConfigResponseModelParameters$inboundSchema
    ),
    provider: PostV2LogsQueryCacheConfigResponseProvider$inboundSchema,
    integration_id: z.nullable(z.string()).optional(),
    version: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      "model_db_id": "modelDbId",
      "model_type": "modelType",
      "model_parameters": "modelParameters",
      "integration_id": "integrationId",
    });
  });

/** @internal */
export type PostV2LogsQueryCacheConfigResponse200ModelConfig$Outbound = {
  model: string;
  model_db_id: string;
  model_type: string;
  model_parameters: PostV2LogsQueryCacheConfigResponseModelParameters$Outbound;
  provider: string;
  integration_id?: string | null | undefined;
  version?: string | undefined;
};

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200ModelConfig$outboundSchema:
  z.ZodType<
    PostV2LogsQueryCacheConfigResponse200ModelConfig$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryCacheConfigResponse200ModelConfig
  > = z.object({
    model: z.string(),
    modelDbId: z.string(),
    modelType: PostV2LogsQueryCacheConfigResponseModelType$outboundSchema,
    modelParameters: z.lazy(() =>
      PostV2LogsQueryCacheConfigResponseModelParameters$outboundSchema
    ),
    provider: PostV2LogsQueryCacheConfigResponseProvider$outboundSchema,
    integrationId: z.nullable(z.string()).optional(),
    version: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      modelDbId: "model_db_id",
      modelType: "model_type",
      modelParameters: "model_parameters",
      integrationId: "integration_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponse200ModelConfig$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200ModelConfig$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponse200ModelConfig$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200ModelConfig$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponse200ModelConfig$outboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200ModelConfig$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryCacheConfigResponse200ModelConfig$Outbound;
}

export function postV2LogsQueryCacheConfigResponse200ModelConfigToJSON(
  postV2LogsQueryCacheConfigResponse200ModelConfig:
    PostV2LogsQueryCacheConfigResponse200ModelConfig,
): string {
  return JSON.stringify(
    PostV2LogsQueryCacheConfigResponse200ModelConfig$outboundSchema.parse(
      postV2LogsQueryCacheConfigResponse200ModelConfig,
    ),
  );
}

export function postV2LogsQueryCacheConfigResponse200ModelConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryCacheConfigResponse200ModelConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryCacheConfigResponse200ModelConfig$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryCacheConfigResponse200ModelConfig' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponse2$inboundSchema: z.ZodType<
  PostV2LogsQueryCacheConfigResponse2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyType$inboundSchema,
  model_config: z.lazy(() =>
    PostV2LogsQueryCacheConfigResponse200ModelConfig$inboundSchema
  ),
  ttl: z.number().default(0),
  similarity_score_threshold: z.number().default(0),
}).transform((v) => {
  return remap$(v, {
    "model_config": "modelConfig",
    "similarity_score_threshold": "similarityScoreThreshold",
  });
});

/** @internal */
export type PostV2LogsQueryCacheConfigResponse2$Outbound = {
  type: string;
  model_config: PostV2LogsQueryCacheConfigResponse200ModelConfig$Outbound;
  ttl: number;
  similarity_score_threshold: number;
};

/** @internal */
export const PostV2LogsQueryCacheConfigResponse2$outboundSchema: z.ZodType<
  PostV2LogsQueryCacheConfigResponse2$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryCacheConfigResponse2
> = z.object({
  type:
    PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyType$outboundSchema,
  modelConfig: z.lazy(() =>
    PostV2LogsQueryCacheConfigResponse200ModelConfig$outboundSchema
  ),
  ttl: z.number().default(0),
  similarityScoreThreshold: z.number().default(0),
}).transform((v) => {
  return remap$(v, {
    modelConfig: "model_config",
    similarityScoreThreshold: "similarity_score_threshold",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponse2$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponse2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponse2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse2$Outbound` instead. */
  export type Outbound = PostV2LogsQueryCacheConfigResponse2$Outbound;
}

export function postV2LogsQueryCacheConfigResponse2ToJSON(
  postV2LogsQueryCacheConfigResponse2: PostV2LogsQueryCacheConfigResponse2,
): string {
  return JSON.stringify(
    PostV2LogsQueryCacheConfigResponse2$outboundSchema.parse(
      postV2LogsQueryCacheConfigResponse2,
    ),
  );
}

export function postV2LogsQueryCacheConfigResponse2FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryCacheConfigResponse2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryCacheConfigResponse2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryCacheConfigResponse2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryCacheConfigResponse200ApplicationJSONType
  > = z.nativeEnum(PostV2LogsQueryCacheConfigResponse200ApplicationJSONType);

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryCacheConfigResponse200ApplicationJSONType
  > = PostV2LogsQueryCacheConfigResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponse200ApplicationJSONType$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponse1$inboundSchema: z.ZodType<
  PostV2LogsQueryCacheConfigResponse1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PostV2LogsQueryCacheConfigResponse200ApplicationJSONType$inboundSchema,
  ttl: z.number().default(0),
});

/** @internal */
export type PostV2LogsQueryCacheConfigResponse1$Outbound = {
  type: string;
  ttl: number;
};

/** @internal */
export const PostV2LogsQueryCacheConfigResponse1$outboundSchema: z.ZodType<
  PostV2LogsQueryCacheConfigResponse1$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryCacheConfigResponse1
> = z.object({
  type: PostV2LogsQueryCacheConfigResponse200ApplicationJSONType$outboundSchema,
  ttl: z.number().default(0),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponse1$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponse1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponse1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse1$Outbound` instead. */
  export type Outbound = PostV2LogsQueryCacheConfigResponse1$Outbound;
}

export function postV2LogsQueryCacheConfigResponse1ToJSON(
  postV2LogsQueryCacheConfigResponse1: PostV2LogsQueryCacheConfigResponse1,
): string {
  return JSON.stringify(
    PostV2LogsQueryCacheConfigResponse1$outboundSchema.parse(
      postV2LogsQueryCacheConfigResponse1,
    ),
  );
}

export function postV2LogsQueryCacheConfigResponse1FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryCacheConfigResponse1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryCacheConfigResponse1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryCacheConfigResponse1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsCacheConfig$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsCacheConfig,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQueryCacheConfigResponse1$inboundSchema),
  z.lazy(() => PostV2LogsQueryCacheConfigResponse2$inboundSchema),
]);

/** @internal */
export type PostV2LogsQueryItemsCacheConfig$Outbound =
  | PostV2LogsQueryCacheConfigResponse1$Outbound
  | PostV2LogsQueryCacheConfigResponse2$Outbound;

/** @internal */
export const PostV2LogsQueryItemsCacheConfig$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsCacheConfig$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsCacheConfig
> = z.union([
  z.lazy(() => PostV2LogsQueryCacheConfigResponse1$outboundSchema),
  z.lazy(() => PostV2LogsQueryCacheConfigResponse2$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsCacheConfig$ {
  /** @deprecated use `PostV2LogsQueryItemsCacheConfig$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsCacheConfig$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsCacheConfig$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsCacheConfig$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsCacheConfig$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsCacheConfig$Outbound;
}

export function postV2LogsQueryItemsCacheConfigToJSON(
  postV2LogsQueryItemsCacheConfig: PostV2LogsQueryItemsCacheConfig,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsCacheConfig$outboundSchema.parse(
      postV2LogsQueryItemsCacheConfig,
    ),
  );
}

export function postV2LogsQueryItemsCacheConfigFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsCacheConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsCacheConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsCacheConfig' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvaluatorsResponse200ApplicationJSONConfigType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvaluatorsResponse200ApplicationJSONConfigType
  > = z.nativeEnum(
    PostV2LogsQueryEvaluatorsResponse200ApplicationJSONConfigType,
  );

/** @internal */
export const PostV2LogsQueryEvaluatorsResponse200ApplicationJSONConfigType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvaluatorsResponse200ApplicationJSONConfigType
  > =
    PostV2LogsQueryEvaluatorsResponse200ApplicationJSONConfigType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvaluatorsResponse200ApplicationJSONConfigType$ {
  /** @deprecated use `PostV2LogsQueryEvaluatorsResponse200ApplicationJSONConfigType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvaluatorsResponse200ApplicationJSONConfigType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvaluatorsResponse200ApplicationJSONConfigType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvaluatorsResponse200ApplicationJSONConfigType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvaluatorsType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvaluatorsType
> = z.nativeEnum(PostV2LogsQueryEvaluatorsType);

/** @internal */
export const PostV2LogsQueryEvaluatorsType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvaluatorsType
> = PostV2LogsQueryEvaluatorsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvaluatorsType$ {
  /** @deprecated use `PostV2LogsQueryEvaluatorsType$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvaluatorsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvaluatorsType$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvaluatorsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvaluatorsResponse2$inboundSchema: z.ZodType<
  PostV2LogsQueryEvaluatorsResponse2,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  config_type:
    PostV2LogsQueryEvaluatorsResponse200ApplicationJSONConfigType$inboundSchema,
  evaluator_id: z.string(),
  enabled: z.boolean().default(true),
  type: PostV2LogsQueryEvaluatorsType$inboundSchema,
  sample_rate: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "config_type": "configType",
    "evaluator_id": "evaluatorId",
    "sample_rate": "sampleRate",
  });
});

/** @internal */
export type PostV2LogsQueryEvaluatorsResponse2$Outbound = {
  _id: string;
  config_type: string;
  evaluator_id: string;
  enabled: boolean;
  type: string;
  sample_rate?: number | undefined;
};

/** @internal */
export const PostV2LogsQueryEvaluatorsResponse2$outboundSchema: z.ZodType<
  PostV2LogsQueryEvaluatorsResponse2$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvaluatorsResponse2
> = z.object({
  id: z.string(),
  configType:
    PostV2LogsQueryEvaluatorsResponse200ApplicationJSONConfigType$outboundSchema,
  evaluatorId: z.string(),
  enabled: z.boolean().default(true),
  type: PostV2LogsQueryEvaluatorsType$outboundSchema,
  sampleRate: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    configType: "config_type",
    evaluatorId: "evaluator_id",
    sampleRate: "sample_rate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvaluatorsResponse2$ {
  /** @deprecated use `PostV2LogsQueryEvaluatorsResponse2$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvaluatorsResponse2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvaluatorsResponse2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvaluatorsResponse2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvaluatorsResponse2$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvaluatorsResponse2$Outbound;
}

export function postV2LogsQueryEvaluatorsResponse2ToJSON(
  postV2LogsQueryEvaluatorsResponse2: PostV2LogsQueryEvaluatorsResponse2,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvaluatorsResponse2$outboundSchema.parse(
      postV2LogsQueryEvaluatorsResponse2,
    ),
  );
}

export function postV2LogsQueryEvaluatorsResponse2FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvaluatorsResponse2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvaluatorsResponse2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvaluatorsResponse2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvaluatorsResponse200ConfigType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvaluatorsResponse200ConfigType> = z
    .nativeEnum(PostV2LogsQueryEvaluatorsResponse200ConfigType);

/** @internal */
export const PostV2LogsQueryEvaluatorsResponse200ConfigType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvaluatorsResponse200ConfigType> =
    PostV2LogsQueryEvaluatorsResponse200ConfigType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvaluatorsResponse200ConfigType$ {
  /** @deprecated use `PostV2LogsQueryEvaluatorsResponse200ConfigType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvaluatorsResponse200ConfigType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvaluatorsResponse200ConfigType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvaluatorsResponse200ConfigType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvaluatorsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvaluatorsResponse200ApplicationJSONType
  > = z.nativeEnum(PostV2LogsQueryEvaluatorsResponse200ApplicationJSONType);

/** @internal */
export const PostV2LogsQueryEvaluatorsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvaluatorsResponse200ApplicationJSONType
  > = PostV2LogsQueryEvaluatorsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvaluatorsResponse200ApplicationJSONType$ {
  /** @deprecated use `PostV2LogsQueryEvaluatorsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvaluatorsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvaluatorsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvaluatorsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvaluatorsResponse1$inboundSchema: z.ZodType<
  PostV2LogsQueryEvaluatorsResponse1,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  config_type: PostV2LogsQueryEvaluatorsResponse200ConfigType$inboundSchema,
  evaluator_id: z.string(),
  enabled: z.boolean().default(true),
  type: PostV2LogsQueryEvaluatorsResponse200ApplicationJSONType$inboundSchema,
  sample_rate: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "config_type": "configType",
    "evaluator_id": "evaluatorId",
    "sample_rate": "sampleRate",
  });
});

/** @internal */
export type PostV2LogsQueryEvaluatorsResponse1$Outbound = {
  _id: string;
  config_type: string;
  evaluator_id: string;
  enabled: boolean;
  type: string;
  sample_rate?: number | undefined;
};

/** @internal */
export const PostV2LogsQueryEvaluatorsResponse1$outboundSchema: z.ZodType<
  PostV2LogsQueryEvaluatorsResponse1$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvaluatorsResponse1
> = z.object({
  id: z.string(),
  configType: PostV2LogsQueryEvaluatorsResponse200ConfigType$outboundSchema,
  evaluatorId: z.string(),
  enabled: z.boolean().default(true),
  type: PostV2LogsQueryEvaluatorsResponse200ApplicationJSONType$outboundSchema,
  sampleRate: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    configType: "config_type",
    evaluatorId: "evaluator_id",
    sampleRate: "sample_rate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvaluatorsResponse1$ {
  /** @deprecated use `PostV2LogsQueryEvaluatorsResponse1$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvaluatorsResponse1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvaluatorsResponse1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvaluatorsResponse1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvaluatorsResponse1$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvaluatorsResponse1$Outbound;
}

export function postV2LogsQueryEvaluatorsResponse1ToJSON(
  postV2LogsQueryEvaluatorsResponse1: PostV2LogsQueryEvaluatorsResponse1,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvaluatorsResponse1$outboundSchema.parse(
      postV2LogsQueryEvaluatorsResponse1,
    ),
  );
}

export function postV2LogsQueryEvaluatorsResponse1FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvaluatorsResponse1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvaluatorsResponse1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvaluatorsResponse1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsEvaluators$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsEvaluators,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQueryEvaluatorsResponse1$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvaluatorsResponse2$inboundSchema),
]);

/** @internal */
export type PostV2LogsQueryItemsEvaluators$Outbound =
  | PostV2LogsQueryEvaluatorsResponse1$Outbound
  | PostV2LogsQueryEvaluatorsResponse2$Outbound;

/** @internal */
export const PostV2LogsQueryItemsEvaluators$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsEvaluators$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsEvaluators
> = z.union([
  z.lazy(() => PostV2LogsQueryEvaluatorsResponse1$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvaluatorsResponse2$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsEvaluators$ {
  /** @deprecated use `PostV2LogsQueryItemsEvaluators$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsEvaluators$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsEvaluators$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsEvaluators$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsEvaluators$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsEvaluators$Outbound;
}

export function postV2LogsQueryItemsEvaluatorsToJSON(
  postV2LogsQueryItemsEvaluators: PostV2LogsQueryItemsEvaluators,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsEvaluators$outboundSchema.parse(
      postV2LogsQueryItemsEvaluators,
    ),
  );
}

export function postV2LogsQueryItemsEvaluatorsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsEvaluators, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsEvaluators$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsEvaluators' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsGuardrailsBehavior$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsGuardrailsBehavior> = z.nativeEnum(
    PostV2LogsQueryItemsGuardrailsBehavior,
  );

/** @internal */
export const PostV2LogsQueryItemsGuardrailsBehavior$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsGuardrailsBehavior> =
    PostV2LogsQueryItemsGuardrailsBehavior$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsGuardrailsBehavior$ {
  /** @deprecated use `PostV2LogsQueryItemsGuardrailsBehavior$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsGuardrailsBehavior$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsGuardrailsBehavior$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsGuardrailsBehavior$outboundSchema;
}

/** @internal */
export const ItemsMetadata$inboundSchema: z.ZodType<
  ItemsMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({
  output_masking: z.boolean().default(false),
  is_caching_enabled: z.boolean().default(false),
  cache_config: z.nullable(
    z.union([
      z.lazy(() => PostV2LogsQueryCacheConfigResponse1$inboundSchema),
      z.lazy(() => PostV2LogsQueryCacheConfigResponse2$inboundSchema),
    ]),
  ).optional(),
  evaluators: z.array(
    z.union([
      z.lazy(() => PostV2LogsQueryEvaluatorsResponse1$inboundSchema),
      z.lazy(() => PostV2LogsQueryEvaluatorsResponse2$inboundSchema),
    ]),
  ).optional(),
  guardrails_behavior: PostV2LogsQueryItemsGuardrailsBehavior$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "output_masking": "outputMasking",
    "is_caching_enabled": "isCachingEnabled",
    "cache_config": "cacheConfig",
    "guardrails_behavior": "guardrailsBehavior",
  });
});

/** @internal */
export type ItemsMetadata$Outbound = {
  output_masking: boolean;
  is_caching_enabled: boolean;
  cache_config?:
    | PostV2LogsQueryCacheConfigResponse1$Outbound
    | PostV2LogsQueryCacheConfigResponse2$Outbound
    | null
    | undefined;
  evaluators?:
    | Array<
      | PostV2LogsQueryEvaluatorsResponse1$Outbound
      | PostV2LogsQueryEvaluatorsResponse2$Outbound
    >
    | undefined;
  guardrails_behavior?: string | undefined;
};

/** @internal */
export const ItemsMetadata$outboundSchema: z.ZodType<
  ItemsMetadata$Outbound,
  z.ZodTypeDef,
  ItemsMetadata
> = z.object({
  outputMasking: z.boolean().default(false),
  isCachingEnabled: z.boolean().default(false),
  cacheConfig: z.nullable(
    z.union([
      z.lazy(() => PostV2LogsQueryCacheConfigResponse1$outboundSchema),
      z.lazy(() => PostV2LogsQueryCacheConfigResponse2$outboundSchema),
    ]),
  ).optional(),
  evaluators: z.array(
    z.union([
      z.lazy(() => PostV2LogsQueryEvaluatorsResponse1$outboundSchema),
      z.lazy(() => PostV2LogsQueryEvaluatorsResponse2$outboundSchema),
    ]),
  ).optional(),
  guardrailsBehavior: PostV2LogsQueryItemsGuardrailsBehavior$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    outputMasking: "output_masking",
    isCachingEnabled: "is_caching_enabled",
    cacheConfig: "cache_config",
    guardrailsBehavior: "guardrails_behavior",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsMetadata$ {
  /** @deprecated use `ItemsMetadata$inboundSchema` instead. */
  export const inboundSchema = ItemsMetadata$inboundSchema;
  /** @deprecated use `ItemsMetadata$outboundSchema` instead. */
  export const outboundSchema = ItemsMetadata$outboundSchema;
  /** @deprecated use `ItemsMetadata$Outbound` instead. */
  export type Outbound = ItemsMetadata$Outbound;
}

export function itemsMetadataToJSON(itemsMetadata: ItemsMetadata): string {
  return JSON.stringify(ItemsMetadata$outboundSchema.parse(itemsMetadata));
}

export function itemsMetadataFromJSON(
  jsonString: string,
): SafeParseResult<ItemsMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsMetadata' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200Type$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponse200Type> = z
    .nativeEnum(PostV2LogsQueryCacheConfigResponse200Type);

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponse200Type> =
    PostV2LogsQueryCacheConfigResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponse200Type$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponse200Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponse200Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200ModelType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponse200ModelType> = z
    .nativeEnum(PostV2LogsQueryCacheConfigResponse200ModelType);

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200ModelType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponse200ModelType> =
    PostV2LogsQueryCacheConfigResponse200ModelType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponse200ModelType$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200ModelType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponse200ModelType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200ModelType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponse200ModelType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200ApplicationJSONFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryCacheConfigResponse200ApplicationJSONFormat
  > = z.nativeEnum(PostV2LogsQueryCacheConfigResponse200ApplicationJSONFormat);

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200ApplicationJSONFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryCacheConfigResponse200ApplicationJSONFormat
  > = PostV2LogsQueryCacheConfigResponse200ApplicationJSONFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponse200ApplicationJSONFormat$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200ApplicationJSONFormat$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponse200ApplicationJSONFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200ApplicationJSONFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponse200ApplicationJSONFormat$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200Quality$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponse200Quality> = z
    .nativeEnum(PostV2LogsQueryCacheConfigResponse200Quality);

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200Quality$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponse200Quality> =
    PostV2LogsQueryCacheConfigResponse200Quality$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponse200Quality$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200Quality$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponse200Quality$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200Quality$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponse200Quality$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsCacheConfigType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsCacheConfigType
  > = z.nativeEnum(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsCacheConfigType,
  );

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsCacheConfigType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsCacheConfigType
  > =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsCacheConfigType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsCacheConfigType$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsCacheConfigType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsCacheConfigType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsCacheConfigType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsCacheConfigType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsCacheConfigType$inboundSchema,
  });

/** @internal */
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2$Outbound =
  {
    type: string;
  };

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsCacheConfigType$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2$Outbound;
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2ToJSON(
  postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2$outboundSchema
      .parse(
        postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2,
      ),
  );
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsType
  > = z.nativeEnum(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsType,
  );

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsType
  > =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsType$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema$inboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/** @internal */
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema$Outbound =
  {
    name: string;
    strict: boolean;
    schema: { [k: string]: any };
  };

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema$Outbound;
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchemaToJSON(
  postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema$outboundSchema
      .parse(
        postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema,
      ),
  );
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchemaFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsType$inboundSchema,
    json_schema: z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "json_schema": "jsonSchema",
    });
  });

/** @internal */
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1$Outbound =
  {
    type: string;
    json_schema:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema$Outbound;
  };

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataSettingsType$outboundSchema,
    jsonSchema: z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyJSONSchema$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      jsonSchema: "json_schema",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1$Outbound;
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1ToJSON(
  postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1$outboundSchema
      .parse(
        postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1,
      ),
  );
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200ResponseFormat$inboundSchema:
  z.ZodType<
    PostV2LogsQueryCacheConfigResponse200ResponseFormat,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryCacheConfigResponse200ResponseFormat$Outbound =
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2$Outbound
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1$Outbound;

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200ResponseFormat$outboundSchema:
  z.ZodType<
    PostV2LogsQueryCacheConfigResponse200ResponseFormat$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryCacheConfigResponse200ResponseFormat
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponse200ResponseFormat$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200ResponseFormat$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponse200ResponseFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200ResponseFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponse200ResponseFormat$outboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200ResponseFormat$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryCacheConfigResponse200ResponseFormat$Outbound;
}

export function postV2LogsQueryCacheConfigResponse200ResponseFormatToJSON(
  postV2LogsQueryCacheConfigResponse200ResponseFormat:
    PostV2LogsQueryCacheConfigResponse200ResponseFormat,
): string {
  return JSON.stringify(
    PostV2LogsQueryCacheConfigResponse200ResponseFormat$outboundSchema.parse(
      postV2LogsQueryCacheConfigResponse200ResponseFormat,
    ),
  );
}

export function postV2LogsQueryCacheConfigResponse200ResponseFormatFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryCacheConfigResponse200ResponseFormat,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryCacheConfigResponse200ResponseFormat$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryCacheConfigResponse200ResponseFormat' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200PhotoRealVersion$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryCacheConfigResponse200PhotoRealVersion
  > = z.nativeEnum(PostV2LogsQueryCacheConfigResponse200PhotoRealVersion);

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200PhotoRealVersion$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryCacheConfigResponse200PhotoRealVersion
  > = PostV2LogsQueryCacheConfigResponse200PhotoRealVersion$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponse200PhotoRealVersion$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200PhotoRealVersion$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponse200PhotoRealVersion$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200PhotoRealVersion$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponse200PhotoRealVersion$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200EncodingFormat$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponse200EncodingFormat> =
    z.nativeEnum(PostV2LogsQueryCacheConfigResponse200EncodingFormat);

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200EncodingFormat$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponse200EncodingFormat> =
    PostV2LogsQueryCacheConfigResponse200EncodingFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponse200EncodingFormat$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200EncodingFormat$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponse200EncodingFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200EncodingFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponse200EncodingFormat$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200ModelParameters$inboundSchema:
  z.ZodType<
    PostV2LogsQueryCacheConfigResponse200ModelParameters,
    z.ZodTypeDef,
    unknown
  > = z.object({
    temperature: z.number().optional(),
    maxTokens: z.number().optional(),
    topK: z.number().optional(),
    topP: z.number().optional(),
    frequencyPenalty: z.number().optional(),
    presencePenalty: z.number().optional(),
    numImages: z.number().optional(),
    seed: z.number().optional(),
    format:
      PostV2LogsQueryCacheConfigResponse200ApplicationJSONFormat$inboundSchema
        .optional(),
    dimensions: z.string().optional(),
    quality: PostV2LogsQueryCacheConfigResponse200Quality$inboundSchema
      .optional(),
    style: z.string().optional(),
    responseFormat: z.nullable(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1$inboundSchema
        ),
      ]),
    ).optional(),
    photoRealVersion:
      PostV2LogsQueryCacheConfigResponse200PhotoRealVersion$inboundSchema
        .optional(),
    encoding_format:
      PostV2LogsQueryCacheConfigResponse200EncodingFormat$inboundSchema
        .optional(),
  }).transform((v) => {
    return remap$(v, {
      "encoding_format": "encodingFormat",
    });
  });

/** @internal */
export type PostV2LogsQueryCacheConfigResponse200ModelParameters$Outbound = {
  temperature?: number | undefined;
  maxTokens?: number | undefined;
  topK?: number | undefined;
  topP?: number | undefined;
  frequencyPenalty?: number | undefined;
  presencePenalty?: number | undefined;
  numImages?: number | undefined;
  seed?: number | undefined;
  format?: string | undefined;
  dimensions?: string | undefined;
  quality?: string | undefined;
  style?: string | undefined;
  responseFormat?:
    | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2$Outbound
    | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1$Outbound
    | null
    | undefined;
  photoRealVersion?: string | undefined;
  encoding_format?: string | undefined;
};

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200ModelParameters$outboundSchema:
  z.ZodType<
    PostV2LogsQueryCacheConfigResponse200ModelParameters$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryCacheConfigResponse200ModelParameters
  > = z.object({
    temperature: z.number().optional(),
    maxTokens: z.number().optional(),
    topK: z.number().optional(),
    topP: z.number().optional(),
    frequencyPenalty: z.number().optional(),
    presencePenalty: z.number().optional(),
    numImages: z.number().optional(),
    seed: z.number().optional(),
    format:
      PostV2LogsQueryCacheConfigResponse200ApplicationJSONFormat$outboundSchema
        .optional(),
    dimensions: z.string().optional(),
    quality: PostV2LogsQueryCacheConfigResponse200Quality$outboundSchema
      .optional(),
    style: z.string().optional(),
    responseFormat: z.nullable(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody2$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBody1$outboundSchema
        ),
      ]),
    ).optional(),
    photoRealVersion:
      PostV2LogsQueryCacheConfigResponse200PhotoRealVersion$outboundSchema
        .optional(),
    encodingFormat:
      PostV2LogsQueryCacheConfigResponse200EncodingFormat$outboundSchema
        .optional(),
  }).transform((v) => {
    return remap$(v, {
      encodingFormat: "encoding_format",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponse200ModelParameters$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200ModelParameters$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponse200ModelParameters$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200ModelParameters$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponse200ModelParameters$outboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200ModelParameters$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryCacheConfigResponse200ModelParameters$Outbound;
}

export function postV2LogsQueryCacheConfigResponse200ModelParametersToJSON(
  postV2LogsQueryCacheConfigResponse200ModelParameters:
    PostV2LogsQueryCacheConfigResponse200ModelParameters,
): string {
  return JSON.stringify(
    PostV2LogsQueryCacheConfigResponse200ModelParameters$outboundSchema.parse(
      postV2LogsQueryCacheConfigResponse200ModelParameters,
    ),
  );
}

export function postV2LogsQueryCacheConfigResponse200ModelParametersFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryCacheConfigResponse200ModelParameters,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryCacheConfigResponse200ModelParameters$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryCacheConfigResponse200ModelParameters' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200Provider$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponse200Provider> = z
    .nativeEnum(PostV2LogsQueryCacheConfigResponse200Provider);

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200Provider$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponse200Provider> =
    PostV2LogsQueryCacheConfigResponse200Provider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponse200Provider$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200Provider$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponse200Provider$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200Provider$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponse200Provider$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponseModelConfig$inboundSchema:
  z.ZodType<
    PostV2LogsQueryCacheConfigResponseModelConfig,
    z.ZodTypeDef,
    unknown
  > = z.object({
    model: z.string(),
    model_db_id: z.string(),
    model_type: PostV2LogsQueryCacheConfigResponse200ModelType$inboundSchema,
    model_parameters: z.lazy(() =>
      PostV2LogsQueryCacheConfigResponse200ModelParameters$inboundSchema
    ),
    provider: PostV2LogsQueryCacheConfigResponse200Provider$inboundSchema,
    integration_id: z.nullable(z.string()).optional(),
    version: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      "model_db_id": "modelDbId",
      "model_type": "modelType",
      "model_parameters": "modelParameters",
      "integration_id": "integrationId",
    });
  });

/** @internal */
export type PostV2LogsQueryCacheConfigResponseModelConfig$Outbound = {
  model: string;
  model_db_id: string;
  model_type: string;
  model_parameters:
    PostV2LogsQueryCacheConfigResponse200ModelParameters$Outbound;
  provider: string;
  integration_id?: string | null | undefined;
  version?: string | undefined;
};

/** @internal */
export const PostV2LogsQueryCacheConfigResponseModelConfig$outboundSchema:
  z.ZodType<
    PostV2LogsQueryCacheConfigResponseModelConfig$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryCacheConfigResponseModelConfig
  > = z.object({
    model: z.string(),
    modelDbId: z.string(),
    modelType: PostV2LogsQueryCacheConfigResponse200ModelType$outboundSchema,
    modelParameters: z.lazy(() =>
      PostV2LogsQueryCacheConfigResponse200ModelParameters$outboundSchema
    ),
    provider: PostV2LogsQueryCacheConfigResponse200Provider$outboundSchema,
    integrationId: z.nullable(z.string()).optional(),
    version: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      modelDbId: "model_db_id",
      modelType: "model_type",
      modelParameters: "model_parameters",
      integrationId: "integration_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponseModelConfig$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponseModelConfig$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponseModelConfig$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponseModelConfig$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponseModelConfig$outboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponseModelConfig$Outbound` instead. */
  export type Outbound = PostV2LogsQueryCacheConfigResponseModelConfig$Outbound;
}

export function postV2LogsQueryCacheConfigResponseModelConfigToJSON(
  postV2LogsQueryCacheConfigResponseModelConfig:
    PostV2LogsQueryCacheConfigResponseModelConfig,
): string {
  return JSON.stringify(
    PostV2LogsQueryCacheConfigResponseModelConfig$outboundSchema.parse(
      postV2LogsQueryCacheConfigResponseModelConfig,
    ),
  );
}

export function postV2LogsQueryCacheConfigResponseModelConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryCacheConfigResponseModelConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryCacheConfigResponseModelConfig$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryCacheConfigResponseModelConfig' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponse2002$inboundSchema: z.ZodType<
  PostV2LogsQueryCacheConfigResponse2002,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PostV2LogsQueryCacheConfigResponse200Type$inboundSchema,
  model_config: z.lazy(() =>
    PostV2LogsQueryCacheConfigResponseModelConfig$inboundSchema
  ),
  ttl: z.number().default(0),
  similarity_score_threshold: z.number().default(0),
}).transform((v) => {
  return remap$(v, {
    "model_config": "modelConfig",
    "similarity_score_threshold": "similarityScoreThreshold",
  });
});

/** @internal */
export type PostV2LogsQueryCacheConfigResponse2002$Outbound = {
  type: string;
  model_config: PostV2LogsQueryCacheConfigResponseModelConfig$Outbound;
  ttl: number;
  similarity_score_threshold: number;
};

/** @internal */
export const PostV2LogsQueryCacheConfigResponse2002$outboundSchema: z.ZodType<
  PostV2LogsQueryCacheConfigResponse2002$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryCacheConfigResponse2002
> = z.object({
  type: PostV2LogsQueryCacheConfigResponse200Type$outboundSchema,
  modelConfig: z.lazy(() =>
    PostV2LogsQueryCacheConfigResponseModelConfig$outboundSchema
  ),
  ttl: z.number().default(0),
  similarityScoreThreshold: z.number().default(0),
}).transform((v) => {
  return remap$(v, {
    modelConfig: "model_config",
    similarityScoreThreshold: "similarity_score_threshold",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponse2002$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse2002$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponse2002$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse2002$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponse2002$outboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse2002$Outbound` instead. */
  export type Outbound = PostV2LogsQueryCacheConfigResponse2002$Outbound;
}

export function postV2LogsQueryCacheConfigResponse2002ToJSON(
  postV2LogsQueryCacheConfigResponse2002:
    PostV2LogsQueryCacheConfigResponse2002,
): string {
  return JSON.stringify(
    PostV2LogsQueryCacheConfigResponse2002$outboundSchema.parse(
      postV2LogsQueryCacheConfigResponse2002,
    ),
  );
}

export function postV2LogsQueryCacheConfigResponse2002FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryCacheConfigResponse2002, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryCacheConfigResponse2002$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryCacheConfigResponse2002' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyItemsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyItemsType
  > = z.nativeEnum(
    PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyItemsType,
  );

/** @internal */
export const PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyItemsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyItemsType
  > =
    PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyItemsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyItemsType$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyItemsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyItemsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyItemsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyItemsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponse2001$inboundSchema: z.ZodType<
  PostV2LogsQueryCacheConfigResponse2001,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyItemsType$inboundSchema,
  ttl: z.number().default(0),
});

/** @internal */
export type PostV2LogsQueryCacheConfigResponse2001$Outbound = {
  type: string;
  ttl: number;
};

/** @internal */
export const PostV2LogsQueryCacheConfigResponse2001$outboundSchema: z.ZodType<
  PostV2LogsQueryCacheConfigResponse2001$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryCacheConfigResponse2001
> = z.object({
  type:
    PostV2LogsQueryCacheConfigResponse200ApplicationJSONResponseBodyItemsType$outboundSchema,
  ttl: z.number().default(0),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponse2001$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse2001$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponse2001$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse2001$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponse2001$outboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponse2001$Outbound` instead. */
  export type Outbound = PostV2LogsQueryCacheConfigResponse2001$Outbound;
}

export function postV2LogsQueryCacheConfigResponse2001ToJSON(
  postV2LogsQueryCacheConfigResponse2001:
    PostV2LogsQueryCacheConfigResponse2001,
): string {
  return JSON.stringify(
    PostV2LogsQueryCacheConfigResponse2001$outboundSchema.parse(
      postV2LogsQueryCacheConfigResponse2001,
    ),
  );
}

export function postV2LogsQueryCacheConfigResponse2001FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryCacheConfigResponse2001, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryCacheConfigResponse2001$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryCacheConfigResponse2001' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponseCacheConfig$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseCacheConfig,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQueryCacheConfigResponse2001$inboundSchema),
  z.lazy(() => PostV2LogsQueryCacheConfigResponse2002$inboundSchema),
]);

/** @internal */
export type PostV2LogsQueryItemsResponseCacheConfig$Outbound =
  | PostV2LogsQueryCacheConfigResponse2001$Outbound
  | PostV2LogsQueryCacheConfigResponse2002$Outbound;

/** @internal */
export const PostV2LogsQueryItemsResponseCacheConfig$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponseCacheConfig$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponseCacheConfig
> = z.union([
  z.lazy(() => PostV2LogsQueryCacheConfigResponse2001$outboundSchema),
  z.lazy(() => PostV2LogsQueryCacheConfigResponse2002$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponseCacheConfig$ {
  /** @deprecated use `PostV2LogsQueryItemsResponseCacheConfig$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponseCacheConfig$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseCacheConfig$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponseCacheConfig$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponseCacheConfig$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponseCacheConfig$Outbound;
}

export function postV2LogsQueryItemsResponseCacheConfigToJSON(
  postV2LogsQueryItemsResponseCacheConfig:
    PostV2LogsQueryItemsResponseCacheConfig,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponseCacheConfig$outboundSchema.parse(
      postV2LogsQueryItemsResponseCacheConfig,
    ),
  );
}

export function postV2LogsQueryItemsResponseCacheConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryItemsResponseCacheConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponseCacheConfig$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryItemsResponseCacheConfig' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvaluatorsResponseConfigType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvaluatorsResponseConfigType> = z
    .nativeEnum(PostV2LogsQueryEvaluatorsResponseConfigType);

/** @internal */
export const PostV2LogsQueryEvaluatorsResponseConfigType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvaluatorsResponseConfigType> =
    PostV2LogsQueryEvaluatorsResponseConfigType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvaluatorsResponseConfigType$ {
  /** @deprecated use `PostV2LogsQueryEvaluatorsResponseConfigType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvaluatorsResponseConfigType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvaluatorsResponseConfigType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvaluatorsResponseConfigType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvaluatorsResponse200Type$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvaluatorsResponse200Type> = z
    .nativeEnum(PostV2LogsQueryEvaluatorsResponse200Type);

/** @internal */
export const PostV2LogsQueryEvaluatorsResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvaluatorsResponse200Type> =
    PostV2LogsQueryEvaluatorsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvaluatorsResponse200Type$ {
  /** @deprecated use `PostV2LogsQueryEvaluatorsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvaluatorsResponse200Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvaluatorsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvaluatorsResponse200Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvaluators2$inboundSchema: z.ZodType<
  PostV2LogsQueryEvaluators2,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  config_type: PostV2LogsQueryEvaluatorsResponseConfigType$inboundSchema,
  evaluator_id: z.string(),
  enabled: z.boolean().default(true),
  type: PostV2LogsQueryEvaluatorsResponse200Type$inboundSchema,
  sample_rate: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "config_type": "configType",
    "evaluator_id": "evaluatorId",
    "sample_rate": "sampleRate",
  });
});

/** @internal */
export type PostV2LogsQueryEvaluators2$Outbound = {
  _id: string;
  config_type: string;
  evaluator_id: string;
  enabled: boolean;
  type: string;
  sample_rate?: number | undefined;
};

/** @internal */
export const PostV2LogsQueryEvaluators2$outboundSchema: z.ZodType<
  PostV2LogsQueryEvaluators2$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvaluators2
> = z.object({
  id: z.string(),
  configType: PostV2LogsQueryEvaluatorsResponseConfigType$outboundSchema,
  evaluatorId: z.string(),
  enabled: z.boolean().default(true),
  type: PostV2LogsQueryEvaluatorsResponse200Type$outboundSchema,
  sampleRate: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    configType: "config_type",
    evaluatorId: "evaluator_id",
    sampleRate: "sample_rate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvaluators2$ {
  /** @deprecated use `PostV2LogsQueryEvaluators2$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvaluators2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvaluators2$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvaluators2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvaluators2$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvaluators2$Outbound;
}

export function postV2LogsQueryEvaluators2ToJSON(
  postV2LogsQueryEvaluators2: PostV2LogsQueryEvaluators2,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvaluators2$outboundSchema.parse(postV2LogsQueryEvaluators2),
  );
}

export function postV2LogsQueryEvaluators2FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvaluators2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvaluators2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvaluators2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvaluatorsConfigType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvaluatorsConfigType
> = z.nativeEnum(PostV2LogsQueryEvaluatorsConfigType);

/** @internal */
export const PostV2LogsQueryEvaluatorsConfigType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvaluatorsConfigType> =
    PostV2LogsQueryEvaluatorsConfigType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvaluatorsConfigType$ {
  /** @deprecated use `PostV2LogsQueryEvaluatorsConfigType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvaluatorsConfigType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvaluatorsConfigType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvaluatorsConfigType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvaluatorsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvaluatorsResponseType> = z.nativeEnum(
    PostV2LogsQueryEvaluatorsResponseType,
  );

/** @internal */
export const PostV2LogsQueryEvaluatorsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvaluatorsResponseType> =
    PostV2LogsQueryEvaluatorsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvaluatorsResponseType$ {
  /** @deprecated use `PostV2LogsQueryEvaluatorsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvaluatorsResponseType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvaluatorsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvaluatorsResponseType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvaluators1$inboundSchema: z.ZodType<
  PostV2LogsQueryEvaluators1,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  config_type: PostV2LogsQueryEvaluatorsConfigType$inboundSchema,
  evaluator_id: z.string(),
  enabled: z.boolean().default(true),
  type: PostV2LogsQueryEvaluatorsResponseType$inboundSchema,
  sample_rate: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "config_type": "configType",
    "evaluator_id": "evaluatorId",
    "sample_rate": "sampleRate",
  });
});

/** @internal */
export type PostV2LogsQueryEvaluators1$Outbound = {
  _id: string;
  config_type: string;
  evaluator_id: string;
  enabled: boolean;
  type: string;
  sample_rate?: number | undefined;
};

/** @internal */
export const PostV2LogsQueryEvaluators1$outboundSchema: z.ZodType<
  PostV2LogsQueryEvaluators1$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvaluators1
> = z.object({
  id: z.string(),
  configType: PostV2LogsQueryEvaluatorsConfigType$outboundSchema,
  evaluatorId: z.string(),
  enabled: z.boolean().default(true),
  type: PostV2LogsQueryEvaluatorsResponseType$outboundSchema,
  sampleRate: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    configType: "config_type",
    evaluatorId: "evaluator_id",
    sampleRate: "sample_rate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvaluators1$ {
  /** @deprecated use `PostV2LogsQueryEvaluators1$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvaluators1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvaluators1$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvaluators1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvaluators1$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvaluators1$Outbound;
}

export function postV2LogsQueryEvaluators1ToJSON(
  postV2LogsQueryEvaluators1: PostV2LogsQueryEvaluators1,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvaluators1$outboundSchema.parse(postV2LogsQueryEvaluators1),
  );
}

export function postV2LogsQueryEvaluators1FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvaluators1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvaluators1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvaluators1' from JSON`,
  );
}

/** @internal */
export const ItemsEvaluators$inboundSchema: z.ZodType<
  ItemsEvaluators,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQueryEvaluators1$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvaluators2$inboundSchema),
]);

/** @internal */
export type ItemsEvaluators$Outbound =
  | PostV2LogsQueryEvaluators1$Outbound
  | PostV2LogsQueryEvaluators2$Outbound;

/** @internal */
export const ItemsEvaluators$outboundSchema: z.ZodType<
  ItemsEvaluators$Outbound,
  z.ZodTypeDef,
  ItemsEvaluators
> = z.union([
  z.lazy(() => PostV2LogsQueryEvaluators1$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvaluators2$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsEvaluators$ {
  /** @deprecated use `ItemsEvaluators$inboundSchema` instead. */
  export const inboundSchema = ItemsEvaluators$inboundSchema;
  /** @deprecated use `ItemsEvaluators$outboundSchema` instead. */
  export const outboundSchema = ItemsEvaluators$outboundSchema;
  /** @deprecated use `ItemsEvaluators$Outbound` instead. */
  export type Outbound = ItemsEvaluators$Outbound;
}

export function itemsEvaluatorsToJSON(
  itemsEvaluators: ItemsEvaluators,
): string {
  return JSON.stringify(ItemsEvaluators$outboundSchema.parse(itemsEvaluators));
}

export function itemsEvaluatorsFromJSON(
  jsonString: string,
): SafeParseResult<ItemsEvaluators, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsEvaluators$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsEvaluators' from JSON`,
  );
}

/** @internal */
export const ItemsGuardrailsBehavior$inboundSchema: z.ZodNativeEnum<
  typeof ItemsGuardrailsBehavior
> = z.nativeEnum(ItemsGuardrailsBehavior);

/** @internal */
export const ItemsGuardrailsBehavior$outboundSchema: z.ZodNativeEnum<
  typeof ItemsGuardrailsBehavior
> = ItemsGuardrailsBehavior$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsGuardrailsBehavior$ {
  /** @deprecated use `ItemsGuardrailsBehavior$inboundSchema` instead. */
  export const inboundSchema = ItemsGuardrailsBehavior$inboundSchema;
  /** @deprecated use `ItemsGuardrailsBehavior$outboundSchema` instead. */
  export const outboundSchema = ItemsGuardrailsBehavior$outboundSchema;
}

/** @internal */
export const ItemsSettings$inboundSchema: z.ZodType<
  ItemsSettings,
  z.ZodTypeDef,
  unknown
> = z.object({
  output_masking: z.boolean().default(false),
  is_caching_enabled: z.boolean().default(false),
  cache_config: z.nullable(
    z.union([
      z.lazy(() => PostV2LogsQueryCacheConfigResponse2001$inboundSchema),
      z.lazy(() => PostV2LogsQueryCacheConfigResponse2002$inboundSchema),
    ]),
  ).optional(),
  evaluators: z.array(
    z.union([
      z.lazy(() => PostV2LogsQueryEvaluators1$inboundSchema),
      z.lazy(() => PostV2LogsQueryEvaluators2$inboundSchema),
    ]),
  ).optional(),
  guardrails_behavior: ItemsGuardrailsBehavior$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "output_masking": "outputMasking",
    "is_caching_enabled": "isCachingEnabled",
    "cache_config": "cacheConfig",
    "guardrails_behavior": "guardrailsBehavior",
  });
});

/** @internal */
export type ItemsSettings$Outbound = {
  output_masking: boolean;
  is_caching_enabled: boolean;
  cache_config?:
    | PostV2LogsQueryCacheConfigResponse2001$Outbound
    | PostV2LogsQueryCacheConfigResponse2002$Outbound
    | null
    | undefined;
  evaluators?:
    | Array<
      PostV2LogsQueryEvaluators1$Outbound | PostV2LogsQueryEvaluators2$Outbound
    >
    | undefined;
  guardrails_behavior?: string | undefined;
};

/** @internal */
export const ItemsSettings$outboundSchema: z.ZodType<
  ItemsSettings$Outbound,
  z.ZodTypeDef,
  ItemsSettings
> = z.object({
  outputMasking: z.boolean().default(false),
  isCachingEnabled: z.boolean().default(false),
  cacheConfig: z.nullable(
    z.union([
      z.lazy(() => PostV2LogsQueryCacheConfigResponse2001$outboundSchema),
      z.lazy(() => PostV2LogsQueryCacheConfigResponse2002$outboundSchema),
    ]),
  ).optional(),
  evaluators: z.array(
    z.union([
      z.lazy(() => PostV2LogsQueryEvaluators1$outboundSchema),
      z.lazy(() => PostV2LogsQueryEvaluators2$outboundSchema),
    ]),
  ).optional(),
  guardrailsBehavior: ItemsGuardrailsBehavior$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    outputMasking: "output_masking",
    isCachingEnabled: "is_caching_enabled",
    cacheConfig: "cache_config",
    guardrailsBehavior: "guardrails_behavior",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsSettings$ {
  /** @deprecated use `ItemsSettings$inboundSchema` instead. */
  export const inboundSchema = ItemsSettings$inboundSchema;
  /** @deprecated use `ItemsSettings$outboundSchema` instead. */
  export const outboundSchema = ItemsSettings$outboundSchema;
  /** @deprecated use `ItemsSettings$Outbound` instead. */
  export type Outbound = ItemsSettings$Outbound;
}

export function itemsSettingsToJSON(itemsSettings: ItemsSettings): string {
  return JSON.stringify(ItemsSettings$outboundSchema.parse(itemsSettings));
}

export function itemsSettingsFromJSON(
  jsonString: string,
): SafeParseResult<ItemsSettings, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsSettings$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsSettings' from JSON`,
  );
}

/** @internal */
export const ItemsErrors$inboundSchema: z.ZodType<
  ItemsErrors,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.number(),
  message: z.string(),
});

/** @internal */
export type ItemsErrors$Outbound = {
  code: number;
  message: string;
};

/** @internal */
export const ItemsErrors$outboundSchema: z.ZodType<
  ItemsErrors$Outbound,
  z.ZodTypeDef,
  ItemsErrors
> = z.object({
  code: z.number(),
  message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsErrors$ {
  /** @deprecated use `ItemsErrors$inboundSchema` instead. */
  export const inboundSchema = ItemsErrors$inboundSchema;
  /** @deprecated use `ItemsErrors$outboundSchema` instead. */
  export const outboundSchema = ItemsErrors$outboundSchema;
  /** @deprecated use `ItemsErrors$Outbound` instead. */
  export type Outbound = ItemsErrors$Outbound;
}

export function itemsErrorsToJSON(itemsErrors: ItemsErrors): string {
  return JSON.stringify(ItemsErrors$outboundSchema.parse(itemsErrors));
}

export function itemsErrorsFromJSON(
  jsonString: string,
): SafeParseResult<ItemsErrors, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsErrors$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsErrors' from JSON`,
  );
}

/** @internal */
export const ItemsProcessingAttempts$inboundSchema: z.ZodType<
  ItemsProcessingAttempts,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  started_at: z.string(),
  queued_at: z.string().optional(),
  completed_at: z.string().optional(),
  errors: z.array(z.lazy(() => ItemsErrors$inboundSchema)).optional(),
}).transform((v) => {
  return remap$(v, {
    "started_at": "startedAt",
    "queued_at": "queuedAt",
    "completed_at": "completedAt",
  });
});

/** @internal */
export type ItemsProcessingAttempts$Outbound = {
  id: string;
  started_at: string;
  queued_at?: string | undefined;
  completed_at?: string | undefined;
  errors?: Array<ItemsErrors$Outbound> | undefined;
};

/** @internal */
export const ItemsProcessingAttempts$outboundSchema: z.ZodType<
  ItemsProcessingAttempts$Outbound,
  z.ZodTypeDef,
  ItemsProcessingAttempts
> = z.object({
  id: z.string(),
  startedAt: z.string(),
  queuedAt: z.string().optional(),
  completedAt: z.string().optional(),
  errors: z.array(z.lazy(() => ItemsErrors$outboundSchema)).optional(),
}).transform((v) => {
  return remap$(v, {
    startedAt: "started_at",
    queuedAt: "queued_at",
    completedAt: "completed_at",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsProcessingAttempts$ {
  /** @deprecated use `ItemsProcessingAttempts$inboundSchema` instead. */
  export const inboundSchema = ItemsProcessingAttempts$inboundSchema;
  /** @deprecated use `ItemsProcessingAttempts$outboundSchema` instead. */
  export const outboundSchema = ItemsProcessingAttempts$outboundSchema;
  /** @deprecated use `ItemsProcessingAttempts$Outbound` instead. */
  export type Outbound = ItemsProcessingAttempts$Outbound;
}

export function itemsProcessingAttemptsToJSON(
  itemsProcessingAttempts: ItemsProcessingAttempts,
): string {
  return JSON.stringify(
    ItemsProcessingAttempts$outboundSchema.parse(itemsProcessingAttempts),
  );
}

export function itemsProcessingAttemptsFromJSON(
  jsonString: string,
): SafeParseResult<ItemsProcessingAttempts, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsProcessingAttempts$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsProcessingAttempts' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponsePromptSnippets$inboundSchema:
  z.ZodType<PostV2LogsQueryItemsResponsePromptSnippets, z.ZodTypeDef, unknown> =
    z.object({
      _id: z.string(),
      key: z.string(),
      value: z.string(),
    }).transform((v) => {
      return remap$(v, {
        "_id": "id",
      });
    });

/** @internal */
export type PostV2LogsQueryItemsResponsePromptSnippets$Outbound = {
  _id: string;
  key: string;
  value: string;
};

/** @internal */
export const PostV2LogsQueryItemsResponsePromptSnippets$outboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsResponsePromptSnippets$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryItemsResponsePromptSnippets
  > = z.object({
    id: z.string(),
    key: z.string(),
    value: z.string(),
  }).transform((v) => {
    return remap$(v, {
      id: "_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponsePromptSnippets$ {
  /** @deprecated use `PostV2LogsQueryItemsResponsePromptSnippets$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponsePromptSnippets$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponsePromptSnippets$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponsePromptSnippets$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponsePromptSnippets$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponsePromptSnippets$Outbound;
}

export function postV2LogsQueryItemsResponsePromptSnippetsToJSON(
  postV2LogsQueryItemsResponsePromptSnippets:
    PostV2LogsQueryItemsResponsePromptSnippets,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponsePromptSnippets$outboundSchema.parse(
      postV2LogsQueryItemsResponsePromptSnippets,
    ),
  );
}

export function postV2LogsQueryItemsResponsePromptSnippetsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryItemsResponsePromptSnippets,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponsePromptSnippets$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryItemsResponsePromptSnippets' from JSON`,
  );
}

/** @internal */
export const ItemsFiles$inboundSchema: z.ZodType<
  ItemsFiles,
  z.ZodTypeDef,
  unknown
> = z.object({
  file_id: z.string(),
  file_name: z.string(),
  object_name: z.string(),
  content: z.string(),
}).transform((v) => {
  return remap$(v, {
    "file_id": "fileId",
    "file_name": "fileName",
    "object_name": "objectName",
  });
});

/** @internal */
export type ItemsFiles$Outbound = {
  file_id: string;
  file_name: string;
  object_name: string;
  content: string;
};

/** @internal */
export const ItemsFiles$outboundSchema: z.ZodType<
  ItemsFiles$Outbound,
  z.ZodTypeDef,
  ItemsFiles
> = z.object({
  fileId: z.string(),
  fileName: z.string(),
  objectName: z.string(),
  content: z.string(),
}).transform((v) => {
  return remap$(v, {
    fileId: "file_id",
    fileName: "file_name",
    objectName: "object_name",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsFiles$ {
  /** @deprecated use `ItemsFiles$inboundSchema` instead. */
  export const inboundSchema = ItemsFiles$inboundSchema;
  /** @deprecated use `ItemsFiles$outboundSchema` instead. */
  export const outboundSchema = ItemsFiles$outboundSchema;
  /** @deprecated use `ItemsFiles$Outbound` instead. */
  export type Outbound = ItemsFiles$Outbound;
}

export function itemsFilesToJSON(itemsFiles: ItemsFiles): string {
  return JSON.stringify(ItemsFiles$outboundSchema.parse(itemsFiles));
}

export function itemsFilesFromJSON(
  jsonString: string,
): SafeParseResult<ItemsFiles, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsFiles$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsFiles' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryCacheConfigType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryCacheConfigType
> = z.nativeEnum(PostV2LogsQueryCacheConfigType);

/** @internal */
export const PostV2LogsQueryCacheConfigType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryCacheConfigType
> = PostV2LogsQueryCacheConfigType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigType$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigType$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryCacheConfigType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigType$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryCacheConfigType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryCacheConfigModelType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryCacheConfigModelType
> = z.nativeEnum(PostV2LogsQueryCacheConfigModelType);

/** @internal */
export const PostV2LogsQueryCacheConfigModelType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigModelType> =
    PostV2LogsQueryCacheConfigModelType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigModelType$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigModelType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigModelType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigModelType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigModelType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryCacheConfigFormat$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryCacheConfigFormat
> = z.nativeEnum(PostV2LogsQueryCacheConfigFormat);

/** @internal */
export const PostV2LogsQueryCacheConfigFormat$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryCacheConfigFormat
> = PostV2LogsQueryCacheConfigFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigFormat$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigFormat$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryCacheConfigFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigFormat$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryCacheConfigFormat$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryCacheConfigQuality$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryCacheConfigQuality
> = z.nativeEnum(PostV2LogsQueryCacheConfigQuality);

/** @internal */
export const PostV2LogsQueryCacheConfigQuality$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryCacheConfigQuality
> = PostV2LogsQueryCacheConfigQuality$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigQuality$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigQuality$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryCacheConfigQuality$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigQuality$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigQuality$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataType
  > = z.nativeEnum(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataType,
  );

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataType
  > =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataType$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJson2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJson2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataType$inboundSchema,
  });

/** @internal */
export type PostV2LogsQueryResponseFormatResponse200ApplicationJson2$Outbound =
  {
    type: string;
  };

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJson2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJson2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse200ApplicationJson2
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2DataType$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJson2$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJson2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJson2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJson2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJson2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJson2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryResponseFormatResponse200ApplicationJson2$Outbound;
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJson2ToJSON(
  postV2LogsQueryResponseFormatResponse200ApplicationJson2:
    PostV2LogsQueryResponseFormatResponse200ApplicationJson2,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse200ApplicationJson2$outboundSchema
      .parse(postV2LogsQueryResponseFormatResponse200ApplicationJson2),
  );
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJson2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse200ApplicationJson2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJson2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse200ApplicationJson2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Type
  > = z.nativeEnum(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Type,
  );

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Type
  > =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Type$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema$inboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/** @internal */
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema$Outbound =
  {
    name: string;
    strict: boolean;
    schema: { [k: string]: any };
  };

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema$Outbound;
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchemaToJSON(
  postV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema$outboundSchema
      .parse(postV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema),
  );
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchemaFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJson1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJson1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Type$inboundSchema,
    json_schema: z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "json_schema": "jsonSchema",
    });
  });

/** @internal */
export type PostV2LogsQueryResponseFormatResponse200ApplicationJson1$Outbound =
  {
    type: string;
    json_schema:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema$Outbound;
  };

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJson1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJson1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse200ApplicationJson1
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems2Type$outboundSchema,
    jsonSchema: z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONJSONSchema$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      jsonSchema: "json_schema",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJson1$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJson1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJson1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJson1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJson1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJson1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryResponseFormatResponse200ApplicationJson1$Outbound;
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJson1ToJSON(
  postV2LogsQueryResponseFormatResponse200ApplicationJson1:
    PostV2LogsQueryResponseFormatResponse200ApplicationJson1,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse200ApplicationJson1$outboundSchema
      .parse(postV2LogsQueryResponseFormatResponse200ApplicationJson1),
  );
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJson1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse200ApplicationJson1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJson1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse200ApplicationJson1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponseFormat$inboundSchema: z.ZodType<
  PostV2LogsQueryCacheConfigResponseFormat,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() =>
    PostV2LogsQueryResponseFormatResponse200ApplicationJson2$inboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryResponseFormatResponse200ApplicationJson1$inboundSchema
  ),
]);

/** @internal */
export type PostV2LogsQueryCacheConfigResponseFormat$Outbound =
  | PostV2LogsQueryResponseFormatResponse200ApplicationJson2$Outbound
  | PostV2LogsQueryResponseFormatResponse200ApplicationJson1$Outbound;

/** @internal */
export const PostV2LogsQueryCacheConfigResponseFormat$outboundSchema: z.ZodType<
  PostV2LogsQueryCacheConfigResponseFormat$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryCacheConfigResponseFormat
> = z.union([
  z.lazy(() =>
    PostV2LogsQueryResponseFormatResponse200ApplicationJson2$outboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryResponseFormatResponse200ApplicationJson1$outboundSchema
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponseFormat$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponseFormat$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponseFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponseFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponseFormat$outboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponseFormat$Outbound` instead. */
  export type Outbound = PostV2LogsQueryCacheConfigResponseFormat$Outbound;
}

export function postV2LogsQueryCacheConfigResponseFormatToJSON(
  postV2LogsQueryCacheConfigResponseFormat:
    PostV2LogsQueryCacheConfigResponseFormat,
): string {
  return JSON.stringify(
    PostV2LogsQueryCacheConfigResponseFormat$outboundSchema.parse(
      postV2LogsQueryCacheConfigResponseFormat,
    ),
  );
}

export function postV2LogsQueryCacheConfigResponseFormatFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryCacheConfigResponseFormat,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryCacheConfigResponseFormat$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryCacheConfigResponseFormat' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryCacheConfigPhotoRealVersion$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigPhotoRealVersion> = z
    .nativeEnum(PostV2LogsQueryCacheConfigPhotoRealVersion);

/** @internal */
export const PostV2LogsQueryCacheConfigPhotoRealVersion$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigPhotoRealVersion> =
    PostV2LogsQueryCacheConfigPhotoRealVersion$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigPhotoRealVersion$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigPhotoRealVersion$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigPhotoRealVersion$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigPhotoRealVersion$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigPhotoRealVersion$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryCacheConfigEncodingFormat$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigEncodingFormat> = z
    .nativeEnum(PostV2LogsQueryCacheConfigEncodingFormat);

/** @internal */
export const PostV2LogsQueryCacheConfigEncodingFormat$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigEncodingFormat> =
    PostV2LogsQueryCacheConfigEncodingFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigEncodingFormat$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigEncodingFormat$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigEncodingFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigEncodingFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigEncodingFormat$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryCacheConfigModelParameters$inboundSchema: z.ZodType<
  PostV2LogsQueryCacheConfigModelParameters,
  z.ZodTypeDef,
  unknown
> = z.object({
  temperature: z.number().optional(),
  maxTokens: z.number().optional(),
  topK: z.number().optional(),
  topP: z.number().optional(),
  frequencyPenalty: z.number().optional(),
  presencePenalty: z.number().optional(),
  numImages: z.number().optional(),
  seed: z.number().optional(),
  format: PostV2LogsQueryCacheConfigFormat$inboundSchema.optional(),
  dimensions: z.string().optional(),
  quality: PostV2LogsQueryCacheConfigQuality$inboundSchema.optional(),
  style: z.string().optional(),
  responseFormat: z.nullable(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryResponseFormatResponse200ApplicationJson2$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryResponseFormatResponse200ApplicationJson1$inboundSchema
      ),
    ]),
  ).optional(),
  photoRealVersion: PostV2LogsQueryCacheConfigPhotoRealVersion$inboundSchema
    .optional(),
  encoding_format: PostV2LogsQueryCacheConfigEncodingFormat$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "encoding_format": "encodingFormat",
  });
});

/** @internal */
export type PostV2LogsQueryCacheConfigModelParameters$Outbound = {
  temperature?: number | undefined;
  maxTokens?: number | undefined;
  topK?: number | undefined;
  topP?: number | undefined;
  frequencyPenalty?: number | undefined;
  presencePenalty?: number | undefined;
  numImages?: number | undefined;
  seed?: number | undefined;
  format?: string | undefined;
  dimensions?: string | undefined;
  quality?: string | undefined;
  style?: string | undefined;
  responseFormat?:
    | PostV2LogsQueryResponseFormatResponse200ApplicationJson2$Outbound
    | PostV2LogsQueryResponseFormatResponse200ApplicationJson1$Outbound
    | null
    | undefined;
  photoRealVersion?: string | undefined;
  encoding_format?: string | undefined;
};

/** @internal */
export const PostV2LogsQueryCacheConfigModelParameters$outboundSchema:
  z.ZodType<
    PostV2LogsQueryCacheConfigModelParameters$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryCacheConfigModelParameters
  > = z.object({
    temperature: z.number().optional(),
    maxTokens: z.number().optional(),
    topK: z.number().optional(),
    topP: z.number().optional(),
    frequencyPenalty: z.number().optional(),
    presencePenalty: z.number().optional(),
    numImages: z.number().optional(),
    seed: z.number().optional(),
    format: PostV2LogsQueryCacheConfigFormat$outboundSchema.optional(),
    dimensions: z.string().optional(),
    quality: PostV2LogsQueryCacheConfigQuality$outboundSchema.optional(),
    style: z.string().optional(),
    responseFormat: z.nullable(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryResponseFormatResponse200ApplicationJson2$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryResponseFormatResponse200ApplicationJson1$outboundSchema
        ),
      ]),
    ).optional(),
    photoRealVersion: PostV2LogsQueryCacheConfigPhotoRealVersion$outboundSchema
      .optional(),
    encodingFormat: PostV2LogsQueryCacheConfigEncodingFormat$outboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      encodingFormat: "encoding_format",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigModelParameters$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigModelParameters$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigModelParameters$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigModelParameters$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigModelParameters$outboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigModelParameters$Outbound` instead. */
  export type Outbound = PostV2LogsQueryCacheConfigModelParameters$Outbound;
}

export function postV2LogsQueryCacheConfigModelParametersToJSON(
  postV2LogsQueryCacheConfigModelParameters:
    PostV2LogsQueryCacheConfigModelParameters,
): string {
  return JSON.stringify(
    PostV2LogsQueryCacheConfigModelParameters$outboundSchema.parse(
      postV2LogsQueryCacheConfigModelParameters,
    ),
  );
}

export function postV2LogsQueryCacheConfigModelParametersFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryCacheConfigModelParameters,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryCacheConfigModelParameters$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryCacheConfigModelParameters' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryCacheConfigProvider$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryCacheConfigProvider
> = z.nativeEnum(PostV2LogsQueryCacheConfigProvider);

/** @internal */
export const PostV2LogsQueryCacheConfigProvider$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryCacheConfigProvider
> = PostV2LogsQueryCacheConfigProvider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigProvider$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigProvider$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryCacheConfigProvider$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigProvider$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigProvider$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryCacheConfigModelConfig$inboundSchema: z.ZodType<
  PostV2LogsQueryCacheConfigModelConfig,
  z.ZodTypeDef,
  unknown
> = z.object({
  model: z.string(),
  model_db_id: z.string(),
  model_type: PostV2LogsQueryCacheConfigModelType$inboundSchema,
  model_parameters: z.lazy(() =>
    PostV2LogsQueryCacheConfigModelParameters$inboundSchema
  ),
  provider: PostV2LogsQueryCacheConfigProvider$inboundSchema,
  integration_id: z.nullable(z.string()).optional(),
  version: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "model_db_id": "modelDbId",
    "model_type": "modelType",
    "model_parameters": "modelParameters",
    "integration_id": "integrationId",
  });
});

/** @internal */
export type PostV2LogsQueryCacheConfigModelConfig$Outbound = {
  model: string;
  model_db_id: string;
  model_type: string;
  model_parameters: PostV2LogsQueryCacheConfigModelParameters$Outbound;
  provider: string;
  integration_id?: string | null | undefined;
  version?: string | undefined;
};

/** @internal */
export const PostV2LogsQueryCacheConfigModelConfig$outboundSchema: z.ZodType<
  PostV2LogsQueryCacheConfigModelConfig$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryCacheConfigModelConfig
> = z.object({
  model: z.string(),
  modelDbId: z.string(),
  modelType: PostV2LogsQueryCacheConfigModelType$outboundSchema,
  modelParameters: z.lazy(() =>
    PostV2LogsQueryCacheConfigModelParameters$outboundSchema
  ),
  provider: PostV2LogsQueryCacheConfigProvider$outboundSchema,
  integrationId: z.nullable(z.string()).optional(),
  version: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    modelDbId: "model_db_id",
    modelType: "model_type",
    modelParameters: "model_parameters",
    integrationId: "integration_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigModelConfig$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigModelConfig$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigModelConfig$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigModelConfig$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigModelConfig$outboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigModelConfig$Outbound` instead. */
  export type Outbound = PostV2LogsQueryCacheConfigModelConfig$Outbound;
}

export function postV2LogsQueryCacheConfigModelConfigToJSON(
  postV2LogsQueryCacheConfigModelConfig: PostV2LogsQueryCacheConfigModelConfig,
): string {
  return JSON.stringify(
    PostV2LogsQueryCacheConfigModelConfig$outboundSchema.parse(
      postV2LogsQueryCacheConfigModelConfig,
    ),
  );
}

export function postV2LogsQueryCacheConfigModelConfigFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryCacheConfigModelConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryCacheConfigModelConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryCacheConfigModelConfig' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryCacheConfig2$inboundSchema: z.ZodType<
  PostV2LogsQueryCacheConfig2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PostV2LogsQueryCacheConfigType$inboundSchema,
  model_config: z.lazy(() =>
    PostV2LogsQueryCacheConfigModelConfig$inboundSchema
  ),
  ttl: z.number().default(0),
  similarity_score_threshold: z.number().default(0),
}).transform((v) => {
  return remap$(v, {
    "model_config": "modelConfig",
    "similarity_score_threshold": "similarityScoreThreshold",
  });
});

/** @internal */
export type PostV2LogsQueryCacheConfig2$Outbound = {
  type: string;
  model_config: PostV2LogsQueryCacheConfigModelConfig$Outbound;
  ttl: number;
  similarity_score_threshold: number;
};

/** @internal */
export const PostV2LogsQueryCacheConfig2$outboundSchema: z.ZodType<
  PostV2LogsQueryCacheConfig2$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryCacheConfig2
> = z.object({
  type: PostV2LogsQueryCacheConfigType$outboundSchema,
  modelConfig: z.lazy(() =>
    PostV2LogsQueryCacheConfigModelConfig$outboundSchema
  ),
  ttl: z.number().default(0),
  similarityScoreThreshold: z.number().default(0),
}).transform((v) => {
  return remap$(v, {
    modelConfig: "model_config",
    similarityScoreThreshold: "similarity_score_threshold",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfig2$ {
  /** @deprecated use `PostV2LogsQueryCacheConfig2$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryCacheConfig2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfig2$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryCacheConfig2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfig2$Outbound` instead. */
  export type Outbound = PostV2LogsQueryCacheConfig2$Outbound;
}

export function postV2LogsQueryCacheConfig2ToJSON(
  postV2LogsQueryCacheConfig2: PostV2LogsQueryCacheConfig2,
): string {
  return JSON.stringify(
    PostV2LogsQueryCacheConfig2$outboundSchema.parse(
      postV2LogsQueryCacheConfig2,
    ),
  );
}

export function postV2LogsQueryCacheConfig2FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryCacheConfig2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryCacheConfig2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryCacheConfig2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryCacheConfigResponseType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponseType> = z.nativeEnum(
    PostV2LogsQueryCacheConfigResponseType,
  );

/** @internal */
export const PostV2LogsQueryCacheConfigResponseType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryCacheConfigResponseType> =
    PostV2LogsQueryCacheConfigResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfigResponseType$ {
  /** @deprecated use `PostV2LogsQueryCacheConfigResponseType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryCacheConfigResponseType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfigResponseType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryCacheConfigResponseType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryCacheConfig1$inboundSchema: z.ZodType<
  PostV2LogsQueryCacheConfig1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PostV2LogsQueryCacheConfigResponseType$inboundSchema,
  ttl: z.number().default(0),
});

/** @internal */
export type PostV2LogsQueryCacheConfig1$Outbound = {
  type: string;
  ttl: number;
};

/** @internal */
export const PostV2LogsQueryCacheConfig1$outboundSchema: z.ZodType<
  PostV2LogsQueryCacheConfig1$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryCacheConfig1
> = z.object({
  type: PostV2LogsQueryCacheConfigResponseType$outboundSchema,
  ttl: z.number().default(0),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryCacheConfig1$ {
  /** @deprecated use `PostV2LogsQueryCacheConfig1$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryCacheConfig1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfig1$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryCacheConfig1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryCacheConfig1$Outbound` instead. */
  export type Outbound = PostV2LogsQueryCacheConfig1$Outbound;
}

export function postV2LogsQueryCacheConfig1ToJSON(
  postV2LogsQueryCacheConfig1: PostV2LogsQueryCacheConfig1,
): string {
  return JSON.stringify(
    PostV2LogsQueryCacheConfig1$outboundSchema.parse(
      postV2LogsQueryCacheConfig1,
    ),
  );
}

export function postV2LogsQueryCacheConfig1FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryCacheConfig1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryCacheConfig1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryCacheConfig1' from JSON`,
  );
}

/** @internal */
export const ItemsCacheConfig$inboundSchema: z.ZodType<
  ItemsCacheConfig,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQueryCacheConfig1$inboundSchema),
  z.lazy(() => PostV2LogsQueryCacheConfig2$inboundSchema),
]);

/** @internal */
export type ItemsCacheConfig$Outbound =
  | PostV2LogsQueryCacheConfig1$Outbound
  | PostV2LogsQueryCacheConfig2$Outbound;

/** @internal */
export const ItemsCacheConfig$outboundSchema: z.ZodType<
  ItemsCacheConfig$Outbound,
  z.ZodTypeDef,
  ItemsCacheConfig
> = z.union([
  z.lazy(() => PostV2LogsQueryCacheConfig1$outboundSchema),
  z.lazy(() => PostV2LogsQueryCacheConfig2$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsCacheConfig$ {
  /** @deprecated use `ItemsCacheConfig$inboundSchema` instead. */
  export const inboundSchema = ItemsCacheConfig$inboundSchema;
  /** @deprecated use `ItemsCacheConfig$outboundSchema` instead. */
  export const outboundSchema = ItemsCacheConfig$outboundSchema;
  /** @deprecated use `ItemsCacheConfig$Outbound` instead. */
  export type Outbound = ItemsCacheConfig$Outbound;
}

export function itemsCacheConfigToJSON(
  itemsCacheConfig: ItemsCacheConfig,
): string {
  return JSON.stringify(
    ItemsCacheConfig$outboundSchema.parse(itemsCacheConfig),
  );
}

export function itemsCacheConfigFromJSON(
  jsonString: string,
): SafeParseResult<ItemsCacheConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsCacheConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsCacheConfig' from JSON`,
  );
}

/** @internal */
export const ItemsCacheStatus$inboundSchema: z.ZodNativeEnum<
  typeof ItemsCacheStatus
> = z.nativeEnum(ItemsCacheStatus);

/** @internal */
export const ItemsCacheStatus$outboundSchema: z.ZodNativeEnum<
  typeof ItemsCacheStatus
> = ItemsCacheStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsCacheStatus$ {
  /** @deprecated use `ItemsCacheStatus$inboundSchema` instead. */
  export const inboundSchema = ItemsCacheStatus$inboundSchema;
  /** @deprecated use `ItemsCacheStatus$outboundSchema` instead. */
  export const outboundSchema = ItemsCacheStatus$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryItemsData$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsData,
  z.ZodTypeDef,
  unknown
> = z.object({
  deployment_id: z.string(),
  deployment_key: z.string(),
  deployment_variant_version: z.string(),
  deployment_variant_position: z.number(),
  deployment_variant_id: z.string(),
  is_default_matched: z.boolean(),
  choices: z.array(z.lazy(() => ItemsChoices$inboundSchema)).optional(),
  integration_ids: z.array(z.string()).optional(),
  action: ItemsAction$inboundSchema,
  prompt_config: z.lazy(() => ItemsPromptConfig$inboundSchema),
  variables: z.array(
    z.lazy(() => PostV2LogsQueryItemsResponseVariables$inboundSchema),
  ),
  performance: z.lazy(() => ItemsPerformance$inboundSchema).optional(),
  usage: z.lazy(() => ItemsUsage$inboundSchema).optional(),
  billing: z.lazy(() => PostV2LogsQueryItemsResponseBilling$inboundSchema)
    .optional(),
  retries: z.array(z.lazy(() => ItemsRetries$inboundSchema)),
  provider_response: z.any().optional(),
  retrievals: z.array(z.lazy(() => ItemsRetrievals$inboundSchema)).optional(),
  knowledge_bases: z.array(
    z.lazy(() => PostV2LogsQueryItemsResponseKnowledgeBases$inboundSchema),
  ).optional(),
  tools: z.array(z.lazy(() => ItemsTools$inboundSchema)).optional(),
  metadata: z.lazy(() => ItemsMetadata$inboundSchema).optional(),
  settings: z.lazy(() => ItemsSettings$inboundSchema).optional(),
  processing_attempts: z.array(
    z.lazy(() => ItemsProcessingAttempts$inboundSchema),
  ).optional(),
  prompt_snippets: z.array(
    z.lazy(() => PostV2LogsQueryItemsResponsePromptSnippets$inboundSchema),
  ),
  files: z.array(z.lazy(() => ItemsFiles$inboundSchema)).optional(),
  cache_key: z.string().optional(),
  cache_config: z.union([
    z.lazy(() => PostV2LogsQueryCacheConfig1$inboundSchema),
    z.lazy(() => PostV2LogsQueryCacheConfig2$inboundSchema),
  ]).optional(),
  is_caching_enabled: z.boolean().optional(),
  cache_status: ItemsCacheStatus$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "deployment_id": "deploymentId",
    "deployment_key": "deploymentKey",
    "deployment_variant_version": "deploymentVariantVersion",
    "deployment_variant_position": "deploymentVariantPosition",
    "deployment_variant_id": "deploymentVariantId",
    "is_default_matched": "isDefaultMatched",
    "integration_ids": "integrationIds",
    "prompt_config": "promptConfig",
    "provider_response": "providerResponse",
    "knowledge_bases": "knowledgeBases",
    "processing_attempts": "processingAttempts",
    "prompt_snippets": "promptSnippets",
    "cache_key": "cacheKey",
    "cache_config": "cacheConfig",
    "is_caching_enabled": "isCachingEnabled",
    "cache_status": "cacheStatus",
  });
});

/** @internal */
export type PostV2LogsQueryItemsData$Outbound = {
  deployment_id: string;
  deployment_key: string;
  deployment_variant_version: string;
  deployment_variant_position: number;
  deployment_variant_id: string;
  is_default_matched: boolean;
  choices?: Array<ItemsChoices$Outbound> | undefined;
  integration_ids?: Array<string> | undefined;
  action: string;
  prompt_config: ItemsPromptConfig$Outbound;
  variables: Array<PostV2LogsQueryItemsResponseVariables$Outbound>;
  performance?: ItemsPerformance$Outbound | undefined;
  usage?: ItemsUsage$Outbound | undefined;
  billing?: PostV2LogsQueryItemsResponseBilling$Outbound | undefined;
  retries: Array<ItemsRetries$Outbound>;
  provider_response?: any | undefined;
  retrievals?: Array<ItemsRetrievals$Outbound> | undefined;
  knowledge_bases?:
    | Array<PostV2LogsQueryItemsResponseKnowledgeBases$Outbound>
    | undefined;
  tools?: Array<ItemsTools$Outbound> | undefined;
  metadata?: ItemsMetadata$Outbound | undefined;
  settings?: ItemsSettings$Outbound | undefined;
  processing_attempts?: Array<ItemsProcessingAttempts$Outbound> | undefined;
  prompt_snippets: Array<PostV2LogsQueryItemsResponsePromptSnippets$Outbound>;
  files?: Array<ItemsFiles$Outbound> | undefined;
  cache_key?: string | undefined;
  cache_config?:
    | PostV2LogsQueryCacheConfig1$Outbound
    | PostV2LogsQueryCacheConfig2$Outbound
    | undefined;
  is_caching_enabled?: boolean | undefined;
  cache_status?: string | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsData$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsData$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsData
> = z.object({
  deploymentId: z.string(),
  deploymentKey: z.string(),
  deploymentVariantVersion: z.string(),
  deploymentVariantPosition: z.number(),
  deploymentVariantId: z.string(),
  isDefaultMatched: z.boolean(),
  choices: z.array(z.lazy(() => ItemsChoices$outboundSchema)).optional(),
  integrationIds: z.array(z.string()).optional(),
  action: ItemsAction$outboundSchema,
  promptConfig: z.lazy(() => ItemsPromptConfig$outboundSchema),
  variables: z.array(
    z.lazy(() => PostV2LogsQueryItemsResponseVariables$outboundSchema),
  ),
  performance: z.lazy(() => ItemsPerformance$outboundSchema).optional(),
  usage: z.lazy(() => ItemsUsage$outboundSchema).optional(),
  billing: z.lazy(() => PostV2LogsQueryItemsResponseBilling$outboundSchema)
    .optional(),
  retries: z.array(z.lazy(() => ItemsRetries$outboundSchema)),
  providerResponse: z.any().optional(),
  retrievals: z.array(z.lazy(() => ItemsRetrievals$outboundSchema)).optional(),
  knowledgeBases: z.array(
    z.lazy(() => PostV2LogsQueryItemsResponseKnowledgeBases$outboundSchema),
  ).optional(),
  tools: z.array(z.lazy(() => ItemsTools$outboundSchema)).optional(),
  metadata: z.lazy(() => ItemsMetadata$outboundSchema).optional(),
  settings: z.lazy(() => ItemsSettings$outboundSchema).optional(),
  processingAttempts: z.array(
    z.lazy(() => ItemsProcessingAttempts$outboundSchema),
  ).optional(),
  promptSnippets: z.array(
    z.lazy(() => PostV2LogsQueryItemsResponsePromptSnippets$outboundSchema),
  ),
  files: z.array(z.lazy(() => ItemsFiles$outboundSchema)).optional(),
  cacheKey: z.string().optional(),
  cacheConfig: z.union([
    z.lazy(() => PostV2LogsQueryCacheConfig1$outboundSchema),
    z.lazy(() => PostV2LogsQueryCacheConfig2$outboundSchema),
  ]).optional(),
  isCachingEnabled: z.boolean().optional(),
  cacheStatus: ItemsCacheStatus$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    deploymentId: "deployment_id",
    deploymentKey: "deployment_key",
    deploymentVariantVersion: "deployment_variant_version",
    deploymentVariantPosition: "deployment_variant_position",
    deploymentVariantId: "deployment_variant_id",
    isDefaultMatched: "is_default_matched",
    integrationIds: "integration_ids",
    promptConfig: "prompt_config",
    providerResponse: "provider_response",
    knowledgeBases: "knowledge_bases",
    processingAttempts: "processing_attempts",
    promptSnippets: "prompt_snippets",
    cacheKey: "cache_key",
    cacheConfig: "cache_config",
    isCachingEnabled: "is_caching_enabled",
    cacheStatus: "cache_status",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsData$ {
  /** @deprecated use `PostV2LogsQueryItemsData$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryItemsData$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsData$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryItemsData$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsData$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsData$Outbound;
}

export function postV2LogsQueryItemsDataToJSON(
  postV2LogsQueryItemsData: PostV2LogsQueryItemsData,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsData$outboundSchema.parse(postV2LogsQueryItemsData),
  );
}

export function postV2LogsQueryItemsDataFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryItemsData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsData' from JSON`,
  );
}

/** @internal */
export const Items2$inboundSchema: z.ZodType<Items2, z.ZodTypeDef, unknown> = z
  .object({
    _id: z.string(),
    workspace_id: z.string(),
    workflow_metadata: z.record(z.any()).optional(),
    workflow_input: z.record(z.any()).optional(),
    workflow_output: z.record(z.any()).optional(),
    project_id: z.string().optional(),
    request_properties: z.lazy(() => ItemsRequestProperties$inboundSchema)
      .optional(),
    started_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    finished_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    evals: z.array(
      z.union([
        z.lazy(() => PostV2LogsQueryEvals1$inboundSchema),
        z.lazy(() => PostV2LogsQueryEvals2$inboundSchema),
        z.lazy(() => PostV2LogsQueryEvals3$inboundSchema),
        z.lazy(() => PostV2LogsQueryEvals4$inboundSchema),
        z.lazy(() => PostV2LogsQueryEvals5$inboundSchema),
        z.lazy(() => PostV2LogsQueryEvals6$inboundSchema),
        z.lazy(() => PostV2LogsQueryEvals7$inboundSchema),
      ]),
    ),
    product_type: ItemsProductType$inboundSchema,
    related_entities: z.array(
      z.union([
        z.lazy(() => PostV2LogsQueryRelatedEntities1$inboundSchema),
        z.lazy(() => PostV2LogsQueryRelatedEntities2$inboundSchema),
        z.lazy(() => PostV2LogsQueryRelatedEntities3$inboundSchema),
        z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse2004$inboundSchema),
        z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse5$inboundSchema),
        z.lazy(() => PostV2LogsQueryRelatedEntities6$inboundSchema),
        z.lazy(() => PostV2LogsQueryRelatedEntities7$inboundSchema),
      ]),
    ),
    data: z.lazy(() => PostV2LogsQueryItemsData$inboundSchema),
  }).transform((v) => {
    return remap$(v, {
      "_id": "id",
      "workspace_id": "workspaceId",
      "workflow_metadata": "workflowMetadata",
      "workflow_input": "workflowInput",
      "workflow_output": "workflowOutput",
      "project_id": "projectId",
      "request_properties": "requestProperties",
      "started_at": "startedAt",
      "finished_at": "finishedAt",
      "product_type": "productType",
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type Items2$Outbound = {
  _id: string;
  workspace_id: string;
  workflow_metadata?: { [k: string]: any } | undefined;
  workflow_input?: { [k: string]: any } | undefined;
  workflow_output?: { [k: string]: any } | undefined;
  project_id?: string | undefined;
  request_properties?: ItemsRequestProperties$Outbound | undefined;
  started_at: string;
  finished_at?: string | undefined;
  evals: Array<
    | PostV2LogsQueryEvals1$Outbound
    | PostV2LogsQueryEvals2$Outbound
    | PostV2LogsQueryEvals3$Outbound
    | PostV2LogsQueryEvals4$Outbound
    | PostV2LogsQueryEvals5$Outbound
    | PostV2LogsQueryEvals6$Outbound
    | PostV2LogsQueryEvals7$Outbound
  >;
  product_type: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntities1$Outbound
    | PostV2LogsQueryRelatedEntities2$Outbound
    | PostV2LogsQueryRelatedEntities3$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse2004$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse5$Outbound
    | PostV2LogsQueryRelatedEntities6$Outbound
    | PostV2LogsQueryRelatedEntities7$Outbound
  >;
  data: PostV2LogsQueryItemsData$Outbound;
};

/** @internal */
export const Items2$outboundSchema: z.ZodType<
  Items2$Outbound,
  z.ZodTypeDef,
  Items2
> = z.object({
  id: z.string(),
  workspaceId: z.string(),
  workflowMetadata: z.record(z.any()).optional(),
  workflowInput: z.record(z.any()).optional(),
  workflowOutput: z.record(z.any()).optional(),
  projectId: z.string().optional(),
  requestProperties: z.lazy(() => ItemsRequestProperties$outboundSchema)
    .optional(),
  startedAt: z.date().transform(v => v.toISOString()),
  finishedAt: z.date().transform(v => v.toISOString()).optional(),
  evals: z.array(
    z.union([
      z.lazy(() => PostV2LogsQueryEvals1$outboundSchema),
      z.lazy(() => PostV2LogsQueryEvals2$outboundSchema),
      z.lazy(() => PostV2LogsQueryEvals3$outboundSchema),
      z.lazy(() => PostV2LogsQueryEvals4$outboundSchema),
      z.lazy(() => PostV2LogsQueryEvals5$outboundSchema),
      z.lazy(() => PostV2LogsQueryEvals6$outboundSchema),
      z.lazy(() => PostV2LogsQueryEvals7$outboundSchema),
    ]),
  ),
  productType: ItemsProductType$outboundSchema,
  relatedEntities: z.array(
    z.union([
      z.lazy(() => PostV2LogsQueryRelatedEntities1$outboundSchema),
      z.lazy(() => PostV2LogsQueryRelatedEntities2$outboundSchema),
      z.lazy(() => PostV2LogsQueryRelatedEntities3$outboundSchema),
      z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse2004$outboundSchema),
      z.lazy(() => PostV2LogsQueryRelatedEntitiesResponse5$outboundSchema),
      z.lazy(() => PostV2LogsQueryRelatedEntities6$outboundSchema),
      z.lazy(() => PostV2LogsQueryRelatedEntities7$outboundSchema),
    ]),
  ),
  data: z.lazy(() => PostV2LogsQueryItemsData$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    workspaceId: "workspace_id",
    workflowMetadata: "workflow_metadata",
    workflowInput: "workflow_input",
    workflowOutput: "workflow_output",
    projectId: "project_id",
    requestProperties: "request_properties",
    startedAt: "started_at",
    finishedAt: "finished_at",
    productType: "product_type",
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Items2$ {
  /** @deprecated use `Items2$inboundSchema` instead. */
  export const inboundSchema = Items2$inboundSchema;
  /** @deprecated use `Items2$outboundSchema` instead. */
  export const outboundSchema = Items2$outboundSchema;
  /** @deprecated use `Items2$Outbound` instead. */
  export type Outbound = Items2$Outbound;
}

export function items2ToJSON(items2: Items2): string {
  return JSON.stringify(Items2$outboundSchema.parse(items2));
}

export function items2FromJSON(
  jsonString: string,
): SafeParseResult<Items2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Items2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Items2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponse200RequestProperties$inboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsResponse200RequestProperties,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source: z.string().optional(),
    location: z.string().optional(),
    latitude: z.string().optional(),
    longitude: z.string().optional(),
    response_time: z.number().optional(),
    metadata: z.record(z.any()).optional(),
    status: z.number().optional(),
    context: z.record(z.any()).optional(),
    extra_params: z.record(z.any()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "response_time": "responseTime",
      "extra_params": "extraParams",
    });
  });

/** @internal */
export type PostV2LogsQueryItemsResponse200RequestProperties$Outbound = {
  source?: string | undefined;
  location?: string | undefined;
  latitude?: string | undefined;
  longitude?: string | undefined;
  response_time?: number | undefined;
  metadata?: { [k: string]: any } | undefined;
  status?: number | undefined;
  context?: { [k: string]: any } | undefined;
  extra_params?: { [k: string]: any } | undefined;
};

/** @internal */
export const PostV2LogsQueryItemsResponse200RequestProperties$outboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsResponse200RequestProperties$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryItemsResponse200RequestProperties
  > = z.object({
    source: z.string().optional(),
    location: z.string().optional(),
    latitude: z.string().optional(),
    longitude: z.string().optional(),
    responseTime: z.number().optional(),
    metadata: z.record(z.any()).optional(),
    status: z.number().optional(),
    context: z.record(z.any()).optional(),
    extraParams: z.record(z.any()).optional(),
  }).transform((v) => {
    return remap$(v, {
      responseTime: "response_time",
      extraParams: "extra_params",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponse200RequestProperties$ {
  /** @deprecated use `PostV2LogsQueryItemsResponse200RequestProperties$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponse200RequestProperties$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200RequestProperties$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponse200RequestProperties$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200RequestProperties$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryItemsResponse200RequestProperties$Outbound;
}

export function postV2LogsQueryItemsResponse200RequestPropertiesToJSON(
  postV2LogsQueryItemsResponse200RequestProperties:
    PostV2LogsQueryItemsResponse200RequestProperties,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponse200RequestProperties$outboundSchema.parse(
      postV2LogsQueryItemsResponse200RequestProperties,
    ),
  );
}

export function postV2LogsQueryItemsResponse200RequestPropertiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryItemsResponse200RequestProperties,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponse200RequestProperties$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryItemsResponse200RequestProperties' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsType
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsType,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsType
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties,
    z.ZodTypeDef,
    unknown
  > = z.object({
    source: z.string().optional(),
    location: z.string().optional(),
    latitude: z.string().optional(),
    longitude: z.string().optional(),
    response_time: z.number().optional(),
    metadata: z.record(z.any()).optional(),
    status: z.number().optional(),
    context: z.record(z.any()).optional(),
    extra_params: z.record(z.any()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "response_time": "responseTime",
      "extra_params": "extraParams",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties$Outbound =
  {
    source?: string | undefined;
    location?: string | undefined;
    latitude?: string | undefined;
    longitude?: string | undefined;
    response_time?: number | undefined;
    metadata?: { [k: string]: any } | undefined;
    status?: number | undefined;
    context?: { [k: string]: any } | undefined;
    extra_params?: { [k: string]: any } | undefined;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties
  > = z.object({
    source: z.string().optional(),
    location: z.string().optional(),
    latitude: z.string().optional(),
    longitude: z.string().optional(),
    responseTime: z.number().optional(),
    metadata: z.record(z.any()).optional(),
    status: z.number().optional(),
    context: z.record(z.any()).optional(),
    extraParams: z.record(z.any()).optional(),
  }).transform((v) => {
    return remap$(v, {
      responseTime: "response_time",
      extraParams: "extra_params",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONRequestPropertiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties:
    PostV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONRequestPropertiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONProductType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONProductType
  > = z.nativeEnum(PostV2LogsQueryEvalsResponse200ApplicationJSONProductType);

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONProductType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONProductType
  > = PostV2LogsQueryEvalsResponse200ApplicationJSONProductType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONProductType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONProductType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONProductType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONProductType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONProductType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.lazy(() =>
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71$inboundSchema
  );

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17RelatedEntities$Outbound =
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17RelatedEntities
  > = z.lazy(() =>
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71$outboundSchema
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsStatus
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsStatus,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsStatus
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsStatus$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsStatus$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsStatus$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals44Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals44Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals44Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals44Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals44Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals44Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals44Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals44Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals44Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals44Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals44Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals44Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals44Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals43Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals43Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals43Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals43Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals43Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals43Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals43Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals43Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals43Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals43Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals43Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals43Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals43Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals42Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals42Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals42Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals42Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals42Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals42Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals42Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals42Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals42Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals42Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals42Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals42Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals42Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType$inboundSchema,
    values: z.array(z.string()),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsStatus$inboundSchema,
    timestamp: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74$inboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14$Outbound =
  {
    type: string;
    values: Array<string>;
    id: string;
    status: string;
    timestamp: string;
    related_entities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74$Outbound
    >;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunType$outboundSchema,
    values: z.array(z.string()),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsStatus$outboundSchema,
    timestamp: z.date().transform(v => v.toISOString()),
    relatedEntities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74$outboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsRelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsRelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsRelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsRelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsRelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsRelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsRelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsRelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsRelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsRelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsRelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsRelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsRelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsRelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsRelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsRelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsRelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsRelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsRelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsRelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsRelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsRelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Type$inboundSchema,
    value: z.boolean(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3Status$inboundSchema,
    timestamp: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34$inboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13$Outbound =
  {
    type: string;
    value: boolean;
    id: string;
    status: string;
    timestamp: string;
    related_entities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34$Outbound
    >;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Type$outboundSchema,
    value: z.boolean(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3Status$outboundSchema,
    timestamp: z.date().transform(v => v.toISOString()),
    relatedEntities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals31$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals32$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals33$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals34$outboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsType
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsType,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsType
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunStatus
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunStatus,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunStatus
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunStatus$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunStatus$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunStatus$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals24Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals24Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals24Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals24Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals24Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals24Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals24Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals24Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals24Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals24Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals24Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals24Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals24Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals23Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals23Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals23Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals23Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals23Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals23Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals23Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals23Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals23Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals23Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals23Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals23Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals23Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals22Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals22Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals22Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals22Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals22Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals22Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals22Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals22Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals22Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals22Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals22Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals22Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals22Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsType$inboundSchema,
    value: z.number(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunStatus$inboundSchema,
    timestamp: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4$inboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12$Outbound =
  {
    type: string;
    value: number;
    id: string;
    status: string;
    timestamp: string;
    related_entities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4$Outbound
    >;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1EvalsType$outboundSchema,
    value: z.number(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunStatus$outboundSchema,
    timestamp: z.date().transform(v => v.toISOString()),
    relatedEntities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals21$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals2$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals3$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals4$outboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals14Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals14Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals14Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals14Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals14Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals14Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals14Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals14Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals14Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals14Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals14Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals14Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals14Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvalsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvalsType
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvalsType,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvalsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvalsType
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvalsType$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvalsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvalsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvalsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvalsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvalsType$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvalsType$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals11Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals11Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals11Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals11Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals11Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals11Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals11Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals11Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals11Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals11Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals11Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals11Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals11Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunRelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunRelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunRelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunRelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunRelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunRelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunRelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunRelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunRelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunRelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunRelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunRelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunRelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunRelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunRelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunRelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunRelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunRelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunRelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunRelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunRelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunRelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1Type$inboundSchema,
    value: z.string(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Status$inboundSchema,
    timestamp: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4$inboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11$Outbound =
  {
    type: string;
    value: string;
    id: string;
    status: string;
    timestamp: string;
    related_entities: Array<
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3$Outbound
      | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4$Outbound
    >;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun1Type$outboundSchema,
    value: z.string(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Evals7Status$outboundSchema,
    timestamp: z.date().transform(v => v.toISOString()),
    relatedEntities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRunEvals1$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun2$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun3$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7WorkflowRun4$outboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONEvals$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONEvals,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONEvals$Outbound =
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11$Outbound
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12$Outbound
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13$Outbound
  | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONEvals$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONEvals$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONEvals
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONEvals$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONEvals$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONEvals$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONEvals$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONEvals$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONEvals$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONEvals$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONEvalsToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONEvals:
    PostV2LogsQueryEvalsResponse200ApplicationJSONEvals,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONEvals$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ApplicationJSONEvals,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONEvalsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONEvals,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONEvals$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONEvals' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Evals7Role$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Evals7Role
  > = z.nativeEnum(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Evals7Role,
  );

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Evals7Role$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Evals7Role
  > =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Evals7Role$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Evals7Role$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Evals7Role$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Evals7Role$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Evals7Role$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Evals7Role$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13$inboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Evals7Role$inboundSchema,
    url: z.string(),
  });

/** @internal */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13$Outbound =
  {
    role: string;
    url: string;
  };

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13$outboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Evals7Role$outboundSchema,
    url: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13$Outbound;
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13ToJSON(
  postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13$outboundSchema
      .parse(
        postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13,
      ),
  );
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1EvalsRole$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1EvalsRole
  > = z.nativeEnum(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1EvalsRole,
  );

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1EvalsRole$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1EvalsRole
  > =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1EvalsRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1EvalsRole$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1EvalsRole$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1EvalsRole$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1EvalsRole$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1EvalsRole$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12$inboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1EvalsRole$inboundSchema,
    content: z.nullable(z.string()),
  });

/** @internal */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12$Outbound =
  {
    role: string;
    content: string | null;
  };

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12$outboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1EvalsRole$outboundSchema,
    content: z.nullable(z.string()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12$Outbound;
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12ToJSON(
  postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12$outboundSchema
      .parse(
        postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12,
      ),
  );
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Role$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Role
  > = z.nativeEnum(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Role,
  );

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Role$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Role
  > =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Role$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Role$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Role$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Role$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Role$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Role$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Type
  > = z.nativeEnum(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Type,
  );

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Type
  > =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Type$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function$inboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/** @internal */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function$Outbound =
  {
    name: string;
    arguments: string;
  };

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function$outboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function$Outbound;
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1FunctionToJSON(
  postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function$outboundSchema
      .parse(
        postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function,
      ),
  );
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1FunctionFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls$inboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    index: z.number().optional(),
    type:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Type$inboundSchema,
    function: z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function$inboundSchema
    ),
  });

/** @internal */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls$Outbound =
  {
    id?: string | undefined;
    index?: number | undefined;
    type: string;
    function:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function$Outbound;
  };

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls$outboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls
  > = z.object({
    id: z.string().optional(),
    index: z.number().optional(),
    type:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Type$outboundSchema,
    function: z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Function$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls$Outbound;
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCallsToJSON(
  postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls$outboundSchema
      .parse(
        postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls,
      ),
  );
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCallsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11$inboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Role$inboundSchema,
    content: z.nullable(z.string()).optional(),
    tool_calls: z.array(
      z.lazy(() =>
        PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls$inboundSchema
      ),
    ),
  }).transform((v) => {
    return remap$(v, {
      "tool_calls": "toolCalls",
    });
  });

/** @internal */
export type PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11$Outbound =
  {
    role: string;
    content?: string | null | undefined;
    tool_calls: Array<
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls$Outbound
    >;
  };

/** @internal */
export const PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11$outboundSchema:
  z.ZodType<
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11
  > = z.object({
    role:
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1Role$outboundSchema,
    content: z.nullable(z.string()).optional(),
    toolCalls: z.array(
      z.lazy(() =>
        PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems1ToolCalls$outboundSchema
      ),
    ),
  }).transform((v) => {
    return remap$(v, {
      toolCalls: "tool_calls",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11$ {
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11$inboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11$outboundSchema;
  /** @deprecated use `PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11$Outbound;
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11ToJSON(
  postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11:
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11,
): string {
  return JSON.stringify(
    PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11$outboundSchema
      .parse(
        postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11,
      ),
  );
}

export function postV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONMessage$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONMessage,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONMessage$Outbound =
  | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12$Outbound
  | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13$Outbound
  | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONMessage$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONMessage$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONMessage
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONMessage$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONMessage$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONMessage$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONMessage$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONMessage$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONMessage$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONMessage$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONMessageToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONMessage:
    PostV2LogsQueryEvalsResponse200ApplicationJSONMessage,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONMessage$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ApplicationJSONMessage,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONMessageFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONMessage,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONMessage$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONMessage' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONChoices$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONChoices,
    z.ZodTypeDef,
    unknown
  > = z.object({
    index: z.number(),
    message: z.union([
      z.lazy(() =>
        PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11$inboundSchema
      ),
    ]).optional(),
    finish_reason: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "finish_reason": "finishReason",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONChoices$Outbound = {
  index: number;
  message?:
    | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12$Outbound
    | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13$Outbound
    | PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11$Outbound
    | undefined;
  finish_reason?: string | null | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONChoices$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONChoices$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONChoices
  > = z.object({
    index: z.number(),
    message: z.union([
      z.lazy(() =>
        PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems12$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems13$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryMessageResponse200ApplicationJSONResponseBodyItems11$outboundSchema
      ),
    ]).optional(),
    finishReason: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      finishReason: "finish_reason",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONChoices$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONChoices$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONChoices$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONChoices$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONChoices$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONChoices$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONChoices$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONChoicesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONChoices:
    PostV2LogsQueryEvalsResponse200ApplicationJSONChoices,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONChoices$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ApplicationJSONChoices,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONChoicesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONChoices,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONChoices$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONChoices' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONAction$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200ApplicationJSONAction> =
    z.nativeEnum(PostV2LogsQueryEvalsResponse200ApplicationJSONAction);

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONAction$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200ApplicationJSONAction> =
    PostV2LogsQueryEvalsResponse200ApplicationJSONAction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONAction$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONAction$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONAction$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONAction$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONAction$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONModelType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONModelType
  > = z.nativeEnum(PostV2LogsQueryEvalsResponse200ApplicationJSONModelType);

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONModelType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONModelType
  > = PostV2LogsQueryEvalsResponse200ApplicationJSONModelType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONModelType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONModelType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONModelType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONModelType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONModelType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFormat
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFormat,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFormat
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFormat$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFormat$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFormat$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONQuality$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONQuality
  > = z.nativeEnum(PostV2LogsQueryEvalsResponse200ApplicationJSONQuality);

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONQuality$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONQuality
  > = PostV2LogsQueryEvalsResponse200ApplicationJSONQuality$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONQuality$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONQuality$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONQuality$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONQuality$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONQuality$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1EvalsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1EvalsType
  > = z.nativeEnum(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1EvalsType,
  );

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1EvalsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1EvalsType
  > =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1EvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1EvalsType$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1EvalsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1EvalsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1EvalsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1EvalsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12$inboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1EvalsType$inboundSchema,
  });

/** @internal */
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12$Outbound =
  {
    type: string;
  };

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1EvalsType$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12$Outbound;
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12ToJSON(
  postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12$outboundSchema
      .parse(
        postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12,
      ),
  );
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1Type
  > = z.nativeEnum(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1Type,
  );

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1Type
  > =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1Type$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema$inboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/** @internal */
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema$Outbound =
  {
    name: string;
    strict: boolean;
    schema: { [k: string]: any };
  };

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema$Outbound;
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchemaToJSON(
  postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema$outboundSchema
      .parse(
        postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema,
      ),
  );
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchemaFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11$inboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1Type$inboundSchema,
    json_schema: z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "json_schema": "jsonSchema",
    });
  });

/** @internal */
export type PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11$Outbound =
  {
    type: string;
    json_schema:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema$Outbound;
  };

/** @internal */
export const PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11$outboundSchema:
  z.ZodType<
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11
  > = z.object({
    type:
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1Type$outboundSchema,
    jsonSchema: z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems1JSONSchema$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      jsonSchema: "json_schema",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11$ {
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11$Outbound;
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11ToJSON(
  postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11:
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11$outboundSchema
      .parse(
        postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11,
      ),
  );
}

export function postV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseFormat$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseFormat,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseFormat$Outbound =
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12$Outbound
  | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseFormat$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseFormat$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseFormat
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseFormat$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseFormat$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseFormat$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseFormat$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseFormat$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseFormatToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseFormat:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseFormat,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseFormat$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONResponseFormat),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseFormatFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseFormat,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseFormat$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseFormat' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONPhotoRealVersion$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONPhotoRealVersion
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONPhotoRealVersion,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONPhotoRealVersion$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONPhotoRealVersion
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONPhotoRealVersion$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONPhotoRealVersion$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONPhotoRealVersion$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONPhotoRealVersion$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONPhotoRealVersion$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONPhotoRealVersion$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONEncodingFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONEncodingFormat
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONEncodingFormat,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONEncodingFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONEncodingFormat
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONEncodingFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONEncodingFormat$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONEncodingFormat$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONEncodingFormat$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONEncodingFormat$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONEncodingFormat$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONModelParameters$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONModelParameters,
    z.ZodTypeDef,
    unknown
  > = z.object({
    temperature: z.number().optional(),
    maxTokens: z.number().optional(),
    topK: z.number().optional(),
    topP: z.number().optional(),
    frequencyPenalty: z.number().optional(),
    presencePenalty: z.number().optional(),
    numImages: z.number().optional(),
    seed: z.number().optional(),
    format:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFormat$inboundSchema
        .optional(),
    dimensions: z.string().optional(),
    quality: PostV2LogsQueryEvalsResponse200ApplicationJSONQuality$inboundSchema
      .optional(),
    style: z.string().optional(),
    responseFormat: z.nullable(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11$inboundSchema
        ),
      ]),
    ).optional(),
    photoRealVersion:
      PostV2LogsQueryEvalsResponse200ApplicationJSONPhotoRealVersion$inboundSchema
        .optional(),
    encoding_format:
      PostV2LogsQueryEvalsResponse200ApplicationJSONEncodingFormat$inboundSchema
        .optional(),
  }).transform((v) => {
    return remap$(v, {
      "encoding_format": "encodingFormat",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONModelParameters$Outbound =
  {
    temperature?: number | undefined;
    maxTokens?: number | undefined;
    topK?: number | undefined;
    topP?: number | undefined;
    frequencyPenalty?: number | undefined;
    presencePenalty?: number | undefined;
    numImages?: number | undefined;
    seed?: number | undefined;
    format?: string | undefined;
    dimensions?: string | undefined;
    quality?: string | undefined;
    style?: string | undefined;
    responseFormat?:
      | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12$Outbound
      | PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11$Outbound
      | null
      | undefined;
    photoRealVersion?: string | undefined;
    encoding_format?: string | undefined;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONModelParameters$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONModelParameters$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONModelParameters
  > = z.object({
    temperature: z.number().optional(),
    maxTokens: z.number().optional(),
    topK: z.number().optional(),
    topP: z.number().optional(),
    frequencyPenalty: z.number().optional(),
    presencePenalty: z.number().optional(),
    numImages: z.number().optional(),
    seed: z.number().optional(),
    format:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyFormat$outboundSchema
        .optional(),
    dimensions: z.string().optional(),
    quality:
      PostV2LogsQueryEvalsResponse200ApplicationJSONQuality$outboundSchema
        .optional(),
    style: z.string().optional(),
    responseFormat: z.nullable(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems12$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryResponseFormatResponse200ApplicationJSONResponseBodyItems11$outboundSchema
        ),
      ]),
    ).optional(),
    photoRealVersion:
      PostV2LogsQueryEvalsResponse200ApplicationJSONPhotoRealVersion$outboundSchema
        .optional(),
    encodingFormat:
      PostV2LogsQueryEvalsResponse200ApplicationJSONEncodingFormat$outboundSchema
        .optional(),
  }).transform((v) => {
    return remap$(v, {
      encodingFormat: "encoding_format",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONModelParameters$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONModelParameters$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONModelParameters$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONModelParameters$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONModelParameters$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONModelParameters$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONModelParameters$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONModelParametersToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONModelParameters:
    PostV2LogsQueryEvalsResponse200ApplicationJSONModelParameters,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONModelParameters$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONModelParameters),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONModelParametersFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONModelParameters,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONModelParameters$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONModelParameters' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONProvider$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONProvider
  > = z.nativeEnum(PostV2LogsQueryEvalsResponse200ApplicationJSONProvider);

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONProvider$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONProvider
  > = PostV2LogsQueryEvalsResponse200ApplicationJSONProvider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONProvider$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONProvider$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONProvider$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONProvider$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONProvider$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONRole$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200ApplicationJSONRole> = z
    .nativeEnum(PostV2LogsQueryEvalsResponse200ApplicationJSONRole);

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONRole$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200ApplicationJSONRole> =
    PostV2LogsQueryEvalsResponse200ApplicationJSONRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONRole$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONRole$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONRole$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONRole$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONRole$outboundSchema;
}

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1EvalsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1EvalsType
  > = z.nativeEnum(
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1EvalsType,
  );

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1EvalsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1EvalsType
  > =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1EvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1EvalsType$ {
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1EvalsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1EvalsType$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1EvalsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1EvalsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl$inboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    url: z.string(),
    detail: z.string().optional(),
  });

/** @internal */
export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl$Outbound =
  {
    id?: string | undefined;
    url: string;
    detail?: string | undefined;
  };

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl$outboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl$Outbound,
    z.ZodTypeDef,
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl
  > = z.object({
    id: z.string().optional(),
    url: z.string(),
    detail: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl$ {
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl$outboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl$Outbound` instead. */
  export type Outbound =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl$Outbound;
}

export function postV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrlToJSON(
  postV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl:
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl,
): string {
  return JSON.stringify(
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl$outboundSchema
      .parse(
        postV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl,
      ),
  );
}

export function postV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrlFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12$inboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1EvalsType$inboundSchema,
    image_url: z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "image_url": "imageUrl",
    });
  });

/** @internal */
export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12$Outbound =
  {
    type: string;
    image_url:
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl$Outbound;
  };

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12$outboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12$Outbound,
    z.ZodTypeDef,
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12
  > = z.object({
    type:
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1EvalsType$outboundSchema,
    imageUrl: z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1ImageUrl$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      imageUrl: "image_url",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12$ {
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12$outboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12$Outbound` instead. */
  export type Outbound =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12$Outbound;
}

export function postV2LogsQuery2Response200ApplicationJSONResponseBodyItems12ToJSON(
  postV2LogsQuery2Response200ApplicationJSONResponseBodyItems12:
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12,
): string {
  return JSON.stringify(
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12$outboundSchema
      .parse(postV2LogsQuery2Response200ApplicationJSONResponseBodyItems12),
  );
}

export function postV2LogsQuery2Response200ApplicationJSONResponseBodyItems12FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1Type
  > = z.nativeEnum(
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1Type,
  );

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1Type
  > =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1Type$ {
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1Type$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11$inboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1Type$inboundSchema,
    text: z.string(),
  });

/** @internal */
export type PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11$Outbound =
  {
    type: string;
    text: string;
  };

/** @internal */
export const PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11$outboundSchema:
  z.ZodType<
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11$Outbound,
    z.ZodTypeDef,
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11
  > = z.object({
    type:
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems1Type$outboundSchema,
    text: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11$ {
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11$inboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11$outboundSchema;
  /** @deprecated use `PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11$Outbound` instead. */
  export type Outbound =
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11$Outbound;
}

export function postV2LogsQuery2Response200ApplicationJSONResponseBodyItems11ToJSON(
  postV2LogsQuery2Response200ApplicationJSONResponseBodyItems11:
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11,
): string {
  return JSON.stringify(
    PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11$outboundSchema
      .parse(postV2LogsQuery2Response200ApplicationJSONResponseBodyItems11),
  );
}

export function postV2LogsQuery2Response200ApplicationJSONResponseBodyItems11FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems12$inboundSchema:
  z.ZodType<
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems12,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems12$Outbound =
  | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11$Outbound
  | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12$Outbound;

/** @internal */
export const PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems12$outboundSchema:
  z.ZodType<
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems12$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems12
  > = z.union([
    z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems12$ {
  /** @deprecated use `PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems12$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems12$inboundSchema;
  /** @deprecated use `PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems12$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems12$outboundSchema;
  /** @deprecated use `PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems12$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems12$Outbound;
}

export function postV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems12ToJSON(
  postV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems12:
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems12,
): string {
  return JSON.stringify(
    PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems12$outboundSchema
      .parse(
        postV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems12,
      ),
  );
}

export function postV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems12FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems12,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems12$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryContentResponse200ApplicationJSONResponseBodyItems12' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONContent$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONContent,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() =>
        PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11$inboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12$inboundSchema
      ),
    ])),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONContent$Outbound =
  | string
  | Array<
    | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11$Outbound
    | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12$Outbound
  >;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONContent$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONContent$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONContent
  > = z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() =>
        PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12$outboundSchema
      ),
    ])),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONContent$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONContent$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONContent$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONContent$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONContent$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONContent$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONContent$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONContentToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONContent:
    PostV2LogsQueryEvalsResponse200ApplicationJSONContent,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONContent$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ApplicationJSONContent,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONContentFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONContent,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONContent$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONContent' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunType
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunType,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunType
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function$Outbound =
  {
    name: string;
    arguments: string;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1FunctionToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1FunctionFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONToolCalls$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONToolCalls,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    index: z.number().optional(),
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunType$inboundSchema,
    function: z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function$inboundSchema
    ),
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONToolCalls$Outbound = {
  id?: string | undefined;
  index?: number | undefined;
  type: string;
  function:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function$Outbound;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONToolCalls$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONToolCalls$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONToolCalls
  > = z.object({
    id: z.string().optional(),
    index: z.number().optional(),
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunType$outboundSchema,
    function: z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Function$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONToolCalls$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONToolCalls$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONToolCalls$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONToolCalls$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONToolCalls$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONToolCalls$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONToolCalls$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONToolCallsToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONToolCalls:
    PostV2LogsQueryEvalsResponse200ApplicationJSONToolCalls,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONToolCalls$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONToolCalls),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONToolCallsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONToolCalls,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONToolCalls$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONToolCalls' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONMessages$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONMessages,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role: PostV2LogsQueryEvalsResponse200ApplicationJSONRole$inboundSchema,
    content: z.union([
      z.string(),
      z.array(z.union([
        z.lazy(() =>
          PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12$inboundSchema
        ),
      ])),
    ]),
    tool_calls: z.array(
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONToolCalls$inboundSchema
      ),
    ).optional(),
    id: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      "tool_calls": "toolCalls",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONMessages$Outbound = {
  role: string;
  content:
    | string
    | Array<
      | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11$Outbound
      | PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12$Outbound
    >;
  tool_calls?:
    | Array<PostV2LogsQueryEvalsResponse200ApplicationJSONToolCalls$Outbound>
    | undefined;
  id?: string | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONMessages$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONMessages$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONMessages
  > = z.object({
    role: PostV2LogsQueryEvalsResponse200ApplicationJSONRole$outboundSchema,
    content: z.union([
      z.string(),
      z.array(z.union([
        z.lazy(() =>
          PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems11$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQuery2Response200ApplicationJSONResponseBodyItems12$outboundSchema
        ),
      ])),
    ]),
    toolCalls: z.array(
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONToolCalls$outboundSchema
      ),
    ).optional(),
    id: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      toolCalls: "tool_calls",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONMessages$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONMessages$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONMessages$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONMessages$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONMessages$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONMessages$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONMessages$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONMessagesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONMessages:
    PostV2LogsQueryEvalsResponse200ApplicationJSONMessages,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONMessages$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ApplicationJSONMessages,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONMessagesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONMessages,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONMessages$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONMessages' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig,
    z.ZodTypeDef,
    unknown
  > = z.object({
    stream: z.boolean(),
    model: z.string(),
    model_db_id: z.string(),
    model_type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONModelType$inboundSchema,
    model_parameters: z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONModelParameters$inboundSchema
    ),
    provider:
      PostV2LogsQueryEvalsResponse200ApplicationJSONProvider$inboundSchema,
    messages: z.array(
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONMessages$inboundSchema
      ),
    ),
    integration_id: z.nullable(z.string()).optional(),
    version: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      "model_db_id": "modelDbId",
      "model_type": "modelType",
      "model_parameters": "modelParameters",
      "integration_id": "integrationId",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig$Outbound =
  {
    stream: boolean;
    model: string;
    model_db_id: string;
    model_type: string;
    model_parameters:
      PostV2LogsQueryEvalsResponse200ApplicationJSONModelParameters$Outbound;
    provider: string;
    messages: Array<
      PostV2LogsQueryEvalsResponse200ApplicationJSONMessages$Outbound
    >;
    integration_id?: string | null | undefined;
    version?: string | undefined;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig
  > = z.object({
    stream: z.boolean(),
    model: z.string(),
    modelDbId: z.string(),
    modelType:
      PostV2LogsQueryEvalsResponse200ApplicationJSONModelType$outboundSchema,
    modelParameters: z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONModelParameters$outboundSchema
    ),
    provider:
      PostV2LogsQueryEvalsResponse200ApplicationJSONProvider$outboundSchema,
    messages: z.array(
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONMessages$outboundSchema
      ),
    ),
    integrationId: z.nullable(z.string()).optional(),
    version: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      modelDbId: "model_db_id",
      modelType: "model_type",
      modelParameters: "model_parameters",
      integrationId: "integration_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONPromptConfigToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig:
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONPromptConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsVariables$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsVariables,
  z.ZodTypeDef,
  unknown
> = z.object({
  key: z.string(),
  value: z.any().optional(),
  is_pii: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    "is_pii": "isPii",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsVariables$Outbound = {
  key: string;
  value?: any | undefined;
  is_pii: boolean;
};

/** @internal */
export const PostV2LogsQueryEvalsVariables$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsVariables$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsVariables
> = z.object({
  key: z.string(),
  value: z.any().optional(),
  isPii: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    isPii: "is_pii",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsVariables$ {
  /** @deprecated use `PostV2LogsQueryEvalsVariables$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsVariables$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsVariables$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsVariables$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsVariables$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsVariables$Outbound;
}

export function postV2LogsQueryEvalsVariablesToJSON(
  postV2LogsQueryEvalsVariables: PostV2LogsQueryEvalsVariables,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsVariables$outboundSchema.parse(
      postV2LogsQueryEvalsVariables,
    ),
  );
}

export function postV2LogsQueryEvalsVariablesFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsVariables, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsVariables$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsVariables' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONPerformance$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONPerformance,
    z.ZodTypeDef,
    unknown
  > = z.object({
    latency: z.number(),
    first_time_to_token: z.nullable(z.number()).optional(),
    tokens_per_second: z.nullable(z.number()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "first_time_to_token": "firstTimeToToken",
      "tokens_per_second": "tokensPerSecond",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONPerformance$Outbound =
  {
    latency: number;
    first_time_to_token?: number | null | undefined;
    tokens_per_second?: number | null | undefined;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONPerformance$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONPerformance$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONPerformance
  > = z.object({
    latency: z.number(),
    firstTimeToToken: z.nullable(z.number()).optional(),
    tokensPerSecond: z.nullable(z.number()).optional(),
  }).transform((v) => {
    return remap$(v, {
      firstTimeToToken: "first_time_to_token",
      tokensPerSecond: "tokens_per_second",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONPerformance$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONPerformance$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONPerformance$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONPerformance$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONPerformance$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONPerformance$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONPerformance$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONPerformanceToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONPerformance:
    PostV2LogsQueryEvalsResponse200ApplicationJSONPerformance,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONPerformance$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONPerformance),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONPerformanceFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONPerformance,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONPerformance$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONPerformance' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsPromptTokensDetails$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsPromptTokensDetails,
  z.ZodTypeDef,
  unknown
> = z.object({
  cached_tokens: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    "cached_tokens": "cachedTokens",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsPromptTokensDetails$Outbound = {
  cached_tokens?: number | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsPromptTokensDetails$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsPromptTokensDetails$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsPromptTokensDetails
> = z.object({
  cachedTokens: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    cachedTokens: "cached_tokens",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsPromptTokensDetails$ {
  /** @deprecated use `PostV2LogsQueryEvalsPromptTokensDetails$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsPromptTokensDetails$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsPromptTokensDetails$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsPromptTokensDetails$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsPromptTokensDetails$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsPromptTokensDetails$Outbound;
}

export function postV2LogsQueryEvalsPromptTokensDetailsToJSON(
  postV2LogsQueryEvalsPromptTokensDetails:
    PostV2LogsQueryEvalsPromptTokensDetails,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsPromptTokensDetails$outboundSchema.parse(
      postV2LogsQueryEvalsPromptTokensDetails,
    ),
  );
}

export function postV2LogsQueryEvalsPromptTokensDetailsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsPromptTokensDetails,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsPromptTokensDetails$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsPromptTokensDetails' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsCompletionTokensDetails$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsCompletionTokensDetails,
    z.ZodTypeDef,
    unknown
  > = z.object({
    reasoning_tokens: z.number().optional(),
  }).transform((v) => {
    return remap$(v, {
      "reasoning_tokens": "reasoningTokens",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsCompletionTokensDetails$Outbound = {
  reasoning_tokens?: number | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsCompletionTokensDetails$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsCompletionTokensDetails$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsCompletionTokensDetails
  > = z.object({
    reasoningTokens: z.number().optional(),
  }).transform((v) => {
    return remap$(v, {
      reasoningTokens: "reasoning_tokens",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsCompletionTokensDetails$ {
  /** @deprecated use `PostV2LogsQueryEvalsCompletionTokensDetails$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsCompletionTokensDetails$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsCompletionTokensDetails$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsCompletionTokensDetails$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsCompletionTokensDetails$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsCompletionTokensDetails$Outbound;
}

export function postV2LogsQueryEvalsCompletionTokensDetailsToJSON(
  postV2LogsQueryEvalsCompletionTokensDetails:
    PostV2LogsQueryEvalsCompletionTokensDetails,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsCompletionTokensDetails$outboundSchema.parse(
      postV2LogsQueryEvalsCompletionTokensDetails,
    ),
  );
}

export function postV2LogsQueryEvalsCompletionTokensDetailsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsCompletionTokensDetails,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsCompletionTokensDetails$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsCompletionTokensDetails' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONUsage$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONUsage,
    z.ZodTypeDef,
    unknown
  > = z.object({
    total_tokens: z.number().optional(),
    prompt_tokens: z.number().optional(),
    completion_tokens: z.number().optional(),
    prompt_tokens_details: z.lazy(() =>
      PostV2LogsQueryEvalsPromptTokensDetails$inboundSchema
    ).optional(),
    completion_tokens_details: z.lazy(() =>
      PostV2LogsQueryEvalsCompletionTokensDetails$inboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "total_tokens": "totalTokens",
      "prompt_tokens": "promptTokens",
      "completion_tokens": "completionTokens",
      "prompt_tokens_details": "promptTokensDetails",
      "completion_tokens_details": "completionTokensDetails",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONUsage$Outbound = {
  total_tokens?: number | undefined;
  prompt_tokens?: number | undefined;
  completion_tokens?: number | undefined;
  prompt_tokens_details?:
    | PostV2LogsQueryEvalsPromptTokensDetails$Outbound
    | undefined;
  completion_tokens_details?:
    | PostV2LogsQueryEvalsCompletionTokensDetails$Outbound
    | undefined;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONUsage$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONUsage$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONUsage
  > = z.object({
    totalTokens: z.number().optional(),
    promptTokens: z.number().optional(),
    completionTokens: z.number().optional(),
    promptTokensDetails: z.lazy(() =>
      PostV2LogsQueryEvalsPromptTokensDetails$outboundSchema
    ).optional(),
    completionTokensDetails: z.lazy(() =>
      PostV2LogsQueryEvalsCompletionTokensDetails$outboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      totalTokens: "total_tokens",
      promptTokens: "prompt_tokens",
      completionTokens: "completion_tokens",
      promptTokensDetails: "prompt_tokens_details",
      completionTokensDetails: "completion_tokens_details",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONUsage$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONUsage$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONUsage$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONUsage$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONUsage$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONUsage$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONUsage$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONUsageToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONUsage:
    PostV2LogsQueryEvalsResponse200ApplicationJSONUsage,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONUsage$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ApplicationJSONUsage,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONUsageFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONUsage,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONUsage$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONUsage' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsBilling$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsBilling,
  z.ZodTypeDef,
  unknown
> = z.object({
  total_cost: z.nullable(z.number()).optional(),
  input_cost: z.nullable(z.number()).optional(),
  output_cost: z.nullable(z.number()).optional(),
  billable: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    "total_cost": "totalCost",
    "input_cost": "inputCost",
    "output_cost": "outputCost",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsBilling$Outbound = {
  total_cost?: number | null | undefined;
  input_cost?: number | null | undefined;
  output_cost?: number | null | undefined;
  billable: boolean;
};

/** @internal */
export const PostV2LogsQueryEvalsBilling$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsBilling$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsBilling
> = z.object({
  totalCost: z.nullable(z.number()).optional(),
  inputCost: z.nullable(z.number()).optional(),
  outputCost: z.nullable(z.number()).optional(),
  billable: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    totalCost: "total_cost",
    inputCost: "input_cost",
    outputCost: "output_cost",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsBilling$ {
  /** @deprecated use `PostV2LogsQueryEvalsBilling$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsBilling$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsBilling$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsBilling$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsBilling$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsBilling$Outbound;
}

export function postV2LogsQueryEvalsBillingToJSON(
  postV2LogsQueryEvalsBilling: PostV2LogsQueryEvalsBilling,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsBilling$outboundSchema.parse(
      postV2LogsQueryEvalsBilling,
    ),
  );
}

export function postV2LogsQueryEvalsBillingFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsBilling, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsBilling$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsBilling' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunDataType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunDataType
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunDataType,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunDataType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunDataType
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunDataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunDataType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunDataType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunDataType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunDataType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunDataType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONParameters$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONParameters,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunDataType$inboundSchema,
    properties: z.record(z.any()),
    required: z.array(z.string()).optional(),
    additionalProperties: z.boolean().optional(),
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONParameters$Outbound =
  {
    type: string;
    properties: { [k: string]: any };
    required?: Array<string> | undefined;
    additionalProperties?: boolean | undefined;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONParameters$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONParameters$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONParameters
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17WorkflowRunDataType$outboundSchema,
    properties: z.record(z.any()),
    required: z.array(z.string()).optional(),
    additionalProperties: z.boolean().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONParameters$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONParameters$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONParameters$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONParameters$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONParameters$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONParameters$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONParameters$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONParametersToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONParameters:
    PostV2LogsQueryEvalsResponse200ApplicationJSONParameters,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONParameters$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONParameters),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONParametersFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONParameters,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONParameters$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONParameters' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONFunction$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONFunction,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    description: z.string().optional(),
    strict: z.boolean().optional(),
    parameters: z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONParameters$inboundSchema
    ),
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONFunction$Outbound = {
  name: string;
  description?: string | undefined;
  strict?: boolean | undefined;
  parameters: PostV2LogsQueryEvalsResponse200ApplicationJSONParameters$Outbound;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONFunction$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONFunction$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONFunction
  > = z.object({
    name: z.string(),
    description: z.string().optional(),
    strict: z.boolean().optional(),
    parameters: z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONParameters$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONFunction$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONFunction$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONFunction$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONFunction$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONFunction$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONFunction$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONFunction$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONFunctionToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONFunction:
    PostV2LogsQueryEvalsResponse200ApplicationJSONFunction,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONFunction$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ApplicationJSONFunction,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONFunctionFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONFunction,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONFunction$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONFunction' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONTools$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONTools,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17Type$inboundSchema,
    function: z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONFunction$inboundSchema
    ),
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONTools$Outbound = {
  type: string;
  function: PostV2LogsQueryEvalsResponse200ApplicationJSONFunction$Outbound;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONTools$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONTools$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONTools
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems17Type$outboundSchema,
    function: z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONFunction$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONTools$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONTools$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONTools$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONTools$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONTools$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONTools$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONTools$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONToolsToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONTools:
    PostV2LogsQueryEvalsResponse200ApplicationJSONTools,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONTools$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ApplicationJSONTools,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONToolsFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONTools,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONTools$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONTools' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsPromptSnippets$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsPromptSnippets,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  key: z.string(),
  value: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
  });
});

/** @internal */
export type PostV2LogsQueryEvalsPromptSnippets$Outbound = {
  _id: string;
  key: string;
  value: string;
};

/** @internal */
export const PostV2LogsQueryEvalsPromptSnippets$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsPromptSnippets$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsPromptSnippets
> = z.object({
  id: z.string(),
  key: z.string(),
  value: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsPromptSnippets$ {
  /** @deprecated use `PostV2LogsQueryEvalsPromptSnippets$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsPromptSnippets$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsPromptSnippets$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsPromptSnippets$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsPromptSnippets$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsPromptSnippets$Outbound;
}

export function postV2LogsQueryEvalsPromptSnippetsToJSON(
  postV2LogsQueryEvalsPromptSnippets: PostV2LogsQueryEvalsPromptSnippets,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsPromptSnippets$outboundSchema.parse(
      postV2LogsQueryEvalsPromptSnippets,
    ),
  );
}

export function postV2LogsQueryEvalsPromptSnippetsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsPromptSnippets, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsPromptSnippets$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsPromptSnippets' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONData$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONData,
    z.ZodTypeDef,
    unknown
  > = z.object({
    choices: z.array(
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONChoices$inboundSchema
      ),
    ).optional(),
    action: PostV2LogsQueryEvalsResponse200ApplicationJSONAction$inboundSchema,
    prompt_config: z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig$inboundSchema
    ),
    variables: z.array(
      z.lazy(() => PostV2LogsQueryEvalsVariables$inboundSchema),
    ),
    performance: z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONPerformance$inboundSchema
    ).optional(),
    usage: z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONUsage$inboundSchema
    ).optional(),
    billing: z.lazy(() => PostV2LogsQueryEvalsBilling$inboundSchema).optional(),
    tools: z.array(
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONTools$inboundSchema
      ),
    ).optional(),
    prompt_snippets: z.array(
      z.lazy(() => PostV2LogsQueryEvalsPromptSnippets$inboundSchema),
    ),
  }).transform((v) => {
    return remap$(v, {
      "prompt_config": "promptConfig",
      "prompt_snippets": "promptSnippets",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONData$Outbound = {
  choices?:
    | Array<PostV2LogsQueryEvalsResponse200ApplicationJSONChoices$Outbound>
    | undefined;
  action: string;
  prompt_config:
    PostV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig$Outbound;
  variables: Array<PostV2LogsQueryEvalsVariables$Outbound>;
  performance?:
    | PostV2LogsQueryEvalsResponse200ApplicationJSONPerformance$Outbound
    | undefined;
  usage?:
    | PostV2LogsQueryEvalsResponse200ApplicationJSONUsage$Outbound
    | undefined;
  billing?: PostV2LogsQueryEvalsBilling$Outbound | undefined;
  tools?:
    | Array<PostV2LogsQueryEvalsResponse200ApplicationJSONTools$Outbound>
    | undefined;
  prompt_snippets: Array<PostV2LogsQueryEvalsPromptSnippets$Outbound>;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONData$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONData$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONData
  > = z.object({
    choices: z.array(
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONChoices$outboundSchema
      ),
    ).optional(),
    action: PostV2LogsQueryEvalsResponse200ApplicationJSONAction$outboundSchema,
    promptConfig: z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONPromptConfig$outboundSchema
    ),
    variables: z.array(
      z.lazy(() => PostV2LogsQueryEvalsVariables$outboundSchema),
    ),
    performance: z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONPerformance$outboundSchema
    ).optional(),
    usage: z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONUsage$outboundSchema
    ).optional(),
    billing: z.lazy(() => PostV2LogsQueryEvalsBilling$outboundSchema)
      .optional(),
    tools: z.array(
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONTools$outboundSchema
      ),
    ).optional(),
    promptSnippets: z.array(
      z.lazy(() => PostV2LogsQueryEvalsPromptSnippets$outboundSchema),
    ),
  }).transform((v) => {
    return remap$(v, {
      promptConfig: "prompt_config",
      promptSnippets: "prompt_snippets",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONData$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONData$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONData$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONData$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONData$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONData$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONData$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONDataToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONData:
    PostV2LogsQueryEvalsResponse200ApplicationJSONData,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONData$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ApplicationJSONData,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONDataFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONData,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONData$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONData' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200WorkflowRun$inboundSchema:
  z.ZodType<PostV2LogsQueryEvalsResponse200WorkflowRun, z.ZodTypeDef, unknown> =
    z.object({
      id: z.string(),
      workflow_metadata: z.record(z.any()).optional(),
      workflow_input: z.record(z.any()).optional(),
      workflow_output: z.record(z.any()).optional(),
      request_properties: z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties$inboundSchema
      ).optional(),
      started_at: z.string().datetime({ offset: true }).transform(v =>
        new Date(v)
      ),
      finished_at: z.string().datetime({ offset: true }).transform(v =>
        new Date(v)
      ).optional(),
      product_type:
        PostV2LogsQueryEvalsResponse200ApplicationJSONProductType$inboundSchema,
      related_entities: z.array(
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71$inboundSchema
        ),
      ),
      evals: z.array(
        z.union([
          z.lazy(() =>
            PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11$inboundSchema
          ),
          z.lazy(() =>
            PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12$inboundSchema
          ),
          z.lazy(() =>
            PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13$inboundSchema
          ),
          z.lazy(() =>
            PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14$inboundSchema
          ),
        ]),
      ),
      data: z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJSONData$inboundSchema
      ),
    }).transform((v) => {
      return remap$(v, {
        "workflow_metadata": "workflowMetadata",
        "workflow_input": "workflowInput",
        "workflow_output": "workflowOutput",
        "request_properties": "requestProperties",
        "started_at": "startedAt",
        "finished_at": "finishedAt",
        "product_type": "productType",
        "related_entities": "relatedEntities",
      });
    });

/** @internal */
export type PostV2LogsQueryEvalsResponse200WorkflowRun$Outbound = {
  id: string;
  workflow_metadata?: { [k: string]: any } | undefined;
  workflow_input?: { [k: string]: any } | undefined;
  workflow_output?: { [k: string]: any } | undefined;
  request_properties?:
    | PostV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties$Outbound
    | undefined;
  started_at: string;
  finished_at?: string | undefined;
  product_type: string;
  related_entities: Array<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71$Outbound
  >;
  evals: Array<
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11$Outbound
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12$Outbound
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13$Outbound
    | PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14$Outbound
  >;
  data: PostV2LogsQueryEvalsResponse200ApplicationJSONData$Outbound;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200WorkflowRun$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200WorkflowRun$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200WorkflowRun
  > = z.object({
    id: z.string(),
    workflowMetadata: z.record(z.any()).optional(),
    workflowInput: z.record(z.any()).optional(),
    workflowOutput: z.record(z.any()).optional(),
    requestProperties: z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONRequestProperties$outboundSchema
    ).optional(),
    startedAt: z.date().transform(v => v.toISOString()),
    finishedAt: z.date().transform(v => v.toISOString()).optional(),
    productType:
      PostV2LogsQueryEvalsResponse200ApplicationJSONProductType$outboundSchema,
    relatedEntities: z.array(
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals71$outboundSchema
      ),
    ),
    evals: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems11$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems13$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems14$outboundSchema
        ),
      ]),
    ),
    data: z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONData$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      workflowMetadata: "workflow_metadata",
      workflowInput: "workflow_input",
      workflowOutput: "workflow_output",
      requestProperties: "request_properties",
      startedAt: "started_at",
      finishedAt: "finished_at",
      productType: "product_type",
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200WorkflowRun$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200WorkflowRun$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200WorkflowRun$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200WorkflowRun$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200WorkflowRun$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200WorkflowRun$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse200WorkflowRun$Outbound;
}

export function postV2LogsQueryEvalsResponse200WorkflowRunToJSON(
  postV2LogsQueryEvalsResponse200WorkflowRun:
    PostV2LogsQueryEvalsResponse200WorkflowRun,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200WorkflowRun$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200WorkflowRun,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200WorkflowRunFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200WorkflowRun,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200WorkflowRun$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200WorkflowRun' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyStatus
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyStatus,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyStatus
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyStatus$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyStatus$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyStatus$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals74Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals73Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals72Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals7Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyRelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyRelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyRelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyRelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyRelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyRelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyRelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyRelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyRelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyRelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyRelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyRelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyRelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyRelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyRelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyRelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyRelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyRelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyRelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyRelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyRelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyRelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJson7$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJson7,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsType$inboundSchema,
    workflow_run: z.lazy(() =>
      PostV2LogsQueryEvalsResponse200WorkflowRun$inboundSchema
    ),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyStatus$inboundSchema,
    timestamp: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4$inboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      "workflow_run": "workflowRun",
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJson7$Outbound = {
  type: string;
  workflow_run: PostV2LogsQueryEvalsResponse200WorkflowRun$Outbound;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJson7$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJson7$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJson7
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsType$outboundSchema,
    workflowRun: z.lazy(() =>
      PostV2LogsQueryEvalsResponse200WorkflowRun$outboundSchema
    ),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyStatus$outboundSchema,
    timestamp: z.date().transform(v => v.toISOString()),
    relatedEntities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems2$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems3$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems4$outboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      workflowRun: "workflow_run",
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJson7$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJson7$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJson7$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJson7$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJson7$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJson7$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJson7$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJson7ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJson7:
    PostV2LogsQueryEvalsResponse200ApplicationJson7,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJson7$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ApplicationJson7,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJson7FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJson7,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJson7$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJson7' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyType
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsValue$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsValue,
  z.ZodTypeDef,
  unknown
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/** @internal */
export type PostV2LogsQueryEvalsValue$Outbound = {
  f1: number;
  precision: number;
  recall: number;
};

/** @internal */
export const PostV2LogsQueryEvalsValue$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsValue$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsValue
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsValue$ {
  /** @deprecated use `PostV2LogsQueryEvalsValue$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsValue$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsValue$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsValue$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsValue$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsValue$Outbound;
}

export function postV2LogsQueryEvalsValueToJSON(
  postV2LogsQueryEvalsValue: PostV2LogsQueryEvalsValue,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsValue$outboundSchema.parse(postV2LogsQueryEvalsValue),
  );
}

export function postV2LogsQueryEvalsValueFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryEvalsValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsValue' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONStatus$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200ApplicationJSONStatus> =
    z.nativeEnum(PostV2LogsQueryEvalsResponse200ApplicationJSONStatus);

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONStatus$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200ApplicationJSONStatus> =
    PostV2LogsQueryEvalsResponse200ApplicationJSONStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONStatus$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONStatus$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONStatus$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONStatus$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals64Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals64Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals64Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals64Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals64Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals64Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals64Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals64Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals64Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals64Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals64Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals64Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals64Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals63Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals63Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals63Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals63Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals63Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals63Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals63Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals63Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals63Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals63Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals63Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals63Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals63Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals62Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals62Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals62Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals62Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals62Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals62Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals62Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals62Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals62Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals62Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals62Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals62Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals62Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals6Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals6Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals6Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals6Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals6Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals6Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals6Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals6Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals6Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals6Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals6Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals6Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals6Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONRelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONRelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONRelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONRelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONRelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONRelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONRelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONRelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONRelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONRelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONRelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONRelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONRelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONRelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONRelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONRelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONRelatedEntities$outboundSchema
      .parse(postV2LogsQueryEvalsResponse200ApplicationJSONRelatedEntities),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONRelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONRelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONRelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONRelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJson6$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJson6,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema,
    value: z.lazy(() => PostV2LogsQueryEvalsValue$inboundSchema),
    id: z.string(),
    status: PostV2LogsQueryEvalsResponse200ApplicationJSONStatus$inboundSchema,
    timestamp: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4$inboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJson6$Outbound = {
  type: string;
  value: PostV2LogsQueryEvalsValue$Outbound;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJson6$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJson6$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJson6
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema,
    value: z.lazy(() => PostV2LogsQueryEvalsValue$outboundSchema),
    id: z.string(),
    status: PostV2LogsQueryEvalsResponse200ApplicationJSONStatus$outboundSchema,
    timestamp: z.date().transform(v => v.toISOString()),
    relatedEntities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody1$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody2$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody3$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBody4$outboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJson6$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJson6$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJson6$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJson6$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJson6$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJson6$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJson6$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJson6ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJson6:
    PostV2LogsQueryEvalsResponse200ApplicationJson6,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJson6$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ApplicationJson6,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJson6FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJson6,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJson6$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJson6' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200ApplicationJSONType> = z
    .nativeEnum(PostV2LogsQueryEvalsResponse200ApplicationJSONType);

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200ApplicationJSONType> =
    PostV2LogsQueryEvalsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200Rouge1$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Rouge1,
  z.ZodTypeDef,
  unknown
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/** @internal */
export type PostV2LogsQueryEvalsResponse200Rouge1$Outbound = {
  f1: number;
  precision: number;
  recall: number;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200Rouge1$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Rouge1$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse200Rouge1
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200Rouge1$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Rouge1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200Rouge1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Rouge1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200Rouge1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Rouge1$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse200Rouge1$Outbound;
}

export function postV2LogsQueryEvalsResponse200Rouge1ToJSON(
  postV2LogsQueryEvalsResponse200Rouge1: PostV2LogsQueryEvalsResponse200Rouge1,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200Rouge1$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200Rouge1,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200Rouge1FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse200Rouge1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200Rouge1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200Rouge1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200Rouge2$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Rouge2,
  z.ZodTypeDef,
  unknown
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/** @internal */
export type PostV2LogsQueryEvalsResponse200Rouge2$Outbound = {
  f1: number;
  precision: number;
  recall: number;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200Rouge2$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200Rouge2$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse200Rouge2
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200Rouge2$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Rouge2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200Rouge2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Rouge2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200Rouge2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Rouge2$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse200Rouge2$Outbound;
}

export function postV2LogsQueryEvalsResponse200Rouge2ToJSON(
  postV2LogsQueryEvalsResponse200Rouge2: PostV2LogsQueryEvalsResponse200Rouge2,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200Rouge2$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200Rouge2,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200Rouge2FromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse200Rouge2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200Rouge2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200Rouge2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200RougeL$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200RougeL,
  z.ZodTypeDef,
  unknown
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/** @internal */
export type PostV2LogsQueryEvalsResponse200RougeL$Outbound = {
  f1: number;
  precision: number;
  recall: number;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200RougeL$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsResponse200RougeL$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsResponse200RougeL
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200RougeL$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200RougeL$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200RougeL$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200RougeL$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200RougeL$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200RougeL$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponse200RougeL$Outbound;
}

export function postV2LogsQueryEvalsResponse200RougeLToJSON(
  postV2LogsQueryEvalsResponse200RougeL: PostV2LogsQueryEvalsResponse200RougeL,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200RougeL$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200RougeL,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200RougeLFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsResponse200RougeL, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200RougeL$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200RougeL' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value,
    z.ZodTypeDef,
    unknown
  > = z.object({
    rouge_1: z.lazy(() => PostV2LogsQueryEvalsResponse200Rouge1$inboundSchema),
    rouge_2: z.lazy(() => PostV2LogsQueryEvalsResponse200Rouge2$inboundSchema),
    rouge_l: z.lazy(() => PostV2LogsQueryEvalsResponse200RougeL$inboundSchema),
  }).transform((v) => {
    return remap$(v, {
      "rouge_1": "rouge1",
      "rouge_2": "rouge2",
      "rouge_l": "rougeL",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value$Outbound =
  {
    rouge_1: PostV2LogsQueryEvalsResponse200Rouge1$Outbound;
    rouge_2: PostV2LogsQueryEvalsResponse200Rouge2$Outbound;
    rouge_l: PostV2LogsQueryEvalsResponse200RougeL$Outbound;
  };

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value
  > = z.object({
    rouge1: z.lazy(() => PostV2LogsQueryEvalsResponse200Rouge1$outboundSchema),
    rouge2: z.lazy(() => PostV2LogsQueryEvalsResponse200Rouge2$outboundSchema),
    rougeL: z.lazy(() => PostV2LogsQueryEvalsResponse200RougeL$outboundSchema),
  }).transform((v) => {
    return remap$(v, {
      rouge1: "rouge_1",
      rouge2: "rouge_2",
      rougeL: "rouge_l",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1ValueToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1ValueFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200Status$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200Status> = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200Status$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200Status> =
    PostV2LogsQueryEvalsResponse200Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals54Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals54Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals54Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals54Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals54Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals54Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals54Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals54Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals54Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals54Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals54Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals54Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals54Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJson4ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJson4:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4$outboundSchema
      .parse(postV2LogsQueryRelatedEntitiesResponse200ApplicationJson4),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJson4FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals5Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals5Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals5Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals5Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals5Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals5Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals5Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals5Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals5Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals5Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals5Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals5Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals5Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200RelatedEntities:
    PostV2LogsQueryEvalsResponse200RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200RelatedEntities$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200RelatedEntities,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200RelatedEntities$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJson5$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJson5,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type: PostV2LogsQueryEvalsResponse200ApplicationJSONType$inboundSchema,
    value: z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value$inboundSchema
    ),
    id: z.string(),
    status: PostV2LogsQueryEvalsResponse200Status$inboundSchema,
    timestamp: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4$inboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJson5$Outbound = {
  type: string;
  value:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value$Outbound;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJson5$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJson5$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJson5
  > = z.object({
    type: PostV2LogsQueryEvalsResponse200ApplicationJSONType$outboundSchema,
    value: z.lazy(() =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Value$outboundSchema
    ),
    id: z.string(),
    status: PostV2LogsQueryEvalsResponse200Status$outboundSchema,
    timestamp: z.date().transform(v => v.toISOString()),
    relatedEntities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals51$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals52$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals53$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson4$outboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJson5$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJson5$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJson5$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJson5$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJson5$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJson5$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJson5$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJson5ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJson5:
    PostV2LogsQueryEvalsResponse200ApplicationJson5,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJson5$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ApplicationJson5,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJson5FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJson5,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJson5$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJson5' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200Type$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsResponse200Type
> = z.nativeEnum(PostV2LogsQueryEvalsResponse200Type);

/** @internal */
export const PostV2LogsQueryEvalsResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryEvalsResponse200Type> =
    PostV2LogsQueryEvalsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponseStatus$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsResponseStatus
> = z.nativeEnum(PostV2LogsQueryEvalsResponseStatus);

/** @internal */
export const PostV2LogsQueryEvalsResponseStatus$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsResponseStatus
> = PostV2LogsQueryEvalsResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseStatus$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseStatus$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponseStatus$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseStatus$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseStatus$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseRelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponseRelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponseRelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponseRelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponseRelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponseRelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseRelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseRelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponseRelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseRelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponseRelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseRelatedEntities$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsResponseRelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponseRelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponseRelatedEntities:
    PostV2LogsQueryEvalsResponseRelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponseRelatedEntities$outboundSchema.parse(
      postV2LogsQueryEvalsResponseRelatedEntities,
    ),
  );
}

export function postV2LogsQueryEvalsResponseRelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponseRelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponseRelatedEntities$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponseRelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJson4$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJson4,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type: PostV2LogsQueryEvalsResponse200Type$inboundSchema,
    values: z.array(z.string()),
    id: z.string(),
    status: PostV2LogsQueryEvalsResponseStatus$inboundSchema,
    timestamp: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44$inboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJson4$Outbound = {
  type: string;
  values: Array<string>;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJson4$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJson4$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJson4
  > = z.object({
    type: PostV2LogsQueryEvalsResponse200Type$outboundSchema,
    values: z.array(z.string()),
    id: z.string(),
    status: PostV2LogsQueryEvalsResponseStatus$outboundSchema,
    timestamp: z.date().transform(v => v.toISOString()),
    relatedEntities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals41$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals42$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals43$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals44$outboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJson4$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJson4$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJson4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJson4$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJson4$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJson4$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJson4$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJson4ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJson4:
    PostV2LogsQueryEvalsResponse200ApplicationJson4,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJson4$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ApplicationJson4,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJson4FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJson4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJson4$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJson4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponseType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsResponseType
> = z.nativeEnum(PostV2LogsQueryEvalsResponseType);

/** @internal */
export const PostV2LogsQueryEvalsResponseType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsResponseType
> = PostV2LogsQueryEvalsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponseType$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponseType$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsResponseType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponseType$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsResponseType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsStatus$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsStatus
> = z.nativeEnum(PostV2LogsQueryEvalsStatus);

/** @internal */
export const PostV2LogsQueryEvalsStatus$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsStatus
> = PostV2LogsQueryEvalsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsStatus$ {
  /** @deprecated use `PostV2LogsQueryEvalsStatus$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsStatus$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsStatus$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsStatus$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1EvalsType$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1EvalsType
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1EvalsType,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1EvalsType$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1EvalsType
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1EvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1EvalsType$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1EvalsType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1EvalsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1EvalsType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1EvalsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1EvalsType$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1EvalsType$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsRelatedEntities$inboundSchema: z.ZodType<
  PostV2LogsQueryEvalsRelatedEntities,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() =>
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31$inboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32$inboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33$inboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34$inboundSchema
  ),
]);

/** @internal */
export type PostV2LogsQueryEvalsRelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsRelatedEntities$outboundSchema: z.ZodType<
  PostV2LogsQueryEvalsRelatedEntities$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryEvalsRelatedEntities
> = z.union([
  z.lazy(() =>
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31$outboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32$outboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33$outboundSchema
  ),
  z.lazy(() =>
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34$outboundSchema
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsRelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsRelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsRelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsRelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsRelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsRelatedEntities$Outbound` instead. */
  export type Outbound = PostV2LogsQueryEvalsRelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsRelatedEntitiesToJSON(
  postV2LogsQueryEvalsRelatedEntities: PostV2LogsQueryEvalsRelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsRelatedEntities$outboundSchema.parse(
      postV2LogsQueryEvalsRelatedEntities,
    ),
  );
}

export function postV2LogsQueryEvalsRelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryEvalsRelatedEntities, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsRelatedEntities$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsRelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJson3$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJson3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type: PostV2LogsQueryEvalsResponseType$inboundSchema,
    value: z.boolean(),
    id: z.string(),
    status: PostV2LogsQueryEvalsStatus$inboundSchema,
    timestamp: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34$inboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJson3$Outbound = {
  type: string;
  value: boolean;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJson3$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJson3$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJson3
  > = z.object({
    type: PostV2LogsQueryEvalsResponseType$outboundSchema,
    value: z.boolean(),
    id: z.string(),
    status: PostV2LogsQueryEvalsStatus$outboundSchema,
    timestamp: z.date().transform(v => v.toISOString()),
    relatedEntities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals31$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals32$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals33$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals34$outboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJson3$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJson3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJson3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJson3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJson3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJson3$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJson3$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJson3ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJson3:
    PostV2LogsQueryEvalsResponse200ApplicationJson3,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJson3$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ApplicationJson3,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJson3FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJson3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJson3$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJson3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsType
> = z.nativeEnum(PostV2LogsQueryEvalsType);

/** @internal */
export const PostV2LogsQueryEvalsType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryEvalsType
> = PostV2LogsQueryEvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsType$ {
  /** @deprecated use `PostV2LogsQueryEvalsType$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryEvalsType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsType$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryEvalsType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals24Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals24Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals24Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals24Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals24Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals24Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals24Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals24Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals24Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals24Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals24Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals24Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals24Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals23Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals23Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals23Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals23Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals23Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals23Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals23Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals23Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals23Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals23Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals23Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals23Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals23Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals22Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals22Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals22Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals22Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals22Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals22Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals22Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals22Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals22Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals22Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals22Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals22Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals22Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1RelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1RelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1RelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1RelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1RelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1RelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJson2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJson2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type: PostV2LogsQueryEvalsType$inboundSchema,
    value: z.number(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12Status$inboundSchema,
    timestamp: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4$inboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJson2$Outbound = {
  type: string;
  value: number;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJson2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJson2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJson2
  > = z.object({
    type: PostV2LogsQueryEvalsType$outboundSchema,
    value: z.number(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems12Status$outboundSchema,
    timestamp: z.date().transform(v => v.toISOString()),
    relatedEntities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals2$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals3$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals4$outboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJson2$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJson2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJson2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJson2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJson2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJson2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJson2$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJson2ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJson2:
    PostV2LogsQueryEvalsResponse200ApplicationJson2,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJson2$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ApplicationJson2,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJson2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJson2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJson2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJson2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Type
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Type,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Type
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Type$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Status$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Status
  > = z.nativeEnum(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Status,
  );

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Status$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Status
  > =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Status$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Status$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Status$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Status$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Status$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals14Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals14Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals14Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals14Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals14Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals14Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals14Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals14Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals14Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals14Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals14Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals14Type$inboundSchema,
    evaluator_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "evaluator_id": "evaluatorId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14$Outbound =
  {
    type: string;
    evaluator_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals14Type$outboundSchema,
    evaluatorId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      evaluatorId: "evaluator_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals13Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals13Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals13Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals13Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals13Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals13Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals13Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals13Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals13Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals13Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals13Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals13Type$inboundSchema,
    human_eval_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "human_eval_id": "humanEvalId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13$Outbound =
  {
    type: string;
    human_eval_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals13Type$outboundSchema,
    humanEvalId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      humanEvalId: "human_eval_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals12Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals12Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals12Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals12Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals12Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals12Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals12Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals12Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals12Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals12Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals12Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals12Type$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals12Type$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1Type$inboundSchema,
    account_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11$Outbound =
  {
    type: string;
    account_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Evals1Type$outboundSchema,
    accountId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11$outboundSchema
      .parse(
        postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11,
      ),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsRelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsRelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsRelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14$Outbound;

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsRelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsRelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsRelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsRelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsRelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsRelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsRelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsRelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsRelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsRelatedEntities$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsRelatedEntitiesToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsRelatedEntities:
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsRelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsRelatedEntities$outboundSchema
      .parse(
        postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsRelatedEntities,
      ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsRelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsRelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsRelatedEntities$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItemsRelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJson1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJson1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Type$inboundSchema,
    value: z.string(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Status$inboundSchema,
    timestamp: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14$inboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type PostV2LogsQueryEvalsResponse200ApplicationJson1$Outbound = {
  type: string;
  value: string;
  id: string;
  status: string;
  timestamp: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14$Outbound
  >;
};

/** @internal */
export const PostV2LogsQueryEvalsResponse200ApplicationJson1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryEvalsResponse200ApplicationJson1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryEvalsResponse200ApplicationJson1
  > = z.object({
    type:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Type$outboundSchema,
    value: z.string(),
    id: z.string(),
    status:
      PostV2LogsQueryEvalsResponse200ApplicationJSONResponseBodyItems1Status$outboundSchema,
    timestamp: z.date().transform(v => v.toISOString()),
    relatedEntities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems11$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems12$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems13$outboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems14$outboundSchema
        ),
      ]),
    ),
  }).transform((v) => {
    return remap$(v, {
      relatedEntities: "related_entities",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryEvalsResponse200ApplicationJson1$ {
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJson1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJson1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJson1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryEvalsResponse200ApplicationJson1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryEvalsResponse200ApplicationJson1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryEvalsResponse200ApplicationJson1$Outbound;
}

export function postV2LogsQueryEvalsResponse200ApplicationJson1ToJSON(
  postV2LogsQueryEvalsResponse200ApplicationJson1:
    PostV2LogsQueryEvalsResponse200ApplicationJson1,
): string {
  return JSON.stringify(
    PostV2LogsQueryEvalsResponse200ApplicationJson1$outboundSchema.parse(
      postV2LogsQueryEvalsResponse200ApplicationJson1,
    ),
  );
}

export function postV2LogsQueryEvalsResponse200ApplicationJson1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryEvalsResponse200ApplicationJson1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryEvalsResponse200ApplicationJson1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryEvalsResponse200ApplicationJson1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponse200Evals$inboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponse200Evals,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2LogsQueryEvalsResponse200ApplicationJson1$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse200ApplicationJson2$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse200ApplicationJson3$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse200ApplicationJson4$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse200ApplicationJson5$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse200ApplicationJson6$inboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse200ApplicationJson7$inboundSchema),
]);

/** @internal */
export type PostV2LogsQueryItemsResponse200Evals$Outbound =
  | PostV2LogsQueryEvalsResponse200ApplicationJson1$Outbound
  | PostV2LogsQueryEvalsResponse200ApplicationJson2$Outbound
  | PostV2LogsQueryEvalsResponse200ApplicationJson3$Outbound
  | PostV2LogsQueryEvalsResponse200ApplicationJson4$Outbound
  | PostV2LogsQueryEvalsResponse200ApplicationJson5$Outbound
  | PostV2LogsQueryEvalsResponse200ApplicationJson6$Outbound
  | PostV2LogsQueryEvalsResponse200ApplicationJson7$Outbound;

/** @internal */
export const PostV2LogsQueryItemsResponse200Evals$outboundSchema: z.ZodType<
  PostV2LogsQueryItemsResponse200Evals$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryItemsResponse200Evals
> = z.union([
  z.lazy(() => PostV2LogsQueryEvalsResponse200ApplicationJson1$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse200ApplicationJson2$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse200ApplicationJson3$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse200ApplicationJson4$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse200ApplicationJson5$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse200ApplicationJson6$outboundSchema),
  z.lazy(() => PostV2LogsQueryEvalsResponse200ApplicationJson7$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponse200Evals$ {
  /** @deprecated use `PostV2LogsQueryItemsResponse200Evals$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponse200Evals$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200Evals$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponse200Evals$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200Evals$Outbound` instead. */
  export type Outbound = PostV2LogsQueryItemsResponse200Evals$Outbound;
}

export function postV2LogsQueryItemsResponse200EvalsToJSON(
  postV2LogsQueryItemsResponse200Evals: PostV2LogsQueryItemsResponse200Evals,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponse200Evals$outboundSchema.parse(
      postV2LogsQueryItemsResponse200Evals,
    ),
  );
}

export function postV2LogsQueryItemsResponse200EvalsFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryItemsResponse200Evals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponse200Evals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryItemsResponse200Evals' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponse200ProductType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsResponse200ProductType> = z
    .nativeEnum(PostV2LogsQueryItemsResponse200ProductType);

/** @internal */
export const PostV2LogsQueryItemsResponse200ProductType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsResponse200ProductType> =
    PostV2LogsQueryItemsResponse200ProductType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponse200ProductType$ {
  /** @deprecated use `PostV2LogsQueryItemsResponse200ProductType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponse200ProductType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200ProductType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponse200ProductType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponseType$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryRelatedEntitiesResponseType> = z
    .nativeEnum(PostV2LogsQueryRelatedEntitiesResponseType);

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponseType$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryRelatedEntitiesResponseType> =
    PostV2LogsQueryRelatedEntitiesResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponseType$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponseType$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponseType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponseType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponseType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type: PostV2LogsQueryRelatedEntitiesResponseType$inboundSchema,
    contact_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "contact_id": "contactId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3$Outbound =
  {
    type: string;
    contact_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3
  > = z.object({
    type: PostV2LogsQueryRelatedEntitiesResponseType$outboundSchema,
    contactId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      contactId: "contact_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJson3ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJson3:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3$outboundSchema
      .parse(postV2LogsQueryRelatedEntitiesResponse200ApplicationJson3),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJson3FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryRelatedEntitiesType
> = z.nativeEnum(PostV2LogsQueryRelatedEntitiesType);

/** @internal */
export const PostV2LogsQueryRelatedEntitiesType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2LogsQueryRelatedEntitiesType
> = PostV2LogsQueryRelatedEntitiesType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesType$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesType$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryRelatedEntitiesType$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesType$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type: PostV2LogsQueryRelatedEntitiesType$inboundSchema,
    remote_config_variant_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "remote_config_variant_id": "remoteConfigVariantId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2$Outbound =
  {
    type: string;
    remote_config_variant_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2
  > = z.object({
    type: PostV2LogsQueryRelatedEntitiesType$outboundSchema,
    remoteConfigVariantId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      remoteConfigVariantId: "remote_config_variant_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJson2ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJson2:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2$outboundSchema
      .parse(postV2LogsQueryRelatedEntitiesResponse200ApplicationJson2),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJson2FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Type$inboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Type
  > = z.nativeEnum(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Type,
  );

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Type$outboundSchema:
  z.ZodNativeEnum<
    typeof PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Type
  > =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Type$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Type$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Type$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Type$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Type$outboundSchema;
}

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1$inboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Type$inboundSchema,
    remote_config_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "remote_config_id": "remoteConfigId",
    });
  });

/** @internal */
export type PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1$Outbound =
  {
    type: string;
    remote_config_id: string;
  };

/** @internal */
export const PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1$outboundSchema:
  z.ZodType<
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1
  > = z.object({
    type:
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJSONResponseBodyItems1Type$outboundSchema,
    remoteConfigId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      remoteConfigId: "remote_config_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1$ {
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1$inboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1$outboundSchema;
  /** @deprecated use `PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1$Outbound;
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJson1ToJSON(
  postV2LogsQueryRelatedEntitiesResponse200ApplicationJson1:
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1,
): string {
  return JSON.stringify(
    PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1$outboundSchema
      .parse(postV2LogsQueryRelatedEntitiesResponse200ApplicationJson1),
  );
}

export function postV2LogsQueryRelatedEntitiesResponse200ApplicationJson1FromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponse200RelatedEntities$inboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsResponse200RelatedEntities,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2$inboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3$inboundSchema
    ),
  ]);

/** @internal */
export type PostV2LogsQueryItemsResponse200RelatedEntities$Outbound =
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2$Outbound
  | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3$Outbound;

/** @internal */
export const PostV2LogsQueryItemsResponse200RelatedEntities$outboundSchema:
  z.ZodType<
    PostV2LogsQueryItemsResponse200RelatedEntities$Outbound,
    z.ZodTypeDef,
    PostV2LogsQueryItemsResponse200RelatedEntities
  > = z.union([
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2$outboundSchema
    ),
    z.lazy(() =>
      PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponse200RelatedEntities$ {
  /** @deprecated use `PostV2LogsQueryItemsResponse200RelatedEntities$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponse200RelatedEntities$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200RelatedEntities$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponse200RelatedEntities$outboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200RelatedEntities$Outbound` instead. */
  export type Outbound =
    PostV2LogsQueryItemsResponse200RelatedEntities$Outbound;
}

export function postV2LogsQueryItemsResponse200RelatedEntitiesToJSON(
  postV2LogsQueryItemsResponse200RelatedEntities:
    PostV2LogsQueryItemsResponse200RelatedEntities,
): string {
  return JSON.stringify(
    PostV2LogsQueryItemsResponse200RelatedEntities$outboundSchema.parse(
      postV2LogsQueryItemsResponse200RelatedEntities,
    ),
  );
}

export function postV2LogsQueryItemsResponse200RelatedEntitiesFromJSON(
  jsonString: string,
): SafeParseResult<
  PostV2LogsQueryItemsResponse200RelatedEntities,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2LogsQueryItemsResponse200RelatedEntities$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PostV2LogsQueryItemsResponse200RelatedEntities' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryItemsResponse200Action$inboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsResponse200Action> = z.nativeEnum(
    PostV2LogsQueryItemsResponse200Action,
  );

/** @internal */
export const PostV2LogsQueryItemsResponse200Action$outboundSchema:
  z.ZodNativeEnum<typeof PostV2LogsQueryItemsResponse200Action> =
    PostV2LogsQueryItemsResponse200Action$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryItemsResponse200Action$ {
  /** @deprecated use `PostV2LogsQueryItemsResponse200Action$inboundSchema` instead. */
  export const inboundSchema =
    PostV2LogsQueryItemsResponse200Action$inboundSchema;
  /** @deprecated use `PostV2LogsQueryItemsResponse200Action$outboundSchema` instead. */
  export const outboundSchema =
    PostV2LogsQueryItemsResponse200Action$outboundSchema;
}

/** @internal */
export const ItemsData$inboundSchema: z.ZodType<
  ItemsData,
  z.ZodTypeDef,
  unknown
> = z.object({
  remote_config_id: z.string(),
  remote_config_key: z.string(),
  remote_config_type: z.string(),
  remote_config_version: z.number(),
  remote_config_variant_id: z.string(),
  remote_config_variant_position: z.number(),
  remote_config_value: z.any().optional(),
  is_default_matched: z.boolean(),
  action: PostV2LogsQueryItemsResponse200Action$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "remote_config_id": "remoteConfigId",
    "remote_config_key": "remoteConfigKey",
    "remote_config_type": "remoteConfigType",
    "remote_config_version": "remoteConfigVersion",
    "remote_config_variant_id": "remoteConfigVariantId",
    "remote_config_variant_position": "remoteConfigVariantPosition",
    "remote_config_value": "remoteConfigValue",
    "is_default_matched": "isDefaultMatched",
  });
});

/** @internal */
export type ItemsData$Outbound = {
  remote_config_id: string;
  remote_config_key: string;
  remote_config_type: string;
  remote_config_version: number;
  remote_config_variant_id: string;
  remote_config_variant_position: number;
  remote_config_value?: any | undefined;
  is_default_matched: boolean;
  action: string;
};

/** @internal */
export const ItemsData$outboundSchema: z.ZodType<
  ItemsData$Outbound,
  z.ZodTypeDef,
  ItemsData
> = z.object({
  remoteConfigId: z.string(),
  remoteConfigKey: z.string(),
  remoteConfigType: z.string(),
  remoteConfigVersion: z.number(),
  remoteConfigVariantId: z.string(),
  remoteConfigVariantPosition: z.number(),
  remoteConfigValue: z.any().optional(),
  isDefaultMatched: z.boolean(),
  action: PostV2LogsQueryItemsResponse200Action$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    remoteConfigId: "remote_config_id",
    remoteConfigKey: "remote_config_key",
    remoteConfigType: "remote_config_type",
    remoteConfigVersion: "remote_config_version",
    remoteConfigVariantId: "remote_config_variant_id",
    remoteConfigVariantPosition: "remote_config_variant_position",
    remoteConfigValue: "remote_config_value",
    isDefaultMatched: "is_default_matched",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemsData$ {
  /** @deprecated use `ItemsData$inboundSchema` instead. */
  export const inboundSchema = ItemsData$inboundSchema;
  /** @deprecated use `ItemsData$outboundSchema` instead. */
  export const outboundSchema = ItemsData$outboundSchema;
  /** @deprecated use `ItemsData$Outbound` instead. */
  export type Outbound = ItemsData$Outbound;
}

export function itemsDataToJSON(itemsData: ItemsData): string {
  return JSON.stringify(ItemsData$outboundSchema.parse(itemsData));
}

export function itemsDataFromJSON(
  jsonString: string,
): SafeParseResult<ItemsData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemsData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemsData' from JSON`,
  );
}

/** @internal */
export const Items1$inboundSchema: z.ZodType<Items1, z.ZodTypeDef, unknown> = z
  .object({
    _id: z.string(),
    workspace_id: z.string(),
    workflow_metadata: z.record(z.any()).optional(),
    workflow_input: z.record(z.any()).optional(),
    workflow_output: z.record(z.any()).optional(),
    project_id: z.string().optional(),
    request_properties: z.lazy(() =>
      PostV2LogsQueryItemsResponse200RequestProperties$inboundSchema
    ).optional(),
    started_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
    finished_at: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    evals: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryEvalsResponse200ApplicationJson1$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryEvalsResponse200ApplicationJson2$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryEvalsResponse200ApplicationJson3$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryEvalsResponse200ApplicationJson4$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryEvalsResponse200ApplicationJson5$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryEvalsResponse200ApplicationJson6$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryEvalsResponse200ApplicationJson7$inboundSchema
        ),
      ]),
    ),
    product_type: PostV2LogsQueryItemsResponse200ProductType$inboundSchema,
    related_entities: z.array(
      z.union([
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2$inboundSchema
        ),
        z.lazy(() =>
          PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3$inboundSchema
        ),
      ]),
    ),
    data: z.lazy(() => ItemsData$inboundSchema),
  }).transform((v) => {
    return remap$(v, {
      "_id": "id",
      "workspace_id": "workspaceId",
      "workflow_metadata": "workflowMetadata",
      "workflow_input": "workflowInput",
      "workflow_output": "workflowOutput",
      "project_id": "projectId",
      "request_properties": "requestProperties",
      "started_at": "startedAt",
      "finished_at": "finishedAt",
      "product_type": "productType",
      "related_entities": "relatedEntities",
    });
  });

/** @internal */
export type Items1$Outbound = {
  _id: string;
  workspace_id: string;
  workflow_metadata?: { [k: string]: any } | undefined;
  workflow_input?: { [k: string]: any } | undefined;
  workflow_output?: { [k: string]: any } | undefined;
  project_id?: string | undefined;
  request_properties?:
    | PostV2LogsQueryItemsResponse200RequestProperties$Outbound
    | undefined;
  started_at: string;
  finished_at?: string | undefined;
  evals: Array<
    | PostV2LogsQueryEvalsResponse200ApplicationJson1$Outbound
    | PostV2LogsQueryEvalsResponse200ApplicationJson2$Outbound
    | PostV2LogsQueryEvalsResponse200ApplicationJson3$Outbound
    | PostV2LogsQueryEvalsResponse200ApplicationJson4$Outbound
    | PostV2LogsQueryEvalsResponse200ApplicationJson5$Outbound
    | PostV2LogsQueryEvalsResponse200ApplicationJson6$Outbound
    | PostV2LogsQueryEvalsResponse200ApplicationJson7$Outbound
  >;
  product_type: string;
  related_entities: Array<
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2$Outbound
    | PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3$Outbound
  >;
  data: ItemsData$Outbound;
};

/** @internal */
export const Items1$outboundSchema: z.ZodType<
  Items1$Outbound,
  z.ZodTypeDef,
  Items1
> = z.object({
  id: z.string(),
  workspaceId: z.string(),
  workflowMetadata: z.record(z.any()).optional(),
  workflowInput: z.record(z.any()).optional(),
  workflowOutput: z.record(z.any()).optional(),
  projectId: z.string().optional(),
  requestProperties: z.lazy(() =>
    PostV2LogsQueryItemsResponse200RequestProperties$outboundSchema
  ).optional(),
  startedAt: z.date().transform(v => v.toISOString()),
  finishedAt: z.date().transform(v => v.toISOString()).optional(),
  evals: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJson1$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJson2$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJson3$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJson4$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJson5$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJson6$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryEvalsResponse200ApplicationJson7$outboundSchema
      ),
    ]),
  ),
  productType: PostV2LogsQueryItemsResponse200ProductType$outboundSchema,
  relatedEntities: z.array(
    z.union([
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson1$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson2$outboundSchema
      ),
      z.lazy(() =>
        PostV2LogsQueryRelatedEntitiesResponse200ApplicationJson3$outboundSchema
      ),
    ]),
  ),
  data: z.lazy(() => ItemsData$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    workspaceId: "workspace_id",
    workflowMetadata: "workflow_metadata",
    workflowInput: "workflow_input",
    workflowOutput: "workflow_output",
    projectId: "project_id",
    requestProperties: "request_properties",
    startedAt: "started_at",
    finishedAt: "finished_at",
    productType: "product_type",
    relatedEntities: "related_entities",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Items1$ {
  /** @deprecated use `Items1$inboundSchema` instead. */
  export const inboundSchema = Items1$inboundSchema;
  /** @deprecated use `Items1$outboundSchema` instead. */
  export const outboundSchema = Items1$outboundSchema;
  /** @deprecated use `Items1$Outbound` instead. */
  export type Outbound = Items1$Outbound;
}

export function items1ToJSON(items1: Items1): string {
  return JSON.stringify(Items1$outboundSchema.parse(items1));
}

export function items1FromJSON(
  jsonString: string,
): SafeParseResult<Items1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Items1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Items1' from JSON`,
  );
}

/** @internal */
export const Items$inboundSchema: z.ZodType<Items, z.ZodTypeDef, unknown> = z
  .union([
    z.lazy(() => Items1$inboundSchema),
    z.lazy(() => Items2$inboundSchema),
    z.lazy(() => Items3$inboundSchema),
    z.lazy(() => Items4$inboundSchema),
  ]);

/** @internal */
export type Items$Outbound =
  | Items1$Outbound
  | Items2$Outbound
  | Items3$Outbound
  | Items4$Outbound;

/** @internal */
export const Items$outboundSchema: z.ZodType<
  Items$Outbound,
  z.ZodTypeDef,
  Items
> = z.union([
  z.lazy(() => Items1$outboundSchema),
  z.lazy(() => Items2$outboundSchema),
  z.lazy(() => Items3$outboundSchema),
  z.lazy(() => Items4$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Items$ {
  /** @deprecated use `Items$inboundSchema` instead. */
  export const inboundSchema = Items$inboundSchema;
  /** @deprecated use `Items$outboundSchema` instead. */
  export const outboundSchema = Items$outboundSchema;
  /** @deprecated use `Items$Outbound` instead. */
  export type Outbound = Items$Outbound;
}

export function itemsToJSON(items: Items): string {
  return JSON.stringify(Items$outboundSchema.parse(items));
}

export function itemsFromJSON(
  jsonString: string,
): SafeParseResult<Items, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Items$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Items' from JSON`,
  );
}

/** @internal */
export const PostV2LogsQueryResponseBody$inboundSchema: z.ZodType<
  PostV2LogsQueryResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  count: z.number(),
  items: z.array(
    z.union([
      z.lazy(() => Items1$inboundSchema),
      z.lazy(() => Items2$inboundSchema),
      z.lazy(() => Items3$inboundSchema),
      z.lazy(() => Items4$inboundSchema),
    ]),
  ),
  nextLastId: z.nullable(z.string()).optional(),
});

/** @internal */
export type PostV2LogsQueryResponseBody$Outbound = {
  count: number;
  items: Array<
    Items1$Outbound | Items2$Outbound | Items3$Outbound | Items4$Outbound
  >;
  nextLastId?: string | null | undefined;
};

/** @internal */
export const PostV2LogsQueryResponseBody$outboundSchema: z.ZodType<
  PostV2LogsQueryResponseBody$Outbound,
  z.ZodTypeDef,
  PostV2LogsQueryResponseBody
> = z.object({
  count: z.number(),
  items: z.array(
    z.union([
      z.lazy(() => Items1$outboundSchema),
      z.lazy(() => Items2$outboundSchema),
      z.lazy(() => Items3$outboundSchema),
      z.lazy(() => Items4$outboundSchema),
    ]),
  ),
  nextLastId: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2LogsQueryResponseBody$ {
  /** @deprecated use `PostV2LogsQueryResponseBody$inboundSchema` instead. */
  export const inboundSchema = PostV2LogsQueryResponseBody$inboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseBody$outboundSchema` instead. */
  export const outboundSchema = PostV2LogsQueryResponseBody$outboundSchema;
  /** @deprecated use `PostV2LogsQueryResponseBody$Outbound` instead. */
  export type Outbound = PostV2LogsQueryResponseBody$Outbound;
}

export function postV2LogsQueryResponseBodyToJSON(
  postV2LogsQueryResponseBody: PostV2LogsQueryResponseBody,
): string {
  return JSON.stringify(
    PostV2LogsQueryResponseBody$outboundSchema.parse(
      postV2LogsQueryResponseBody,
    ),
  );
}

export function postV2LogsQueryResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<PostV2LogsQueryResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2LogsQueryResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2LogsQueryResponseBody' from JSON`,
  );
}
